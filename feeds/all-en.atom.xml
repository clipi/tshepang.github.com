<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tshepang logs</title><link href="http://tshepang.net/" rel="alternate"></link><link href="http://tshepang.net/feeds/all-en.atom.xml" rel="self"></link><id>http://tshepang.net/</id><updated>2013-11-26T19:24:24+02:00</updated><entry><title>favorite FLOSS</title><link href="http://tshepang.net/favorite-floss" rel="alternate"></link><updated>2013-11-26T02:05:59+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-26:favorite-floss</id><summary type="html">&lt;p&gt;For a piece of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open-source_software"&gt;FLOSS&lt;/a&gt; (free/libre and open source software) to be here,
it has to both be personally useful and I have to like it a lot:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;backup:&lt;/strong&gt; &lt;a class="reference external" href="http://tshepang.net/project-of-note-rdiff-backup"&gt;rdiff-backup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;desktop&lt;/strong&gt;: &lt;a class="reference external" href="http://dwm.suckless.org"&gt;dwm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;development&lt;/strong&gt;: Python, Emacs, &lt;a class="reference external" href="http://tshepang.net/project-of-note-git-cola"&gt;git-cola&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;file manager&lt;/strong&gt;: Nautilus, Emacs (Dired mode)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;misc utilities:&lt;/strong&gt; grep, &lt;a class="reference external" href="http://tshepang.net/project-of-note-sudo"&gt;Sudo&lt;/a&gt;, &lt;a class="reference external" href="http://tshepang.net/project-of-note-reprepro"&gt;reprepro&lt;/a&gt;, Lsof, less, Meld,
Uptimed, top, &lt;a class="reference external" href="http://projects.gnome.org/tracker"&gt;Tracker&lt;/a&gt;, Ex Falso, wajig,
&lt;a class="reference external" href="http://tshepang.net/xfrun4-rocks"&gt;xfrun4&lt;/a&gt;, coreutils (wc, tail), &lt;a class="reference external" href="http://tshepang.net/project-of-note-linkchecker"&gt;LinkChecker&lt;/a&gt;, &lt;a class="reference external" href="http://guichaz.free.fr/iotop"&gt;Iotop&lt;/a&gt;, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Man_page"&gt;man&lt;/a&gt;,
OpenSSH, &lt;a class="reference external" href="http://humdi.net/vnstat"&gt;vnstat&lt;/a&gt;, &lt;a class="reference external" href="http://tmux.sourceforge.net"&gt;tmux&lt;/a&gt;, File Roller, &lt;a class="reference external" href="http://fabfile.org"&gt;Fabric&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;spreadsheet:&lt;/strong&gt; gnumeric&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;terminal emulator&lt;/strong&gt;: GNOME Terminal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;virtualisation&lt;/strong&gt;: VirtualBox&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;version control system&lt;/strong&gt;: &lt;a class="reference external" href="http://mercurial.selenic.com"&gt;Mercurial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;web browser&lt;/strong&gt;: Chrome/Chromium&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;non-FLOSS:&lt;/strong&gt; &lt;a class="reference external" href="http://disqus.com"&gt;Disqus&lt;/a&gt;, &lt;a class="reference external" href="http://mail.google.com/mail"&gt;Gmail&lt;/a&gt;, &lt;a class="reference external" href="http://stackexchange.com"&gt;Stack Exchange&lt;/a&gt;, &lt;a class="reference external" href="http://bitbucket.org"&gt;Bitbucket&lt;/a&gt;&lt;/p&gt;
</summary><category term="list"></category></entry><entry><title>FLOSS I use a-lot</title><link href="http://tshepang.net/floss-i-use-a-lot" rel="alternate"></link><updated>2013-11-26T02:03:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-26:floss-i-use-a-lot</id><summary type="html">&lt;p&gt;Following are tools I use a lot, but am not necessarily loving.
For those I like a lot, see &lt;a class="reference external" href="http://tshepang.net/favorite-floss"&gt;this list&lt;/a&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Debian&lt;/strong&gt;: my primary OS, and also my favorite&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;wajig&lt;/strong&gt;: &lt;a class="reference external" href="http://tshepang.net/tags#wajig-ref"&gt;I also develop and maintain it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;APT&lt;/strong&gt;: a collection of Debian package management tools&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aptitude&lt;/strong&gt;: I mainly use its &lt;tt class="docutils literal"&gt;search&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;show&lt;/tt&gt; subcommands;
the equivalent functionality in APT is lesser&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;editors&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Emacs&lt;/strong&gt;: my favorite&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vim&lt;/strong&gt;: it happens to be installed on a lot of systems at work,
and I do like it somewhat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;software development&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git-cola&lt;/strong&gt;: &lt;a class="reference external" href="http://tshepang.net/project-of-note-git-cola"&gt;why me loves it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GNU toolchain&lt;/strong&gt; (GCC, make, GLibC, ...)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt;: as if I had a choice... work and open source&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mercurial&lt;/strong&gt;: my favorite&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://meldmerge.org"&gt;Meld&lt;/a&gt;: the most excellent diff tool I've used yet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;entertainment&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Quod Libet&lt;/strong&gt;: audio player&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VLC&lt;/strong&gt;: ugly interface, solid application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;misc&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Evince&lt;/strong&gt;: I would love to get a PDF reader with better navigation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google Chrome&lt;/strong&gt; and &lt;strong&gt;Firefox&lt;/strong&gt;: I switch between these
equally-good web browsers, but am gravitating towards Firefox&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gnumeric&lt;/strong&gt;: it's faster than LibreOffice spreadsheet, and has
superior search interface&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lzone.de/liferea"&gt;Liferea&lt;/a&gt;: would not be using this had it not been for Google Reader
shutdown, but am glad they did cuz I like the tool, ugly and unkool
as it is&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenSSH&lt;/strong&gt;: duh!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thunderbird&lt;/strong&gt;: I prefer Evolution, but it gave me some issues I
don't remember&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tmux.sourceforge.net"&gt;tmux&lt;/a&gt;: amazingly powerul!&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.transmissionbt.com"&gt;Transmission&lt;/a&gt;: the only torrent client I ever used&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.greenwoodsoftware.com/less"&gt;less&lt;/a&gt;: indispensable!&lt;/li&gt;
&lt;li&gt;Nautilus: favorite GUI file manager&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://fileroller.sourceforge.net"&gt;File Roller&lt;/a&gt;: nice and simple GUI archive manager&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="list"></category></entry><entry><title>pleasantly surprised by replace-string (Emacs)</title><link href="http://tshepang.net/pleasantly-surprised-by-replace-string-emacs" rel="alternate"></link><updated>2013-11-26T19:24:24+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-26:pleasantly-surprised-by-replace-string-emacs</id><summary type="html">&lt;p&gt;If you want to replace some string in Emacs, the primary function to
use is &lt;strong&gt;replace-string&lt;/strong&gt; (I think). If the strings, 'old' and 'new'
are provided, it will, by default, replace all occurrences, regardless
of case, while also preserving case of whatever 'old' was. It's
magical yes, but who doesn't like some magic once in a while,
especially when it's so convenient... and so sane.&lt;/p&gt;
&lt;p&gt;(&lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Replacement-and-Case.html#Replacement-and-Case"&gt;official description&lt;/a&gt;)&lt;/p&gt;
</summary><category term="Emacs"></category></entry><entry><title>links 2013-11-18</title><link href="http://tshepang.net/links-2013-11-18" rel="alternate"></link><updated>2013-11-19T02:15:41+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-18:links-2013-11-18</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://joey.hess.usesthis.com"&gt;an impressively modest computing (and living) setup&lt;/a&gt; - this is
probably the most respected of Debian Developers&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=66;att=0;bug=718323"&gt;a nice explanation&lt;/a&gt; of why a specific Creative Commons license
isn't suitable for Debian (&lt;a class="reference external" href="http://bugs.debian.org/718323"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;since &lt;a class="reference external" href="http://www.etla.fi/en/columns/worth-brand"&gt;it's hard to trust any one of the major brand valuators&lt;/a&gt;, I
will have to reply on &lt;a class="reference external" href="http://www.rankingthebrands.com"&gt;an aggregator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://rhodesmill.org/brandon/2012/reading-planet-python"&gt;on the limitations of Planet Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jessenoller.com/blog/2009/02/05/ssh-programming-with-paramiko-completely-different"&gt;nice paramiko tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="Python"></category><category term="links"></category></entry><entry><title>hierarchy of individuals in FLOSS projects</title><link href="http://tshepang.net/hierarchy-of-individuals-in-floss-projects" rel="alternate"></link><updated>2013-11-16T10:23:42+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-16:hierarchy-of-individuals-in-floss-projects</id><summary type="html">&lt;p&gt;From top to bottom:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Author&lt;/p&gt;
&lt;p&gt;Sometimes referred to as primary author, to distinguish between
other people who have contributed to the project, this is the
creator. At times, someone in the lower ranks of the hierarchy
happen to be more active in the project than the Author, in which
case the Author often makes them Maintainer, explicitly or
not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Maintainer&lt;/p&gt;
&lt;p&gt;This is someone ultimately responsible for the project: handles bug
reports, decides which changes to accept from lower contributors,
and performs releases. Note that there can be more than one, unlike
is the case with Author.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Contributor&lt;/p&gt;
&lt;p&gt;This is someone who submits improvements to project, either
documentation or code. It can be a one-time contribution, but in
case where this is frequent and spans a certain amount of time, she
can move onto becoming a Maintainer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Bug Reporter&lt;/p&gt;
&lt;p&gt;This is someone who suggests improvements to the project. Depending
on the project, any of these are used: a mailing list, an IRC
channel, a social networking service, email, or a dedicated
Issue/Bug tracking system can be used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;User&lt;/p&gt;
&lt;p&gt;What the user is depends on the project, of course. Just to be
clear, in the case of Python project, the user is a software
developer, not the person who ends up using something written in
the language.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The 'individual' in title means I'm ignoring non-human entities, like
companies. I'm also ignoring non-core activities, like marketers or
sysadmins, or even teachers. Those are not going to be easy to fit in
this simple story, and are not common to that many FLOSS (Free/Libre
and Open Source) projects.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;In the case of &lt;a class="reference external" href="http://linux.togaware.com/survivor/wajig.html"&gt;wajig&lt;/a&gt;, I am the Maintainer and Graham Williams is the
Author. In the case of &lt;a class="reference external" href="https://github.com/paramiko/paramiko"&gt;paramiko&lt;/a&gt;, a far more important project, &lt;a class="reference external" href="http://bitprophet.org/blog/2012/09/29/paramiko-and-ssh"&gt;Jeff
Forcier is the Maintainer&lt;/a&gt;. The project was however created by
&lt;a class="reference external" href="http://robey.lag.net"&gt;Robey Pointer&lt;/a&gt;, and &lt;a class="reference external" href="http://robey.lag.net/2009/02/16/paramiko-is-on-github-now.html"&gt;he did not imagine&lt;/a&gt; it would end
up being THE Python SSH library today.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>Introducing Hedzoleh Soundz (1973)</title><link href="http://tshepang.net/introducing-hedzoleh-soundz-1973" rel="alternate"></link><updated>2013-11-16T11:33:18+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-16:introducing-hedzoleh-soundz-1973</id><summary type="html">&lt;p&gt;Several months ago, I bumped onto this jazz album by &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Hugh_Masekela"&gt;Hugh
Masekela&lt;/a&gt;. It sounds quite different to his more popular tracks, and
although it has a South African feel to it (Masekela is a citizen of
that country), the more dominating feel is from elsewhere in Africa
(just don't ask me where).&lt;/p&gt;
&lt;p&gt;My favorites:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;track 3: &lt;strong&gt;Adade&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;track 4: &lt;strong&gt;Yei Baa Gbe Wolo&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;track 6: &lt;strong&gt;When&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;track 7: &lt;strong&gt;Nye Tamo Ame&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;track 8: &lt;strong&gt;Rekpete&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="music"></category><category term="very-good"></category></entry><entry><title>a bit of benchmarking</title><link href="http://tshepang.net/a-bit-of-benchmarking" rel="alternate"></link><updated>2013-11-23T20:00:22+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-27:a-bit-of-benchmarking</id><summary type="html">&lt;p&gt;I was curious how my home machine performs compared to my work
machine. Each of these have 4 logical processors (and 8GB of RAM), so
are sort of comparable. I also added the &lt;a class="reference external" href="https://www.digitalocean.com/?refcode=25b4887810cc"&gt;DigitalOcean&lt;/a&gt; VPS with
those specs (&lt;a class="reference external" href="https://www.digitalocean.com/pricing"&gt;currently $80 per month&lt;/a&gt;) because... why not.&lt;/p&gt;
&lt;div class="section" id="machine-specs"&gt;
&lt;h2&gt;Machine Specs&lt;/h2&gt;
&lt;p&gt;Each machine runs Debian testing (codename &amp;quot;jessie&amp;quot;). Following is the
output of these commands for each machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
uname --all
cat /proc/cpuinfo | sed --quiet '5p'
&lt;/pre&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Linux thome 3.11-trunk-amd64 #1 SMP Debian 3.11-1~exp1 (2013-09-12) x86_64 GNU/Linux
model name      : Intel(R) Core(TM) i5-2410M CPU &amp;#64; 2.30GHz
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Linux twork 3.10-3-amd64 #1 SMP Debian 3.10.11-1 (2013-09-10) x86_64 GNU/Linux
model name      : AMD Phenom(tm) II X4 970 Processor
&lt;/pre&gt;
&lt;p&gt;DigitalOcean VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Linux tcloud 3.11-1-amd64 #1 SMP Debian 3.11.5-1 (2013-10-17) x86_64 GNU/Linux
model name      : QEMU Virtual CPU version 1.0
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="cpython-benchmarks"&gt;
&lt;h2&gt;CPython benchmarks&lt;/h2&gt;
&lt;p&gt;I ran two benchmarks, both from the latest VCS version of CPython,
development branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ hg identify --id --branch
b6a1a78818fe default
&lt;/pre&gt;
&lt;div class="section" id="build"&gt;
&lt;h3&gt;Build&lt;/h3&gt;
&lt;p&gt;Here's the command I used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
make distclean; time (./configure &amp;amp;&amp;amp; make --silent --jobs=4)
&lt;/pre&gt;
&lt;div class="section" id="results"&gt;
&lt;h4&gt;Results&lt;/h4&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m11.687s
user    3m18.104s
sys     0m9.964s
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m2.707s
user    2m24.200s
sys     0m12.280s
&lt;/pre&gt;
&lt;p&gt;VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m30.931s
user    3m7.272s
sys     0m16.592s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="test-suite"&gt;
&lt;h3&gt;Test suite&lt;/h3&gt;
&lt;p&gt;Here's the command I used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
time ./python -m test --multiprocess=0
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;--multiprocess=0&lt;/strong&gt; means that there will be 6 tests run in parallel;
that is the number logical cores (4 in my case) + 2 (to avoid waiting
too long for tests which are largely idle)&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;Results&lt;/h4&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    3m42.571s
user    7m13.124s
sys     0m33.320s
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m29.957s
user    4m9.052s
sys     0m27.364s
&lt;/pre&gt;
&lt;p&gt;VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m19.174s
user    5m5.444s
sys     0m40.008s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="linux-kernel-build"&gt;
&lt;h2&gt;Linux kernel build&lt;/h2&gt;
&lt;p&gt;Just for kicks, I decided to check how long building Linux would take;
for this, I used latest 'final' release from Linus' git tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git log -1
commit 6e4664525b1db28f8c4e1130957f70a94c19213e
Author: Linus Torvalds &amp;lt;torvalds&amp;#64;linux-foundation.org&amp;gt;
Date:   Mon Sep 2 13:46:10 2013 -0700

Linux 3.11
&lt;/pre&gt;
&lt;p&gt;Here's the commands I used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
make distclean &amp;amp;&amp;amp; make defconfig &amp;amp;&amp;amp; time make
&lt;/pre&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    6m11.622s
user    21m2.664s
sys     1m15.324s
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m40.275s
user    8m55.624s
sys     0m42.860s
&lt;/pre&gt;
&lt;p&gt;VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    3m41.240s
user    12m21.120s
sys     1m17.844s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;My work machine is faster than the DigitalOcean offering of comparable
specs, and much faster than my home machine, a laptop.&lt;/p&gt;
&lt;p&gt;(&lt;a class="reference external" href="http://stackoverflow.com/a/556411/321731"&gt;detailed explanation of the output&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Python"></category></entry><entry><title>ideal static blog generator</title><link href="http://tshepang.net/ideal-static-blog-generator" rel="alternate"></link><updated>2013-10-19T08:44:45+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-19:ideal-static-blog-generator</id><summary type="html">&lt;p&gt;Anything not listed below is either stuff I take for granted or simply
missed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;reStructuredText&lt;/a&gt; support is mandatory, and so is being written in
Python (I is a fanboy).&lt;/li&gt;
&lt;li&gt;Ordered by preference:&lt;ul&gt;
&lt;li&gt;The latest post should be displayed in its entirety, followed by
an Archives View (just Post title and date) or a subset
(i.e. Recent Posts).&lt;/li&gt;
&lt;li&gt;It should be an Archives View (or a subset).&lt;/li&gt;
&lt;li&gt;It should be an About Page.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Categories should be determined by directory into which a file (the
raw material for a Post) is placed. Specifying this in the metadata
section of the file should of course take precedence.&lt;/li&gt;
&lt;li&gt;Publish date should never be placed at the bottom of a Post. It is
too important a piece metadata to treat this way.&lt;/li&gt;
&lt;li&gt;An option to have clean urls (i.e. trailing &lt;tt class="docutils literal"&gt;.html&lt;/tt&gt; removed).&lt;/li&gt;
&lt;li&gt;Date-based directory structure should not be mandatory (&lt;a class="reference external" href="https://bitbucket.org/vladris/tinkerer/issue/41"&gt;unlike with
Tinkerer&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Inline literals and literal blocks (for code) should be
distinguished by background colour; using a different font is just not
good enough.&lt;/li&gt;
&lt;li&gt;Tags (and maybe Categories) should be displayed on each post.&lt;/li&gt;
&lt;li&gt;A feed icon that is visible from the main page (and maybe Category
pages).&lt;/li&gt;
&lt;li&gt;Blogofile has a strange requirement of having &lt;a class="reference external" href="http://docs.blogofile.com/en/latest/posts.html"&gt;post headers be YAML
format&lt;/a&gt;. Maybe there's a good reason, but I want my generator to
not require anything special in file contents.&lt;/li&gt;
&lt;li&gt;(minor) Ability to determine Publish date from file mtime&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="blogging"></category></entry><entry><title>projects with excellent documentation</title><link href="http://tshepang.net/projects-with-excellent-documentation" rel="alternate"></link><updated>2013-11-26T19:24:24+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-19:projects-with-excellent-documentation</id><summary type="html">&lt;p&gt;Here is a list of projects whose documentation I found to be
highly-detailed and well-written.&lt;/p&gt;
&lt;div class="section" id="big"&gt;
&lt;h2&gt;big&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://cmgm.stanford.edu/classes/unix/emacs.html"&gt;introductory tutorial of GNU Emacs&lt;/a&gt; (looks a lot better when
run from within Emacs), is written in a very gentle and careful way;
it's among the best tutorials I've seen.  Same applies to &lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs"&gt;the Emacs
manual&lt;/a&gt;, which I'm tempted to call the best I've read yet. It
really, really goes into painstaking detail, and seems to have been
written by professional technical writers.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org"&gt;CPython&lt;/a&gt; - this is quite massive, so although quality is generally
high, it varies depending on where you are; &lt;a class="reference external" href="http://docs.python.org/3/library/collections"&gt;an example of
excellence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sqlite.org/docs.html"&gt;sqlite3&lt;/a&gt; - quite extensive, especially for an embeddable DBMS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="small"&gt;
&lt;h2&gt;small&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://fedorahosted.org/suds/wiki/Documentation"&gt;Suds&lt;/a&gt; - multiple, well-written examples&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.nongnu.org/rdiff-backup/examples.html"&gt;rdiff-backup usage examples&lt;/a&gt; - much smaller than the others listed
here, but nevertheless deserves mention because it's both gentle and
thorough&lt;/li&gt;
&lt;li&gt;While working on giving a product of ours &lt;a class="reference external" href="http://tshepang.net/me-got-meself-another-coding-job"&gt;at work&lt;/a&gt; the ability to
speak &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Socketcan"&gt;SocketCAN&lt;/a&gt;, I really appreciated its &lt;a class="reference external" href="http://www.kernel.org/doc/Documentation/networking/can.txt"&gt;official
documentation&lt;/a&gt;. It is very well-written and thorough (though it
assumes prior knowledge of working with Linux sockets).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="list"></category><category term="Emacs"></category><category term="Python"></category></entry><entry><title>project of note: git-cola</title><link href="http://tshepang.net/project-of-note-git-cola" rel="alternate"></link><updated>2013-10-17T23:51:26+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-17:project-of-note-git-cola</id><summary type="html">&lt;p&gt;I use &lt;a class="reference external" href="http://git-cola.github.io"&gt;git-cola&lt;/a&gt; mostly when I want to commit various hunks separately;
it makes that task real easy.&lt;/p&gt;
&lt;p&gt;I was impressed by its equivalent functionality for the git
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--amend&lt;/span&gt;&lt;/tt&gt; option the first time I saw it. If you click on the
&lt;strong&gt;Amend Last Commit&lt;/strong&gt; radio button, it actually displays the commit
message of that previous commit.  I was surprised to see it,
especially since on clicking that option, I quickly ran to the
command-line to copy that commit message, only to see the message
waiting for me, ready to be edited away.&lt;/p&gt;
&lt;p&gt;Another feature I really like is that if you attempt to commit something
without staging it first, instead of just complaining, if offers to
&lt;em&gt;stage and commit&lt;/em&gt; all in one click. Nice.&lt;/p&gt;
&lt;p&gt;These functionalities are real simple, but they really make for a
pleasant user experience. Pity I haven't seen a tool as easy to use in
the land of Mercurial. There, I use the command-line &lt;tt class="docutils literal"&gt;hg record&lt;/tt&gt;
which isn't as pleasant.&lt;/p&gt;
</summary><category term="project-of-note"></category><category term="VCS"></category></entry><entry><title>easing switching between Git and Mercurial</title><link href="http://tshepang.net/easing-switching-between-git-and-mercurial" rel="alternate"></link><updated>2013-10-16T22:31:32+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-16:easing-switching-between-git-and-mercurial</id><summary type="html">&lt;p&gt;Each chance I get, I use Mercurial (e.g. personal stuff), and use Git
when I don't have much of a choice (e.g. FLOSS and work). That is, I
use both quite a lot, and too often I find myself running commands for
one while on another's repository... error.&lt;/p&gt;
&lt;p&gt;I then decided to ease the pain my creating &lt;a class="reference external" href="https://bitbucket.org/tshepang/scripts/src/tip/vcs.py"&gt;a script&lt;/a&gt; which checks which
VCS system I'm on, and displays the relevant command.&lt;/p&gt;
&lt;p&gt;Some examples of usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;hg repo&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;./vcs.py --log
hg log --no-merges --patch --stat --verbose
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;git repo&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;./vcs.py --log
git log --no-merges --patch --stat
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are the relevant BASH aliases:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --branch)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --diff)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --log)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --push)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --status)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --pull)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --commit)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --checkout)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;vr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/projects/scripts/vcs.py --revert)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes my life so much easier, since I no longer have to care
which VCS I'm on, at least for the most common of commands. I am
pleased with self.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;As a sidenote, if you want to cycle between the changesets (Mercurial
term) or Commits (Git term), use the following search term on your
pager (tested with &lt;a class="reference external" href="http://www.greenwoodsoftware.com/less"&gt;less&lt;/a&gt;, which is Debian/Ubuntu default pager):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(^changeset)|(^commit)
&lt;/pre&gt;
</summary><category term="Python"></category><category term="VCS"></category></entry><entry><title>where I live on the web</title><link href="http://tshepang.net/where-i-live-on-the-web" rel="alternate"></link><updated>2013-10-17T07:36:17+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-16:where-i-live-on-the-web</id><summary type="html">&lt;p&gt;I spend perhaps too much of my time online, and these are among the
greatest culprits:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Debian&lt;/strong&gt;: &lt;a class="reference external" href="http://planet.debian.org/"&gt;planet Debian&lt;/a&gt;, &lt;a class="reference external" href="https://lists.debian.org/debian-devel"&gt;debian-devel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;a class="reference external" href="http://planet.python.org/"&gt;planet Python&lt;/a&gt;, &lt;a class="reference external" href="http://mail.python.org/mailman/listinfo/python-dev"&gt;python-dev&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/tshepang"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;misc&lt;/strong&gt;: &lt;a class="reference external" href="http://stackexchange.com/users/125744/tshepang"&gt;Stack Exchange&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/tshepang_dev"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
</summary><category term="Debian"></category><category term="Python"></category></entry><entry><title>developer of note: Armin Rigo</title><link href="http://tshepang.net/developer-of-note-armin-rigo" rel="alternate"></link><updated>2013-10-13T13:05:15+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-13:developer-of-note-armin-rigo</id><summary type="html">&lt;p&gt;Co-founder and lead developer of arguably the most exciting project in
the entire Python ecosystem, &lt;a class="reference external" href="http://pypy.org"&gt;PyPy&lt;/a&gt;.  He is also credited with doing
the bulk of the work in building its &lt;a class="reference external" href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain"&gt;legendary RPython translation
framework&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;What inspired this post (originally published 2013-03-31) is the
incredible honor given by the great Raymond Hettinger in &lt;a class="reference external" href="http://pyvideo.org/video/1669/keynote-3"&gt;one of his
PyCon US 2013 talks&lt;/a&gt;, where he deems him &amp;quot;probably the smartest
person I have ever met&amp;quot;.  Given that there isn't a shortage of
brilliance in the Python community, that's some serious kudos.&lt;/p&gt;
&lt;p&gt;Also, here is what one of speakers at that conferences said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... Armin Rigo is awesome - he's perhaps the only incredibly
intelligent person involved with programming I've met who seemed
genuinely happy about life (and not grumpy at all).&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://ashfall.github.io/blog/2013/03/23/pycon-2013-down-the-rabbit-hole"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="developer-of-note"></category><category term="Python"></category><category term="quote"></category></entry><entry><title>my first Debian upload</title><link href="http://tshepang.net/my-first-debian-upload" rel="alternate"></link><updated>2013-10-14T19:57:31+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-13:my-first-debian-upload</id><summary type="html">&lt;p&gt;Output of my first ever upload to Debian (using &lt;a class="reference external" href="http://packages.debian.org/dput"&gt;dput&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Trying to upload package to ftp-master (ftp.upload.debian.org)
Checking signature on .changes
gpg: Signature made Sun 13 Oct 2013 09:21:35 SAST using RSA key ID 500BF4A2
gpg: Good signature from &amp;quot;Tshepang Lekhonkhobe &amp;lt;tshepang&amp;#64;gmail.com&amp;gt;&amp;quot;
Good signature on ../wajig_2.10_amd64.changes.
Checking signature on .dsc
gpg: Signature made Sun 13 Oct 2013 09:21:31 SAST using RSA key ID 500BF4A2
gpg: Good signature from &amp;quot;Tshepang Lekhonkhobe &amp;lt;tshepang&amp;#64;gmail.com&amp;gt;&amp;quot;
Good signature on ../wajig_2.10.dsc.
Uploading to ftp-master (via ftp to ftp.upload.debian.org):
  Uploading wajig_2.10.dsc: done.
  Uploading wajig_2.10.tar.gz: done.
  Uploading wajig_2.10_all.deb: done.
  Uploading wajig_2.10_amd64.changes: done.
Successfully uploaded packages.
&lt;/pre&gt;
&lt;p&gt;(&lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20131013T074831Z.html"&gt;the package was accepted within 30 minutes&lt;/a&gt;)&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;And, yeah, that means &lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=12;bug=723802"&gt;I am now Debian Maintainer&lt;/a&gt;. Other than
giving me more freedom, this helps reduce the workload on &lt;a class="reference external" href="http://dirk.eddelbuettel.com"&gt;Dirk
Eddelbuettel&lt;/a&gt;, who has been uploading wajig for several years now. He
even &lt;a class="reference external" href="http://lists.debian.org/debian-newmaint/2013/09/msg00029.html"&gt;became an Advocate&lt;/a&gt; for &lt;a class="reference external" href="http://lists.debian.org/debian-newmaint/2013/09/msg00028.html"&gt;my application&lt;/a&gt;.  This process
started several weeks ago when a Debian Developer named &lt;a class="reference external" href="http://mithrandi.net/blog"&gt;Tristan
Seligmann&lt;/a&gt; signed my key &lt;a class="footnote-reference" href="#id9" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;before applying to be a Maintainer, a Debian Developer needs to
sign your key as a way of verifying your identity&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="Debian"></category><category term="wajig"></category></entry><entry><title>links 2013-10-12</title><link href="http://tshepang.net/links-2013-10-12" rel="alternate"></link><updated>2013-10-13T02:09:39+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-12:links-2013-10-12</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://happycstudio.see.me"&gt;nice artwork&lt;/a&gt; (&lt;a class="reference external" href="https://github.com/gittip/www.gittip.com/blob/master/README.md#see-also"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.eastoftheweb.com/short-stories/UBooks/TheyMade.shtml"&gt;They're Made out of Meat&lt;/a&gt; - nice sci-fi humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.eat24hours.com/how-to-advertise-on-a-porn-website"&gt;How to Advertise on a Porn Website&lt;/a&gt; - interesting, with decent
humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hezmatt.org/~mpalmer/blog/general/how_to_frustrate_your_train_driver.html"&gt;How to Frustrate Your Train Driver&lt;/a&gt; - delicious humor&lt;/li&gt;
&lt;li&gt;I have, for a long time, considered NYC the greatest city on the
planet, which is actually quite vague. &lt;a class="reference external" href="http://www.wired.com/business/2010/12/google-nyc"&gt;This article&lt;/a&gt; fixes that
for me... &lt;em&gt;the most important city in the world&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>my first server</title><link href="http://tshepang.net/my-first-server" rel="alternate"></link><updated>2013-10-12T22:18:20+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-10:my-first-server</id><summary type="html">&lt;p&gt;The closest I ever came to needing own server is for hosting &lt;a class="reference external" href="http://tshepang.net/tags.html#blogging-ref"&gt;my
blog&lt;/a&gt;, but I've had plenty of gratis services available to me, latest
being &lt;a class="reference external" href="http://pages.github.com"&gt;GitHub Pages&lt;/a&gt;. When &lt;a class="reference external" href="https://www.digitalocean.com/?refcode=25b4887810cc"&gt;DigitalOcean&lt;/a&gt; &lt;a class="reference external" href="http://thechangelog.com/107"&gt;offered a $10 credit&lt;/a&gt;
(enough to buy two months of the most basic offering... 1 CPU core,
0.5GB RAM, 20GB storage), I thought why not.&lt;/p&gt;
&lt;p&gt;As for the experience, I was quite impressed by the performance. It's
no wonder why the service receives so much praise from all over the
place; it's quite a lot for that ridiculous $5 fee. I've never
experienced storage this fast... my laptop has a hard-drive and the
SSD on my work machine is unimpressive. The CPU also appears powerful,
though I haven't stressed it yet.&lt;/p&gt;
&lt;p&gt;I've spent the last few hours setting it up, after which I created a
snapshot, which is something to restore from in case of trouble. I
even destroyed and re-created it, just to make sure it works. This was
the second-worst experience playing with this service... it's so damn
slow! And by that, I mean destroying a Droplet (their name for the VM)
takes well over a minute, same as re-creating it. Maybe I'm being too
demanding, maybe it can't be helped, especially given the price, but
it's still slow as fuck.&lt;/p&gt;
&lt;p&gt;What about the worst experience? It's the Console Access, which allows
for recovery in case of issues. It was painful to use since it's so
slow, and kept inserting wrong characters in place of the username. It
also tends to fail with the message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Failed to establish a connection to the console. Please reload.
&lt;/pre&gt;
&lt;p&gt;It's not a big issue anyways, since this will be a rarely-used
feature.&lt;/p&gt;
&lt;p&gt;And no, I still don't know yet what I'll use this for. Maybe I'll host
my blog there, moving it from the GitHub service. Regardless, it's
nice to have a machine accesible from anywhere on the web.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>links 2013-10-04</title><link href="http://tshepang.net/links-2013-10-04" rel="alternate"></link><updated>2013-10-05T10:37:11+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-04:links-2013-10-04</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lists.debian.org/debian-project/2013/08/msg00011.html"&gt;a nicely summarised survey of fresh Debian contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-gtk-gnome/2013/09/msg00014.html"&gt;excellent response to an unpleasant reply&lt;/a&gt; - &lt;a class="reference external" href="http://tshepang.net/developer-of-note-michael-biebl"&gt;I admire Michael
Biebl&lt;/a&gt;, but don't remember him be this harsh&lt;/li&gt;
&lt;li&gt;I enjoyed watching &lt;a class="reference external" href="http://pyvideo.org/video/2325/skyfield-and-15-years-of-bad-apis"&gt;Skyfield and 15 Years of Bad APIs&lt;/a&gt;, a far more
interesting talk than the earlier &lt;a class="reference external" href="http://pyvideo.org/video/1705/api-design-for-library-authors"&gt;API Design for Library
Authors&lt;/a&gt;. The former covers API design only in its 2nd half, and
the latter is exclusively all API talk. The former is also more
polished than the latter, both in terms of video editing, and how
presentable the presentation is.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tech.dropbox.com/2012/12/welcome-guido/"&gt;great kudos for (the great) Guido van Rossum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names"&gt;Falsehoods Programmers Believe About Names&lt;/a&gt; - interesting&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="Python"></category><category term="links"></category></entry><entry><title>from Pelican to liquidluck</title><link href="http://tshepang.net/from-pelican-to-liquidluck" rel="alternate"></link><updated>2013-10-17T00:45:16+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-03:from-pelican-to-liquidluck</id><summary type="html">&lt;p&gt;&lt;strong&gt;notes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This post was first published on &lt;strong&gt;2012-07-05&lt;/strong&gt;,
which is shortly after I started using &lt;a class="reference external" href="http://liquidluck.readthedocs.org"&gt;liquidluck&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I have since moved back to Pelican on &lt;strong&gt;2013-09-29&lt;/strong&gt;, with &lt;a class="reference external" href="http://oncrashreboot.com/pelican-elegant"&gt;Elegant
theme&lt;/a&gt;. Reason: slow liquidluck development (&lt;a class="reference external" href="https://github.com/lepture/liquidluck/issues/101"&gt;the author is busy
with other projects&lt;/a&gt;), though he has more recently been doing
&lt;a class="reference external" href="https://github.com/lepture/liquidluck/issues/104#issuecomment-22825084"&gt;some large changes in a branch&lt;/a&gt;, which I assume is not ready.
There is also &lt;a class="reference external" href="https://github.com/lepture/liquidluck/issues/created_by/tshepang?sort=updated&amp;amp;state=open"&gt;a backlog of doc improvements&lt;/a&gt; I submitted, which
are not even acknowledged. Do not consider this a complaint... the
author in fact gave me more than I gave him... a nice piece of
software. In fact, I might go back at some point, and will keep
maintaining &lt;a class="reference external" href="http://tshepang.net/looking-at-liquidluck-themes"&gt;live demos of the various liquidluck themes&lt;/a&gt;. Also,
&lt;a class="reference external" href="http://movies.tshepang.net"&gt;my movie blog&lt;/a&gt; is also still built with liquidluck.&lt;/li&gt;
&lt;li&gt;I have a separate post on &lt;a class="reference external" href="http://tshepang.net/what-me-loves-about-static-website-generation"&gt;what I love about static website generators&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="why-pelican-rocks"&gt;
&lt;h2&gt;why &lt;a class="reference external" href="http://pelican.readthedocs.org"&gt;Pelican&lt;/a&gt; rocks&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It has categories
(&lt;a class="reference external" href="https://github.com/getnikola/nikola/issues/163"&gt;unlike nikola&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Post metadata:&lt;ul&gt;
&lt;li&gt;if Date is not specified, file mtime is used (unlike &lt;a class="reference external" href="http://blogofile.com"&gt;blogofile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;if Category is not specified, parent directory name is used
(unlike blogofile)&lt;/li&gt;
&lt;li&gt;titles are allowed to have any character (unlike blogofile)&lt;/li&gt;
&lt;li&gt;there is an option to provide clean urls... remove trailing &lt;tt class="docutils literal"&gt;.html&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Does not force one into having ugly date-based filesystem structure
(&lt;a class="reference external" href="https://bitbucket.org/vladris/tinkerer/issue/41"&gt;unlike tinkerer&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="why-pelican-rocks-not"&gt;
&lt;h2&gt;why Pelican rocks not&lt;/h2&gt;
&lt;p&gt;The default theme simply didn't fit my tastes,
and &lt;a class="reference external" href="http://tshepang.net/favorite-pelican-themes"&gt;the other themes weren't so satisfactory&lt;/a&gt;.
I spent way too long fiddling with them, and just couldn't be happy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-liquidluck"&gt;
&lt;h2&gt;why liquidluck&lt;/h2&gt;
&lt;p&gt;So I have moved to &lt;a class="reference external" href="http://liquidluck.readthedocs.org"&gt;liquidluck&lt;/a&gt;,
and am hoping I will not be 'forced' to move again.
It's way too much work, and it took multiple messages between me and
&lt;a class="reference external" href="http://lepture.com"&gt;the developer&lt;/a&gt; of this sleek new static site generator just to get it
to behave the way I like it.&lt;/p&gt;
&lt;p&gt;I had to override stuff that's done by the software, by using &lt;a class="reference external" href="https://bitbucket.org/tshepang/blog/src/1602cdf8/custom.py"&gt;this script&lt;/a&gt;,
which helped give it the advantages that Pelican has over the
other generators I mentioned, while also solving the one problem Pelican
has.. lack of a good-enough theme.
This was achieved with the help of that very helpful and responsive developer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="issues"&gt;
&lt;h2&gt;issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;There is no visible way, at least for the default theme, to subscribe
to RSS feeds of individual Categories.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The text is a bit blurry/faint with the default theme,
and none of &lt;a class="reference external" href="http://tshepang.net/looking-at-liquidluck-themes"&gt;the other ones&lt;/a&gt; are close to good-enough for my liking,
all but the promising one named &lt;a class="reference external" href="https://github.com/bingdian/liquidluck-theme-responsive"&gt;responsive&lt;/a&gt;.
It got 2 issues so far (see &lt;a class="reference external" href="http://demo-responsive.tshepang.net"&gt;live demo&lt;/a&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Date is displayed at the bottom of a post...
why make user scroll that far before presenting such a key piece of info.&lt;/li&gt;
&lt;li&gt;There is no link anywhere allowing to visit Home.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Background color for &lt;tt class="docutils literal"&gt;&amp;lt;code&amp;gt;&lt;/tt&gt; text is too unusual,
and results in an ugly look.
It does not fit with the general general theme, so should be grey really,
which would match with that of &lt;tt class="docutils literal"&gt;&amp;lt;pre&amp;gt;&lt;/tt&gt; text.
I fixed it myself with the following patch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
diff --git a/liquidluck/_themes/default/static/style.css b/liquidluck/_themes/default/static/style.css
index e90de80..94fa7e8 100644
--- a/liquidluck/_themes/default/static/style.css
+++ b/liquidluck/_themes/default/static/style.css
&amp;#64;&amp;#64; -112,7 +112,7 &amp;#64;&amp;#64; pre {
     border-radius: 3px;
 }
 code, tt {
-    background-color: #fee9cc;
+    background-color: #eee;
     color: rgba(0, 0, 0, 0.75);
     padding: 1px 3px;
     font-size: 12px;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="blogging"></category></entry><entry><title>about 'developer of note' series</title><link href="http://tshepang.net/about-developer-of-note-series" rel="alternate"></link><updated>2013-09-30T23:28:04+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-30:about-developer-of-note-series</id><summary type="html">&lt;p&gt;I respect a lot of software developers, but many of those are not
going to have an entry in this series, and not because they are lesser
in my eyes.&lt;/p&gt;
&lt;p&gt;Here's the criteria I use to regard someone as &lt;a class="reference external" href="http://tshepang.net/tags#developer-of-note-ref"&gt;developer of the
note&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I need a news item that would trigger a post.
Thing is, if you write about someone,
you actually need to have some content (duh!),
and saying &amp;quot;Guide van Rossum rocks for creating Python, and am grateful!&amp;quot;
is simply not enough, hence a need for a trigger.
In fact, I used to call this series &lt;em&gt;developer of the moment&lt;/em&gt;,
but at some point felt that the new name is more fitting,
especially since a few of these honorable developers actually generated
some new triggers along the way.&lt;/li&gt;
&lt;li&gt;The more obvious requirement is that the developer need to have done
some thing that I truly appreciate.
At times, I fail to put into words just how much.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="developer-of-note"></category></entry><entry><title>blogging with Pelican</title><link href="http://tshepang.net/blogging-with-pelican" rel="alternate"></link><updated>2013-10-06T10:29:11+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-30:blogging-with-pelican</id><summary type="html">&lt;p&gt;&lt;strong&gt;notes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I have a separate post on &lt;a class="reference external" href="http://tshepang.net/what-me-loves-about-static-website-generation"&gt;what I love about static website generators&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This post was first published on &lt;strong&gt;2012-05-20&lt;/strong&gt;,
which is before &lt;a class="reference external" href="http://tshepang.net/from-pelican-to-liquidluck"&gt;I started using liquidluck&lt;/a&gt;, a competing tool.&lt;/li&gt;
&lt;li&gt;And then I moved back &lt;strong&gt;2013-09-29&lt;/strong&gt; due to development inactivity
of liquidluck.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pelican.notmyidea.org/"&gt;Pelican&lt;/a&gt; is a static blog generator;
it converts marked-up text files to html
(Pelican supports &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; and &lt;a class="reference external" href="http://en.wikipedia.org/wiki/ReStructuredText"&gt;reStructuredText&lt;/a&gt;).
The resulting site is complete with an index (Archives view),
Tags, Categories, and Pages (for non-bloggy stuff like a CV or About Me file).&lt;/p&gt;
&lt;p&gt;As for my blog, its tree structure looks like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
build/...
pages/about-me.rst
posts/{arts/, computing/, misc/}
CNAME
fabfile.py
new-post.py
README.rst
settings.py
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;build&lt;/tt&gt; directory is where the output of the build process is
stored.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;pages&lt;/tt&gt; directory is for any content that isn't blog posts.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;posts&lt;/tt&gt; directory is where the large chunk of content lives,
the blog posts themselves.
Each of the four directories in there represent a Category, for example:
if you place some file in &lt;tt class="docutils literal"&gt;arts/&lt;/tt&gt;,
the post will be marked as falling under &lt;strong&gt;arts&lt;/strong&gt; Category.&lt;/li&gt;
&lt;li&gt;I host my blog on GitHub, using a service the call GitHub Pages.
&lt;tt class="docutils literal"&gt;CNAME&lt;/tt&gt; is a file required by that service in the case where I want
to use a domain other than &lt;tt class="docutils literal"&gt;tshepang.github.io&lt;/tt&gt;.
It's content is &lt;tt class="docutils literal"&gt;tshepang.net&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/tshepang/blog/src/tip/fabfile.py"&gt;fabfile.py&lt;/a&gt; contains the build instructions, all for convenience
so that I only need to run 2 commands, one for the build, and another
for GitHub upload. However, I mostly just run one command that does
both.&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="https://bitbucket.org/tshepang/blog/src/tip/settings.py"&gt;settings.py&lt;/a&gt; file contains Pelican configuration.
It should be somewhat mostly self-explanatory, but for those things that
aren't so obvious, do consult the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/tshepang/blog/src/tip/README.rst"&gt;README.rst&lt;/a&gt; has some basic instructions, as well as repository license.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now as for the post itself, you need metadata to go with it.
This is stuff like title, date, and tags.
It can be tedious to create all such mundate stuff, especially the date.
That's why I wrote &lt;a class="reference external" href="https://bitbucket.org/tshepang/blog/src/tip/new-post.py"&gt;a script&lt;/a&gt; that generates that file and populates it
with the given metadata:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python new-post.py 'my blogging setup' misc --tags blogging
&lt;/pre&gt;
&lt;p&gt;This is the metadata, and also the beginning of the file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
my blogging setup
=================

:date: 2012-04-12
:tags: blogging
&lt;/pre&gt;
&lt;p&gt;The script also opens the file in my favorite editor,
so I can start adding content.&lt;/p&gt;
&lt;p&gt;When I'm done with the changes,
I ensure I'm in the root directory of my blog, commit
(&lt;tt class="docutils literal"&gt;hg commit &lt;span class="pre"&gt;--message&lt;/span&gt; 'new post'&lt;/tt&gt;) and run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ fab
&lt;/pre&gt;
&lt;p&gt;That's a &lt;a class="reference external" href="http://fabfile.org"&gt;fabric&lt;/a&gt; command that uses the instructions found in &lt;tt class="docutils literal"&gt;fabfile.py&lt;/tt&gt;.
It builds the site, and then pushes it to GitHub Pages.
It also pushes the sources to Bitbucket.
Within a minute, the blog will be updated.&lt;/p&gt;
</summary><category term="blogging"></category></entry><entry><title>favorite buildings</title><link href="http://tshepang.net/favorite-buildings" rel="alternate"></link><updated>2013-11-26T02:14:17+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-30:favorite-buildings</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Burj_Khalifa"&gt;Burj Khalifa&lt;/a&gt;:&lt;ul&gt;
&lt;li&gt;tallest building on earth&lt;/li&gt;
&lt;li&gt;beautiful, iconic design&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Petronas_Towers"&gt;Petronas Towers&lt;/a&gt;:&lt;ul&gt;
&lt;li&gt;third tallest buildings on earth&lt;/li&gt;
&lt;li&gt;stunning design&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Willis_Tower"&gt;Willis Tower&lt;/a&gt; (was Sears Tower)&lt;ul&gt;
&lt;li&gt;long-time tallest building (a wonder of my teenage years, and beyond)&lt;/li&gt;
&lt;li&gt;icon of Chicago skyline&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;The WTC Twin Towers would be here if they were still standing. At the
time of their destruction, I admired them more than any other
buildings on the planet. Together with the Statue of Liberty, they
were to me the greatest structures in all of New York City, and
perhaps the United States.&lt;/p&gt;
</summary><category term="list"></category></entry><entry><title>favorite Pelican themes</title><link href="http://tshepang.net/favorite-pelican-themes" rel="alternate"></link><updated>2013-11-18T00:38:56+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-30:favorite-pelican-themes</id><summary type="html">&lt;p&gt;I don't like the default &lt;a class="reference external" href="http://docs.getpelican.com/en/latest/"&gt;Pelican&lt;/a&gt; theme, &lt;tt class="docutils literal"&gt;notmyidea&lt;/tt&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It is decent, but the post metadata feels cramped where its placed.&lt;/li&gt;
&lt;li&gt;The is no visible link to tags, never-mind a tag cloud (which is handy).&lt;/li&gt;
&lt;li&gt;I just don't like the general look.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, I had a look at the others:&lt;/p&gt;
&lt;div class="section" id="elegant"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://oncrashreboot.com/pelican-elegant"&gt;Elegant&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This the least static-like of all themes I've seen yet, making it the
most innovative I've seen yet. The search feature, which sets it apart
from its competitors, which got me excited.&lt;/p&gt;
&lt;p&gt;It has some issues though (&lt;a class="reference external" href="http://tshepang.net/favorite-pelican-themes#comment-1064640476"&gt;to be fixed at some point&lt;/a&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ignores Twitter setting&lt;/li&gt;
&lt;li&gt;RSS feeds are supported, but the icons aren't made visible&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's also not the prettiest of themes, but it will have to do, at
least for now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gum"&gt;
&lt;h2&gt;&lt;a class="reference internal" href="#gum"&gt;gum&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I was impressed enough that I was strongly considering settling for
this one, despite the following issues:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;no Tags on individual Posts&lt;/li&gt;
&lt;li&gt;no Categories on individual Posts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But, &lt;a class="reference external" href="https://github.com/getpelican/pelican-themes/issues/152"&gt;it doesn't display bullets&lt;/a&gt;. I expect this was just an oversight.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="monospace"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican-themes/tree/master/monospace"&gt;monospace&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] simple and elegant design&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] displays pages as a list, all but the newest one in the view&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] me loving the Archives view&lt;/li&gt;
&lt;li&gt;Categories are not shown in a prominent place (e.g. menu bar)&lt;/li&gt;
&lt;li&gt;no Tags on individual Posts&lt;/li&gt;
&lt;li&gt;no Categories on individual Posts&lt;/li&gt;
&lt;li&gt;ignores Twitter setting&lt;/li&gt;
&lt;li&gt;Post titles are capitalised (minor issue)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="just-read"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican-themes/tree/master/Just-Read"&gt;Just Read&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] elegant and simple design (&lt;strong&gt;my favorite of all&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] displays pages as a list, all but the newest one in the view&lt;/li&gt;
&lt;li&gt;Categories are 2nd-class citizens: they aren't shown on the index page&lt;/li&gt;
&lt;li&gt;bullets are done wrong: the bullet-ed text is not indented&lt;/li&gt;
&lt;li&gt;on post view, there is no distinction between Tags and Categories&lt;/li&gt;
&lt;li&gt;too much border space on code snippets (&lt;strong&gt;pre&lt;/strong&gt; tag?)&lt;/li&gt;
&lt;li&gt;background for code snippets is not distinctive&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tuxlite-tbs"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican-themes/tree/master/tuxlite_tbs"&gt;tuxlite_tbs&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] clean and simple design: nice menu-bar and sidebars&lt;/li&gt;
&lt;li&gt;tags aren't shown along-aside posts&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="mockingbird"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/wrl/pelican-mockingbird"&gt;Mockingbird&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] very nice and clean design&lt;/li&gt;
&lt;li&gt;date on Archives looks like shit&lt;/li&gt;
&lt;li&gt;background for code snippets is not distinctive&lt;/li&gt;
&lt;li&gt;Categories only visible on individual Posts&lt;/li&gt;
&lt;li&gt;ignores Twitter setting&lt;/li&gt;
&lt;li&gt;does not support Disqus&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="neat"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/byk/pelican-neat"&gt;neat&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;[&lt;strong&gt;win&lt;/strong&gt;] the look is different; it feels calm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Archives view is not ideal, though it's not in a prominent location&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Categories are not shown in a prominent place (e.g. on menu bar)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;when &lt;a class="reference external" href="https://github.com/byk/pelican-neat#configuration-options"&gt;custom fields&lt;/a&gt; are
not specified, they are handled in a naive manner:&lt;/p&gt;
&lt;img alt="naive handling of unspecified custom fields" src="images/neat.png" /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="chunk"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/tbunnyman/pelican-chunk"&gt;Chunk&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] a trendy look&lt;/li&gt;
&lt;li&gt;oversized text, especially blog title&lt;/li&gt;
&lt;li&gt;background for code snippets is not distinctive&lt;/li&gt;
&lt;li&gt;Archives look like shit&lt;/li&gt;
&lt;li&gt;ignores Twitter setting&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bootstrap-2"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican-themes/tree/master/bootstrap2"&gt;Bootstrap 2&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[&lt;strong&gt;win&lt;/strong&gt;] the Menu bar is unbeatable&lt;/li&gt;
&lt;li&gt;the general look is too busy:&lt;ul&gt;
&lt;li&gt;the Categories and Tags on the right must go&lt;/li&gt;
&lt;li&gt;who wants snippets on posts&lt;/li&gt;
&lt;li&gt;showing Category and Tag on main views&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;separate tag cloud page missing&lt;/li&gt;
&lt;li&gt;line length too long&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="blogging"></category></entry><entry><title>superstar projects, and associated implementation languages</title><link href="http://tshepang.net/superstar-projects-and-associated-implementation-languages" rel="alternate"></link><updated>2013-09-30T23:28:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-30:superstar-projects-and-associated-implementation-languages</id><summary type="html">&lt;div class="section" id="c"&gt;
&lt;h2&gt;C&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;GCC&lt;/li&gt;
&lt;li&gt;GNOME&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;CPython&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;C++&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Blender&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;KDE&lt;/li&gt;
&lt;li&gt;OpenOffice.org/Libreoffice&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;C#&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Stack Overflow (non-FLOSS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="java"&gt;
&lt;h2&gt;Java&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Eclipse&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Youtube (non-FLOSS)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tech.dropbox.com/2012/12/welcome-guido"&gt;Dropbox&lt;/a&gt; (non-FLOSS)&lt;/li&gt;
&lt;li&gt;Disqus (non-FLOSS)&lt;/li&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Mercurial&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="php"&gt;
&lt;h2&gt;PHP&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Facebook (non-FLOSS)&lt;/li&gt;
&lt;li&gt;Wikipedia&lt;/li&gt;
&lt;li&gt;Wordpress&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ruby"&gt;
&lt;h2&gt;Ruby&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ruby on Rails&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Python"></category><category term="non-Python"></category><category term="non-FLOSS"></category></entry><entry><title>project of note: Valgrind</title><link href="http://tshepang.net/project-of-note-valgrind" rel="alternate"></link><updated>2013-10-01T22:03:01+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-25:project-of-note-valgrind</id><summary type="html">&lt;p&gt;I have, since using Valgrind (and reading a bit of its documentation)
some years ago, developed much respect for it. It is quite an advanced
tool, and though its primary use is detecting memory leaks, I am here
going to explore its other functionality... calculating the cost of
each line of code in the CPU. This is useful when tuning programs for
performance.&lt;/p&gt;
&lt;p&gt;Following is example code; it accepts 2 arguments, a filename and
content it will write to that file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;fcntl.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;ssize_t&lt;/span&gt; &lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;usage: %s &amp;lt;filename&amp;gt; &amp;lt;content&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;strcpy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="n"&gt;sprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;creat&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S_IRWXU&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;open error: %s (&amp;#39;%s&amp;#39;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;written&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;write error: %s (&amp;#39;%s&amp;#39;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build command (using GCC 4.8.1):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
gcc -Wall -pedantic -g play.c -o play
&lt;/pre&gt;
&lt;p&gt;System details:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ uname --all
Linux thome 3.11-trunk-amd64 #1 SMP Debian 3.11-1~exp1 (2013-09-12) x86_64 GNU/Linux
$ sudo lshw -class processor
*-cpu
     description: CPU
     product: Intel(R) Core(TM) i5-2410M CPU &amp;#64; 2.30GHz
     vendor: Intel Corp.
     physical id: 4
     bus info: cpu&amp;#64;0
     version: Intel(R) Core(TM) i5-2410M CPU &amp;#64; 2.30GHz
     serial: To Be Filled By O.E.M.
     slot: CPU 1
     size: 2300MHz
     capacity: 4GHz
     width: 64 bits
     clock: 100MHz
     capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr
     pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts
     acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp
     constant_tsc arch_perfmon pebs bts rep_good nopl xtopology
     nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor
     ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2
     x2apic popcnt tsc_deadline_timer xsave avx lahf_lm ida arat epb
     xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
     aes cpufreq
     configuration: cores=2 enabledcores=1 threads=2
&lt;/pre&gt;
&lt;p&gt;Running the resulting binary with &lt;strong&gt;Callgrind&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ valgrind --tool=callgrind --callgrind-out-file=out ./play filename
filecontent
==5308== Callgrind, a call-graph generating cache profiler
==5308== Copyright (C) 2002-2012, and GNU GPL'd, by Josef Weidendorfer
et al.
==5308== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright
info
==5308== Command: ./play filename filecontent
==5308==
==5308== For interactive control, run 'callgrind_control -h'.
==5308==
==5308== Events    : Ir
==5308== Collected : 107520
==5308==
==5308== I   refs:      107,520
$ cat filename
filecontent
&lt;/pre&gt;
&lt;p&gt;And finally, seeing closely the cost of each function call, where
&lt;strong&gt;Ir&lt;/strong&gt; stands for &lt;strong&gt;Instruction cache reads&lt;/strong&gt;, which you can read as
&lt;em&gt;number of CPU instructions&lt;/em&gt;. I have used &lt;tt class="docutils literal"&gt;tree=calling&lt;/tt&gt; option so
that I can see the cost of all operations called by a parent (marked
with a &lt;tt class="docutils literal"&gt;*&lt;/tt&gt;)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ callgrind_annotate --tree=calling out play.c
--------------------------------------------------------------------------------
Profile data file 'out' (creator: callgrind-3.8.1)
--------------------------------------------------------------------------------
I1 cache:
D1 cache:
LL cache:
Timerange: Basic block 0 - 22326
Trigger: Program termination
Profiled target:  ./play filename filecontent (PID 5308, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:
User annotated:   play.c
Auto-annotation:  off

--------------------------------------------------------------------------------
Ir
--------------------------------------------------------------------------------
107,520  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir  file:function
--------------------------------------------------------------------------------

24,113  *  /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:do_lookup_x [/lib/x86_64-linux-gnu/ld-2.17.so]
1,053  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-misc.c:_dl_name_match_p (25x) [/lib/x86_64-linux-gnu/ld-2.17.so]
13,423  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:check_match.9345 (88x) [/lib/x86_64-linux-gnu/ld-2.17.so]

18,264  *  /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:_dl_lookup_symbol_x [/lib/x86_64-linux-gnu/ld-2.17.so]
38,589  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:do_lookup_x (94x) [/lib/x86_64-linux-gnu/ld-2.17.so]

15,836  *  /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
13  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/memmove.c:memcpy&amp;#64;GLIBC_2.2.5 (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
81  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcmp.S:strcasecmp (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
6  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcmp.S:strncasecmp (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
7  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/memset.S:memset (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
51,501  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:_dl_lookup_symbol_x (86x) [/lib/x86_64-linux-gnu/ld-2.17.so]
18  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/../memcpy.S:memcpy (1x) [/lib/x86_64-linux-gnu/ld-2.17.so]
67  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/time/../sysdeps/unix/sysv/linux/x86_64/time.c:time (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
67  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/time/../sysdeps/unix/sysv/linux/x86_64/gettimeofday.c:gettimeofday (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
6  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strnlen.S:strnlen (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
[snip; to be continued]
&lt;/pre&gt;
&lt;p&gt;I have trimmed the output to bring focus to the most interesting
output of all, which is the total cost for each line of my code:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[continued]
--------------------------------------------------------------------------------
-- User-annotated source: play.c
--------------------------------------------------------------------------------
Ir

.  #include &amp;lt;string.h&amp;gt;
.  #include &amp;lt;errno.h&amp;gt;
.  #include &amp;lt;stdio.h&amp;gt;
.  #include &amp;lt;fcntl.h&amp;gt;
.  #include &amp;lt;unistd.h&amp;gt;
.
.  int
.  main (int argc, char **argv)
5  {
.      char path[0xFF];
.      char content[0xFF];
.      int fd;
.      ssize_t written;
.
2      if (argc &amp;lt; 3) {
.     fprintf (stderr, &amp;quot;usage: %s &amp;lt;filename&amp;gt; &amp;lt;content&amp;gt;\n&amp;quot;, argv[0]);
.     return 1;
.      }
.
7      strcpy (path, argv[1]);
21  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:__strcpy_sse2_unaligned (1x)
799  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
8      sprintf (content, &amp;quot;%s\n&amp;quot;, argv[2]);
1,188  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/stdio-common/sprintf.c:sprintf (1x)
805  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
.
5      fd = creat (path, S_IRWXU);
766  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
7  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/io/../sysdeps/unix/syscall-template.S:creat (1x)
2      if (fd == -1) {
.     fprintf (stderr, &amp;quot;open error: %s ('%s')\n&amp;quot;, strerror (errno), path);
.     return 1;
.      }
.
10      written = write (fd, content, strlen (content));
7  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/io/../sysdeps/unix/syscall-template.S:write (1x)
14  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strlen-sse2-pminub.S:__strlen_sse2_pminub (1x)
1,567  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
2      if (written == -1) {
.     fprintf (stderr, &amp;quot;write error: %s ('%s')\n&amp;quot;, strerror (errno), path);
.     return 1;
.      }
1      return 0;
2  }

--------------------------------------------------------------------------------
Ir
--------------------------------------------------------------------------------
0  percentage of events annotated
&lt;/pre&gt;
&lt;p&gt;As an aside, note that the indentation is messed up a bit.&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;Since I normally work at too high a level to care about CPU
instructions cycles at this detail, I found the exercise eye-opening.&lt;/p&gt;
</summary><category term="project-of-note"></category><category term="non-Python"></category></entry><entry><title>Person of Interest - Season 2 Episode 16</title><link href="http://tshepang.net/person-of-interest-season-2-episode-16" rel="alternate"></link><updated>2013-09-30T23:28:04+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-06:person-of-interest-season-2-episode-16</id><summary type="html">&lt;p&gt;I am a big fan of the series, &lt;em&gt;Person of Interest&lt;/em&gt;. There is much to
celebrate, among which is the wonderful portrayal of the brilliant
creator of the machine that (illegally) looks for patterns in society
so as to predict, with high certainty, the people will be involved in
violent crimes, either as victims or perpetrators.&lt;/p&gt;
&lt;p&gt;The series' normal formula is that our heroic, bespectacled hero would
mention the details of the new person, and his very capable sidekick,
a former assassin, would go follow this person, to try avert the
impending crime. In the 16th episode of the 2nd season, however, this
formula isn't followed (by the camera). Instead we follow the person
who would be victim, and our heroes only appear midway through, like
they were secondary characters. It's beautiful.&lt;/p&gt;
&lt;p&gt;I love it when such breaks from normal routine occur, especially when
they are as well-made. Not to say this is the best episode of this
series so far (I can think of a few which were superior), nor was this
the first time such a break from normal routine occur (there were some
in the earlier episodes of the season), but it felt fresh enough to be
worth a mention in this blog of mine. What added to the excitement is
that it was the first time in the series that a so-called Relevant &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;
crime prevention was showed.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;This means &lt;em&gt;relevant&lt;/em&gt; to (U.S.) national security. This is as
opposed to the sort solved by our heroes, which only involve
civil cases.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="tv"></category><category term="very-good"></category></entry><entry><title>mentioning alternatives on a prominent place</title><link href="http://tshepang.net/mentioning-alternatives-on-a-prominent-place" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-27:mentioning-alternatives-on-a-prominent-place</id><summary type="html">&lt;p&gt;It's an honorable thing to mention alternative and/or competing
technologies on a project website.  It's even more interesting when
this is done on a promiment page. Here's a few of those who do it:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ltib.org"&gt;Linux Target Image Builder (LTIB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lzone.de/liferea"&gt;Liferea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://humdi.net/vnstat"&gt;vnStat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wummel.github.io/linkchecker/other.html"&gt;LinkChecker&lt;/a&gt; (linked from main page)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/gittip/www.gittip.com/blob/master/README.md"&gt;Gittip&lt;/a&gt; (project README file)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonhosted.org/vcs/alternatives.html"&gt;vcs&lt;/a&gt; (a top-level section in the official documentation)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="untagged"></category></entry><entry><title>packaging my first Qt app</title><link href="http://tshepang.net/packaging-my-first-qt-app" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-27:packaging-my-first-qt-app</id><summary type="html">&lt;p&gt;Someone asked me to try get some KDE package into Debian. I estimated
that it would take me around 10 hours to get it into good enough shape
before asking some Debian Developer to upload it for me. Here goes
some rough estimates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;hour 1&lt;/strong&gt;: Find documentation on the subject; I got three after a
quick search:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.ubuntu.com/packaging/html"&gt;Ubuntu Packaging Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.ubuntu.com/PackagingGuideDeprecated/QtApplication"&gt;Create Ubuntu DEB package from a Qt application&lt;/a&gt; (marked as
deprecated, probably in favor of the official guide above)&lt;/li&gt;
&lt;li&gt;Debian Packaging Tutorial (from Debian package,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;packaging-tutorial&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 2-3&lt;/strong&gt;: Reading the Debian Packaging Tutorial which led me to
reading &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-source&lt;/span&gt;&lt;/tt&gt; manpage, using &lt;tt class="docutils literal"&gt;dh_make&lt;/tt&gt; to create a
&lt;tt class="docutils literal"&gt;debian/&lt;/tt&gt; skeleton, and modifying the contents of that directory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 4-6&lt;/strong&gt;: Struggling to kill the lintian complaint,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;binary-without-manpage&lt;/span&gt;&lt;/tt&gt;. I went as far as reading the source code
(Perl) that performs the check, but that didn't help much. I could
have saved hours by looking at the &lt;a class="reference external" href="http://www.debian.org/doc/manuals/maint-guide"&gt;Debian New Maintainers' Guide&lt;/a&gt;
earlier. I also added &lt;tt class="docutils literal"&gt;export &lt;span class="pre"&gt;LDFLAGS=-Wl,-z,relro&lt;/span&gt;&lt;/tt&gt; to
&lt;tt class="docutils literal"&gt;debian/rules&lt;/tt&gt; file to kill &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;hardening-no-relro&lt;/span&gt;&lt;/tt&gt; lintian
warning.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 7-8&lt;/strong&gt;: Determine what dependencies would be needed by building from
a clean chroot (pbuilder). This was with the help of Debian New
Maintainers' Guide, again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 9-10&lt;/strong&gt;: Reading &lt;a class="reference external" href="https://wiki.debian.org/Hardening"&gt;Debian wiki page on Hardening&lt;/a&gt; let me
simplify my packaging further... removing the need to specify
hardening flags explicitly (&lt;a class="reference external" href="https://bitbucket.org/tshepang/ksig/commits/f4c7b60157b79847f918e3d8b24a74e6c5bec929"&gt;commit&lt;/a&gt;). I also uploaded the package
&lt;a class="reference external" href="http://mentors.debian.net/package/ksig"&gt;to mentors.debian.net&lt;/a&gt;, with the help of &lt;a class="reference external" href="https://wiki.debian.org/DebianMentorsFaq"&gt;DebianMentorsFaq&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The resulting package now lives at
&lt;a class="reference external" href="https://bitbucket.org/tshepang/ksig/src"&gt;https://bitbucket.org/tshepang/ksig/src&lt;/a&gt;. The changes I made, the
actual packaging work, are in &lt;a class="reference external" href="https://bitbucket.org/tshepang/ksig/src/f4c7b60157b79847f918e3d8b24a74e6c5bec929/debian"&gt;this directory&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Debian"></category><category term="non-Python"></category></entry><entry><title>Letta Mbulu vs. Miriam Makeba</title><link href="http://tshepang.net/letta-mbulu-vs-miriam-makeba" rel="alternate"></link><updated>2013-10-02T23:30:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-25:letta-mbulu-vs-miriam-makeba</id><summary type="html">&lt;p&gt;I've been wondering for years which of these two music legends is
superior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Miriam Makeba&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;3 masterpieces (&lt;em&gt;Gauteng&lt;/em&gt;; &lt;em&gt;A Luta Continua&lt;/em&gt;; &lt;em&gt;Welela&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;5 excellent works (&lt;em&gt;Mam Ndiyalila&lt;/em&gt;; &lt;em&gt;Meet Me At the River&lt;/em&gt;; &lt;em&gt;Goodbye
Poverty&lt;/em&gt;; &lt;em&gt;Jolinkomo&lt;/em&gt;; &lt;em&gt;Olili&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Letta Mbulu&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1 landmark (&lt;em&gt;Jikijela&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;3 masterpieces (&lt;em&gt;Not Yet Uhuru&lt;/em&gt;; &lt;em&gt;Nomathemba&lt;/em&gt;; &lt;em&gt;Zimkile&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;6 excellent works (&lt;em&gt;Music In the Air&lt;/em&gt;; &lt;em&gt;Ndi-Phendule&lt;/em&gt;; &lt;em&gt;Buza&lt;/em&gt;;
&lt;em&gt;I Need Your Love&lt;/em&gt;; &lt;em&gt;Maru a pula&lt;/em&gt;; &lt;em&gt;Kube&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://tshepang.net/simple-rating-system-for-music"&gt;simple rating system&lt;/a&gt; gives Makeba 11 points and Mbuli gets a
whooping 15. That's a scary number since it would mean &lt;a class="reference external" href="http://tshepang.net/top-musicians"&gt;she's superior
to Salif Keita&lt;/a&gt; and just a point below Burning Spear! This I should
revisit!&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] Oh, and I'm sure there's a lot of Miriam's work that I
haven't trawled through. Either that or Miriam Makeba is, though
excellent, is overrated, since I suspect she becomes a common answer to
the question &amp;quot;who's the greatest female South African musician?&amp;quot;. That's
the answer that I also once had until I savoured much of Letta Mbulu's
work and walked away amazed.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>top musicians</title><link href="http://tshepang.net/top-musicians" rel="alternate"></link><updated>2013-10-02T23:27:31+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-25:top-musicians</id><summary type="html">&lt;p&gt;The best musicians in history,
a list created with the help of &lt;a class="reference external" href="http://tshepang.net/simple-rating-system-for-music"&gt;a simple rating system&lt;/a&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/top-tracks-fela-kuti"&gt;Fela Kuti&lt;/a&gt;, 27&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/top-tracks-burning-spear"&gt;Burning Spear&lt;/a&gt;, 18&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/letta-mbulu-vs-miriam-makeba"&gt;Letta Mbulu&lt;/a&gt;, 15&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/top-tracks-salif-keita"&gt;Salif Keita&lt;/a&gt;, 14&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/top-tracks-bob-marley"&gt;Bob Marley&lt;/a&gt;, 13&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/top-tracks-fugees"&gt;Fugees&lt;/a&gt;, 12&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/letta-mbulu-vs-miriam-makeba"&gt;Miriam Makeba&lt;/a&gt;, 11&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/top-tracks-the-roots"&gt;The Roots&lt;/a&gt;, 10&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;For quite a while, this list of grandmasters consisted of just three
musicians (Fela Kuti, Bob Marley, and Burning Spear); I was only
surprised that the later entrants, Salif Keita and Letta Mbulu beat
mighty Bob, and that was based on just my thinking without actually
making a list of tracks. Intuition isn't always reliable.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>links 2013-08-09</title><link href="http://tshepang.net/links-2013-08-09" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-09:links-2013-08-09</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jashkenas/coffee-script/issues/2864#issuecomment-15159370"&gt;some of the challenges of maintaining a popular FLOSS project&lt;/a&gt; (&lt;a class="reference external" href="http://www.binpress.com/blog/2013/04/14/open-source-cannot-live-on-donations-alone"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/building-gittip/bb770ab13101"&gt;great summary of current status of Gittip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://news.ycombinator.com/item?id=5916687"&gt;what it would take to build a general purpose search engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.documentfoundation.org/2013/07/22/getting-close-to-libreoffice-4-1"&gt;lots of impressive activity around Libreoffice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://theoatmeal.com/comics/design_hell"&gt;How A Web Design Goes Straight To Hell&lt;/a&gt; - nice humor&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>project of note: Sphinx</title><link href="http://tshepang.net/project-of-note-sphinx" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-08:project-of-note-sphinx</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://sphinx-doc.org"&gt;Sphinx&lt;/a&gt; is a tool that is used to generate documentation from
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/ReStructuredText"&gt;reStructuredText&lt;/a&gt; markup language, and is mainly used in the Python
ecosystem. I honor it much for it is a really powerful system, and I
have come to appreciate it a lot recently, with my work on documentation
of software that falls under the Pylons project.&lt;/p&gt;
&lt;p&gt;It is a pity that the markup is not as simple as that of the more
popular &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt;, but maybe that was out of necessity, since it is
far more advanced: it was initially built as a replacement for the
tools that build CPython documentation, which is quite extensive and
needs lots of rails.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;As an example of that power, have a look at &lt;a class="reference external" href="https://github.com/Pylons/pyramid_tutorials/commit/134190"&gt;these changes I made&lt;/a&gt; for
&lt;a class="reference external" href="http://docs.pylonsproject.org/projects/pyramid_tutorials/en/latest/"&gt;pyramid_tutorials&lt;/a&gt;. In that commit, the feature I used allows you to
include code snippets directly from files, instead of doing the
copy-paste dance, avoiding duplication and rot. This feature is known as
&lt;a class="reference external" href="http://sphinx-doc.org/markup/code.html#directive-literalinclude"&gt;literalinclude&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another feature I recently worked with in the recent past with is
&lt;a class="reference external" href="http://sphinx-doc.org/ext/intersphinx.html#confval-intersphinx_mapping"&gt;intersphinx_mapping&lt;/a&gt;. What it does it allow one to generate
references in reST as if those reference were local. For example, if
you wanted to generate a link to the CPython &lt;tt class="docutils literal"&gt;open()&lt;/tt&gt; built-in
function, you would need only specify it as &lt;tt class="docutils literal"&gt;:func:open&lt;/tt&gt;.  This is
as opposed to finding the actual link and specifying it normally.&lt;/p&gt;
&lt;p&gt;One other feature I discovered (but haven't used yet) is &lt;a class="reference external" href="http://sphinx-doc.org/domains.html#info-field-lists"&gt;Info field
lists&lt;/a&gt; feature. To see it in action, visit &lt;a class="reference external" href="https://postgres-py.readthedocs.org/en/latest/#postgres.Postgres.run"&gt;this link&lt;/a&gt;, and then
look at &lt;a class="reference external" href="https://postgres-py.readthedocs.org/en/latest/_modules/postgres.html#Postgres.run"&gt;its markup&lt;/a&gt;. It's gorgeous!&lt;/p&gt;
</summary><category term="project-of-note"></category><category term="Python"></category></entry><entry><title>challenges facing Python from other languages</title><link href="http://tshepang.net/challenges-facing-python-from-other-languages" rel="alternate"></link><updated>2013-11-17T23:37:20+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-07-23:challenges-facing-python-from-other-languages</id><summary type="html">&lt;p&gt;The following four points were made in &lt;a class="reference external" href="http://lwn.net/Articles/558172"&gt;this article&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;JavaScript has become a fairly big competitor in the desktop and
server spaces, and particularly in mobile.&lt;/li&gt;
&lt;li&gt;Lua is increasingly used as an embeddable extension language&lt;/li&gt;
&lt;li&gt;Go's concurrency and ability to create easily deployable binaries
that you can just drop on a system and run.&lt;/li&gt;
&lt;li&gt;R's statistical and graphic abilities&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category><category term="non-Python"></category></entry><entry><title>links 2013-07-17</title><link href="http://tshepang.net/links-2013-07-17" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-07-17:links-2013-07-17</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.comp.leeds.ac.uk/nde/papers/teachpy3.html"&gt;why Python 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/tusharmakkar08"&gt;my first Bitbucket follower&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://thechangelog.com/open-products"&gt;Open Products&lt;/a&gt; is an excellent essay by the admirable Chad
Whitacre, &lt;a class="reference external" href="http://tshepang.net/am-joining-gittip"&gt;Gittip&lt;/a&gt; founder&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://people.gnome.org/~michael/blog/2013-06-13-under-the-hood.html"&gt;impressive Libreoffice clean-up work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/open-source-life/d44a1953749c"&gt;Money and Open Source&lt;/a&gt; - an insightful opinion piece&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>major projects using Mercurial</title><link href="http://tshepang.net/major-projects-using-mercurial" rel="alternate"></link><updated>2013-09-30T23:28:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-07-13:major-projects-using-mercurial</id><summary type="html">&lt;p&gt;Mercurial is the only version control system that I actually like, and
I do celebrate each time I see a project use it. So, here I list the
most notable projects I am aware of that do, which also gives me hope
that it isn't being suffocated too much by Git:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.mozilla.org/mozilla-central"&gt;Firefox&lt;/a&gt;, on top 3 of all desktop web browsers (number of users)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.python.org/cpython"&gt;CPython&lt;/a&gt;, on top 10 of all programming languages&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://selenic.com/hg"&gt;Mercurial&lt;/a&gt;, 2nd only to Git in terms of DVCS popularity, though
maybe lagging by 2 orders of magnitude :(&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.openjdk.java.net"&gt;OpenJDK&lt;/a&gt;, the top open source implementation of the Java platform&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/birkenfeld/sphinx"&gt;Sphinx&lt;/a&gt;, documentation generator used in most Python projects&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/pypy/pypy"&gt;PyPy&lt;/a&gt;, likely the most exciting development in the entire Python
ecosystem&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackexchange.com"&gt;Stack Exchange&lt;/a&gt; (proprietary), a family of Q&amp;amp;A sites which are,
in my opinion, the best yet&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="VCS"></category></entry><entry><title>links 2013-07-09</title><link href="http://tshepang.net/links-2013-07-09" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-07-09:links-2013-07-09</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I was surprised to find that &lt;a class="reference external" href="http://skeptics.stackexchange.com/a/1172/167"&gt;most sex workers enjoy their trade&lt;/a&gt;;
it's a refreshing perspective, but as made clear by the post itself,
there isn't sufficient scientific research to confirm it.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.eyrie.org/~eagle/journal/2013-01/026.html"&gt;Consensus failure&lt;/a&gt; looks like worthy criticism of consensus
decision-making in large groups.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.informationclearinghouse.info/article25936.htm"&gt;great explanation of the concept of Confirmation Bias&lt;/a&gt;
(&lt;a class="reference external" href="http://youarenotsosmart.com/2010/06/23/confirmation-bias"&gt;honorable mention&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.eyrie.org/~eagle/journal/2012-12/006.html"&gt;great advice on which Charities to give to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;whoever said anything involving bowel humor can't be beautiful is
wrong; &lt;a class="reference external" href="http://theoatmeal.com/comics/tipping_tooting"&gt;here is proof&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="humor"></category><category term="links"></category></entry><entry><title>top tracks: Fela Kuti</title><link href="http://tshepang.net/top-tracks-fela-kuti" rel="alternate"></link><updated>2013-09-30T23:28:04+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-06-29:top-tracks-fela-kuti</id><summary type="html">&lt;div class="section" id="landmarks"&gt;
&lt;h2&gt;3 landmarks&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Lady&lt;/strong&gt; (&lt;em&gt;Shakara&lt;/em&gt; - 1972)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Confusion&lt;/strong&gt; (&lt;em&gt;Confusion&lt;/em&gt; - 1975)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Igbe (Na Shit)&lt;/strong&gt; (&lt;em&gt;Gentleman&lt;/em&gt; - 1973)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="masterpieces"&gt;
&lt;h2&gt;3 masterpieces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;No Agreement&lt;/strong&gt; (&lt;em&gt;No Agreement&lt;/em&gt; - 1977)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shakara&lt;/strong&gt; (&lt;em&gt;Shakara&lt;/em&gt; - 1972)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gentleman&lt;/strong&gt; (&lt;em&gt;Gentleman&lt;/em&gt; - 1973)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent-works"&gt;
&lt;h2&gt;12 excellent works&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Egbe Mi O&lt;/strong&gt; (&lt;em&gt;Fela's London Scene&lt;/em&gt; - 1970)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fefe Naa Efe&lt;/strong&gt; (&lt;em&gt;Gentleman&lt;/em&gt; - 1973)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Who No Know Go Know&lt;/strong&gt; (&lt;em&gt;Everything Scatter&lt;/em&gt; - 1975)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Just Like That&lt;/strong&gt; (&lt;em&gt;Beast of No Nation&lt;/em&gt; - 1989)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pansa Pansa&lt;/strong&gt; (&lt;em&gt;Underground System&lt;/em&gt; - 1992)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eko Ile&lt;/strong&gt; (&lt;em&gt;Afrodisiac&lt;/em&gt; - 1973)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Alu Jon Jonki Jon&lt;/strong&gt; (&lt;em&gt;Afrodisiac&lt;/em&gt; - 1973)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Black Man's Cry&lt;/strong&gt; (&lt;em&gt;Live!&lt;/em&gt; - 1971)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Water No Get Enemy&lt;/strong&gt; (&lt;em&gt;Expensive Shit&lt;/em&gt; - 1975)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zombie&lt;/strong&gt; (&lt;em&gt;Zombie&lt;/em&gt; - 1978)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Teacher Don't Teach Me Nonsense&lt;/strong&gt; (&lt;em&gt;Teacher Don't Teach Me Nonsense&lt;/em&gt;
-1986)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ikoyi Mentality Versus Mushin Mentality&lt;/strong&gt; (&lt;em&gt;Why Black Man Dey Suffer&lt;/em&gt;
-1971)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="honorable-mention"&gt;
&lt;h2&gt;honorable mention&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;Why Black Man Dey Suffer&lt;/strong&gt; (&lt;em&gt;Why Black Man Dey Suffer&lt;/em&gt; - 1971):&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Not in the above lists because it gets spoiled by the vocals about halfway
through. The instruments are incredible, and almost the only saving
grace of the song, but they start to sound repetitive several minutes
in. The beginning parts of the song, including its vocals, would earn
this one a msterpiece had the rest been kept at that level.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Trouble Sleep Yanga Wake Am&lt;/strong&gt; (&lt;em&gt;Roforofo Fight&lt;/em&gt; - 1972)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="music"></category><category term="top-tracks"></category></entry><entry><title>FLOSS pipedreams</title><link href="http://tshepang.net/floss-pipedreams" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-06-09:floss-pipedreams</id><summary type="html">&lt;p&gt;Within &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open-source_software"&gt;FLOSS&lt;/a&gt;, I do have preferences (e.g. Python over Perl),
but this post is about my preferences over proprietary alternatives.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3D content creation&lt;/strong&gt;:
&lt;a class="reference external" href="http://blender.org"&gt;Blender&lt;/a&gt; should be mainstream... used in blockbusters&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;desktop&lt;/strong&gt;:
&lt;a class="reference external" href="http://gnome.org"&gt;GNOME&lt;/a&gt; should replace Mac OS X as THE desktop experience,
and then steal the market&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CRM/ERP&lt;/strong&gt;:
&lt;a class="reference external" href="http://tryton.org"&gt;Tryton&lt;/a&gt; (or &lt;a class="reference external" href="http://openerp.com"&gt;OpenERP&lt;/a&gt;) should steal SAP's market share&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;image manipulation&lt;/strong&gt;:
&lt;a class="reference external" href="http://gimp.org"&gt;GIMP&lt;/a&gt; should acquire feature-parity with Photoshop, and then steal the market&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DBMS&lt;/strong&gt;:
&lt;a class="reference external" href="http://postgresql.org"&gt;PostgreSQL&lt;/a&gt; should acquire feature-parity with Oracle,
and then steal the market&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Operating system&lt;/strong&gt;:
&lt;a class="reference external" href="http://debian.org"&gt;Debian&lt;/a&gt; should be THE reference platform for various user types
(large corporations, audio/video professionals, software developers,
gamers, etc.), taking the market away from OS X and Windows&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;scientific computing&lt;/strong&gt;:
&lt;a class="reference external" href="http://numpy.org"&gt;NumPy&lt;/a&gt; and &lt;a class="reference external" href="http://pandas.pydata.org"&gt;pandas&lt;/a&gt; should acquire feature-parity with MATLAB,
and then steal the market&lt;/p&gt;
</summary><category term="GNOME"></category><category term="Debian"></category><category term="Python"></category><category term="non-FLOSS"></category></entry><entry><title>links 2013-06-01</title><link href="http://tshepang.net/links-2013-06-01" rel="alternate"></link><updated>2013-11-26T02:26:19+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-06-01:links-2013-06-01</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://julien.danjou.info/blog/2013/rant-about-github-pull-request-workflow-implementation"&gt;a detailed look&lt;/a&gt; at the shortcomings of GitHub Pull Requests workflow&lt;/li&gt;
&lt;li&gt;it is sad seeing projects using Git, instead of Mercurial; it's
sadder still seeing them &lt;a class="reference external" href="http://www.sqlalchemy.org/blog/2013/05/25/sqlalchemy-migrated-to-git"&gt;move from Mercurial to Git&lt;/a&gt;; I am
scared that my favorite VCS is becoming less and less relevant&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pedrokroger.net/using-sphinx-write-technical-books"&gt;Using Sphinx to Write Technical Books&lt;/a&gt; - nice guide&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/past.html"&gt;HTML history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/video.html"&gt;intro to computer video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="VCS"></category></entry><entry><title>top sites</title><link href="http://tshepang.net/top-sites" rel="alternate"></link><updated>2013-10-09T23:34:34+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-06-01:top-sites</id><summary type="html">&lt;p&gt;&lt;strong&gt;atheist writing&lt;/strong&gt;: &lt;a class="reference external" href="http://scienceblogs.com/pharyngula/"&gt;Pharyngula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux-related news&lt;/strong&gt;: &lt;a class="reference external" href="http://lwn.net/"&gt;LWN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rationality&lt;/strong&gt;: &lt;a class="reference external" href="http://lesswrong.com/"&gt;Less Wrong&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;software development&lt;/strong&gt;: &lt;a class="reference external" href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML5&lt;/strong&gt;: &lt;a class="reference external" href="http://diveintohtml5.info/"&gt;diveintohtml5&lt;/a&gt;&lt;/p&gt;
</summary><category term="list"></category></entry><entry><title>'God of War' trilogy</title><link href="http://tshepang.net/god-of-war-trilogy" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-31:god-of-war-trilogy</id><summary type="html">&lt;p&gt;The last time I played any of the 3 games from the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/God_of_War_(series)"&gt;God of War&lt;/a&gt;
trilogy was nearly 2 years ago, but the experience still lives vividly
in my mind; they offered among the greatest gaming experiences I ever
had. I haven't played any of the other 4 games in the series.&lt;/p&gt;
&lt;p&gt;I have known about the first game for years, before playing it, and it
was among the top of my wishlist. The appeal was simply the imagery of
the angry lead character (Kratos), the giants he was portrayed to
battle, the setting (ancient Greek mythology), as well as the title.&lt;/p&gt;
&lt;p&gt;When I finally managed to get my hands on the games (about 2 years
ago), they did not disappoint. The epic feel of it all, the character
design (the best ever that covers ancient Greek mythology), and (as
regards &lt;a class="reference external" href="http://en.wikipedia.org/wiki/God_of_War_III"&gt;God of War III&lt;/a&gt;) impressive realism, makes for a fantastic
series. Sadly, this trilogy is only available for PlayStation (2 &amp;amp; 3).&lt;/p&gt;
&lt;p&gt;My favorite characters:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Hercules (demigod, son of Zeus), who appears in the 3rd game of the
trilogy, is a mini-giant with an massive muscle structure and an
interesting attitude, not to mention armed with some awesomely
large and powerful weapons, that the playable character (Kratos)
luckily gets to play with. The moment where this Hercules character
appears is among my most favorite battle scenes in the whole
trilogy.&lt;/li&gt;
&lt;li&gt;Hades (God of the Underworld), who we also only get to fight in the
3rd game of the trilogy, is another great design, and his
underworld the best environment of the whole trilogy. His
assortment of weapons is also quite impressive, but the battle
involving him, though quite good, could be more epic.&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://godofwar.wikia.com/wiki/Centaur#Centaur_General"&gt;Centaur General&lt;/a&gt; (human-horse being) were quite a presence. Not
only were they rather tough to beat, but they were also the most
charming characters in the whole trilogy. One wishes they had a
greater screen time. Note that there were other Centaurs in the
trilogy, but these particular ones were most interesting, and their
slaying most... beautiful. They appear first time in the 3rd game
in the trilogy.&lt;/li&gt;
&lt;li&gt;Poseidon (God of the Sea), is an interesting one. His represents
the most complex (and hardest) fight sequence in the entire
trilogy, it it also happens on the third installment of this fine
trilogy. It's not exactly my favorite, but his character has a
certain level of charm, and the final kill is particularly brutal.&lt;/li&gt;
&lt;li&gt;Kratos, the protagonist, was most impressive in the first game, but
he was getting less interesting later on and the novelty of his
anger was wearing off. He was also getting petty at times, and too
bloodthirsty to be convincing. Regardless, he is a work of superb
character design, and this well-enhanced by the pale color and red
stripes on his skin, as well as a body that makes him look like pure
lethal.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://godofwar.wikia.com/wiki/Stone_Talos"&gt;Stone Talos&lt;/a&gt; are a one-of-a-kind character... muscular stone
statues that come to life to incur damage on our protagonist.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Awesome as it is, the series does have weaknesses:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There is one notable bad work of character design, which is
Ares, the original god of war (a title Kratos took from him after
defeating him). He is totally uninresting (and clumsy), and the battle
in which the two fight is the worst in the trilogy.&lt;/li&gt;
&lt;li&gt;One other horrible character was the goat-snake-lion combo
character. It was probably a first in gaming history, but it was a
real stupid idea.&lt;/li&gt;
&lt;li&gt;There were also some particilarly hard stages to pass, where I had
to ask for help from a friend to proceed to the next level. I hate
stuff like that... I normally pick the easiest difficulty level in
games, for I hate to struggle for too long.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="excellent"></category><category term="gaming"></category></entry><entry><title>developer of note: Barry Warsaw</title><link href="http://tshepang.net/developer-of-note-barry-warsaw" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-28:developer-of-note-barry-warsaw</id><summary type="html">&lt;p&gt;This guy, both an official Ubuntu developer and a core &lt;a class="reference external" href="http://python.org"&gt;CPython&lt;/a&gt;
developer, is a great example of a FLOSS collaborator. He is always
polite on mailing list discussions, kindly and &lt;a class="reference external" href="https://lists.debian.org/debian-devel/2013/05/msg01357.html"&gt;patiently helps foster
collaboration between Debian and Ubuntu&lt;/a&gt; (there's been some
conflicts between the two camps).  This is on top of his superb
technical efforts demonstrated by his highly-detailed guides on
various things, like upgrading various Python projects to run on
Python 3 (&lt;a class="reference external" href="http://www.wefearchange.org/2012/01/debian-package-for-python-2-and-3.html"&gt;example 1&lt;/a&gt;, &lt;a class="reference external" href="http://www.wefearchange.org/2012/01/python-3-porting-fun-redux.html"&gt;example 2&lt;/a&gt;, &lt;a class="reference external" href="http://www.wefearchange.org/2011/12/lessons-in-porting-to-python-3.html"&gt;example 3&lt;/a&gt;).&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category><category term="non-Debian"></category><category term="Python"></category></entry><entry><title>developer of note: Nick Coghlan</title><link href="http://tshepang.net/developer-of-note-nick-coghlan" rel="alternate"></link><updated>2013-09-30T23:28:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-28:developer-of-note-nick-coghlan</id><summary type="html">&lt;p&gt;This is easily among the most active of all core CPython developers.
His productivity is ridiculous, and I seriously wonder how he manages
to do all he does, especially since &lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/014139.html"&gt;he does it in his free time&lt;/a&gt;. He
also tends to be quite stern, which is extra kool since he does it
while displaying &lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/013835.html"&gt;great depth of knowledge&lt;/a&gt; and &lt;a class="reference external" href="http://hg.python.org/peps/rev/8a6e3b28dbef"&gt;maturity&lt;/a&gt;.  Also,
his great work has been &lt;a class="reference external" href="http://www.python.org/community/awards/psf-awards/#september-2011"&gt;officially recognized by the Python Software
Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first work that prompted this recognition as &lt;a class="reference external" href="http://tshepang.net/tags#developer-of-note-ref"&gt;developer of note&lt;/a&gt;
is the proposal, &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0413/"&gt;PEP 413&lt;/a&gt;. The idea is that the Python standard
library (stdlib) should release at a quicker rate than the Python
language itself.  This is a nice balance between two camps: those
favoring &lt;em&gt;stability&lt;/em&gt; over quicker availability of features, and those
favoring the opposite.  The PEP (Python Enhancement Proposal) is quite
thorough, and is partly in opposition to the earlier &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0407"&gt;PEP 407&lt;/a&gt;, which
proposes that all of CPython (the language and its stdlib) should
release faster.  Nick Coghlan outlines the disadvantages with that
approach in PEP 413 as well.&lt;/p&gt;
&lt;p&gt;Another PEP he is working on is &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0432"&gt;PEP 432&lt;/a&gt;. Titled &lt;em&gt;Simplifying the
CPython startup sequence&lt;/em&gt;, it's a highly detailed proposal to
re-organise some of CPython code to ease maintenance. His deep
knowledge on the project's internals is also exposed.&lt;/p&gt;
&lt;p&gt;Nick also builds and maintains a collection of notes known simply as
&lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/index.html"&gt;Nick Coghlan's Python Notes&lt;/a&gt;. There is much wisdom there (complete
with high quality clear writing), favorite of which is the just-updated
&lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/pep_ideas/core_packaging_api.html#incremental-plans-to-improve-python-packaging"&gt;Incremental Plans to Improve Python Packaging&lt;/a&gt;, a thorough write-up
on the history, current state, and future plans regarding the story of
packaging (and installation) in the Python ecosystem.  He also happens
to be a great champion in pushing for progress on that front.&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="Python"></category></entry><entry><title>I nid tu rilex</title><link href="http://tshepang.net/i-nid-tu-rilex" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-28:i-nid-tu-rilex</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I have an unrealistic expectation of myself. I fail to meet that
expectation. This makes me feel guilty and stressed.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;from &lt;a class="reference external" href="http://www.eyrie.org/~eagle/journal/2012-09/002.html"&gt;an excellent article&lt;/a&gt; by Russ Allbery, a Debian Developer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I need to take this advice seriously... I need to relax a bit.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>my current plans for wajig</title><link href="http://tshepang.net/my-current-plans-for-wajig" rel="alternate"></link><updated>2013-09-30T23:28:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-27:my-current-plans-for-wajig</id><summary type="html">&lt;p&gt;Some stuff I might work on in future:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I want to start using &lt;a class="reference external" href="https://github.com/kislyuk/argcomplete"&gt;argcomplete&lt;/a&gt; at some point, a more dynamic
shell completion tool, replacing the current hand-rolled solution.
I find shell programming hard, and argcomplete, which is inspired by
&lt;a class="reference external" href="http://furius.ca/optcomplete/"&gt;optcomplete&lt;/a&gt; is a brilliant workaround.&lt;/li&gt;
&lt;li&gt;Someone asked me to restore gjig, the GUI tool that &lt;a class="reference external" href="http://tshepang.net/wajig-21-released"&gt;I removed from
wajig&lt;/a&gt; some releases ago. This will be an opportunity to learn
GTK+ again. I did a bit of it, even contributing patches (&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker
project&lt;/a&gt;), but was never quite confident. It's very likely that I
won't work on this... too much work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But ultimately, I would love for the standard Debian packaging tools
to get the the point where they make wajig irrelvant. After all, wajig
was created to be a wrapper that helps ease the mess.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Here's the work I did in the past working on wajig, have a look at
&lt;a class="reference external" href="http://tshepang.net/tags#wajig-ref"&gt;its tag&lt;/a&gt;. Off the top of my head:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;improved, simplied packaging&lt;/li&gt;
&lt;li&gt;port to Python 3&lt;/li&gt;
&lt;li&gt;port to argparse (from getopt), which also meant proper handling of
subcommands&lt;/li&gt;
&lt;li&gt;increased usage of python-apt, instead of hand-crafted (and ugly)
code&lt;/li&gt;
&lt;li&gt;a few feature additions&lt;/li&gt;
&lt;li&gt;(lots of) modernising the code&lt;/li&gt;
&lt;li&gt;(lots of) cleaning up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And over 800 commits later, I am glad.&lt;/p&gt;
</summary><category term="wajig"></category><category term="Python"></category><category term="Tracker"></category></entry><entry><title>shutil.which() rocks</title><link href="http://tshepang.net/shutilwhich-rocks" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-26:shutilwhich-rocks</id><summary type="html">&lt;p&gt;Unix/Linux systems have a simple (but useful) tool named &lt;cite&gt;which&lt;/cite&gt;,
whose main purpose is to indicate where in the filesystem a particular
executable is installed. This functionality was added in Python 3.3,
and though simple, I was looking forward to its availability in
Debian, just so I could replace wajig's own equivalent functionality,
which only checked for file presence, and was hard-coded and therefore
inflexible. &lt;a class="reference external" href="http://docs.python.org/3/library/shutil#shutil.which"&gt;shutil.which()&lt;/a&gt;, OTOH, looks for the given executable name
in user's PATH and is more thorough, since it also checks if the
executable name points to something that is actually executable.  So,
making use of this new function resulted in more robust code, as well
as &lt;a class="reference external" href="https://code.google.com/p/wajig/source/detail?r=e419e439e47f880ab17f6394e3faaa8ce3b15fe1"&gt;a lot cleaner&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a sidenote, this functionality &lt;a class="reference external" href="http://bugs.python.org/issue444582"&gt;was first proposed in 2001&lt;/a&gt;!&lt;/p&gt;
</summary><category term="Python"></category><category term="wajig"></category></entry><entry><title>Enter the Wu-Tang (36 Chambers)</title><link href="http://tshepang.net/enter-the-wu-tang-36-chambers" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-23:enter-the-wu-tang-36-chambers</id><summary type="html">&lt;p&gt;I very much enjoyed listening to this album, which also happens to be
the first by the group, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Wu-Tang_Clan"&gt;Wu-Tang Clan&lt;/a&gt;. My favorite tracks:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;track 04: &lt;strong&gt;Wu-Tang: 7th Chamber&lt;/strong&gt;; also redone (track 12)&lt;/li&gt;
&lt;li&gt;track 09: &lt;strong&gt;Method Man&lt;/strong&gt; - me loving the playfulness; also redone (track 13)&lt;/li&gt;
&lt;li&gt;track 07: &lt;strong&gt;Wu-Tang Clan Ain't Nuthing ta Fuck Wit&lt;/strong&gt; - some more playfulness&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="music"></category><category term="very-good"></category></entry><entry><title>job of QA</title><link href="http://tshepang.net/job-of-qa" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-18:job-of-qa</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;... the job of QA is to determine whether things are working as
intended, not to decide what the intentions should be.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lists.fedoraproject.org/pipermail/devel/2013-May/182298"&gt;part of a thread&lt;/a&gt; on Fedora's main development mailing list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author goes on to give some solid advice which is applicable to
pretty much every notable project out there:&lt;/p&gt;
&lt;blockquote&gt;
It is not possible, however you organize such a project, for
everyone to have a voice in everything. It is not possible to
subject every decision to some kind of public review process. It
is a statistical certainty that things you disagree with are going
to happen. This is something you need to reconcile yourself to.&lt;/blockquote&gt;
</summary><category term="quote"></category><category term="non-Debian"></category></entry><entry><title>koolest projekts</title><link href="http://tshepang.net/koolest-projekts" rel="alternate"></link><updated>2013-10-16T09:13:57+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-15:koolest-projekts</id><summary type="html">&lt;p&gt;These are what I find to be the most exciting projects, today:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://pypy.org"&gt;PyPy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's been alive for over 10 years, but it's still generally
considered among the most exciting of all Python projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://www.discourse.org"&gt;Discourse&lt;/a&gt; (&lt;a class="reference external" href="http://tshepang.net/project-of-note-discourse"&gt;project_of_note&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://freedesktop.org/wiki/Software/systemd"&gt;systemd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This one has since been &lt;a class="reference external" href="http://0pointer.de/blog/projects/systemd"&gt;announced in April 2010&lt;/a&gt;, but I still do
find it kool. It is sad that it still receives so much unlove from
so many people, much of which isn't constructive. I am hoping it
displaces both it's main competitors, sysvinit and upstart, at some
point.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category><category term="non-Python"></category></entry><entry><title>links 2013-05-11</title><link href="http://tshepang.net/links-2013-05-11" rel="alternate"></link><updated>2013-11-26T19:24:24+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-11:links-2013-05-11</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ardahal"&gt;My first GitHub follower&lt;/a&gt;; at this time, he is following 140
others, so maybe I not so specialness.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.python.org/cpython/rev/d5ef330bac50"&gt;Python interpreter finally gets tab completion by default&lt;/a&gt;;
to see wide use, this will have to wait for 3.4 release,
&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0429"&gt;which will only arrive early 2014&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="http://debbugs.gnu.org/cgi/bugreport.cgi?bug=14355"&gt;my first bug report for Emacs&lt;/a&gt;,
perhaps my first ever to a pure GNU project;
I say this because GNOME claims to be one, but it's really only by name.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pypy.org/performance.html"&gt;Excellent guide on improving Python performance&lt;/a&gt;;
it's written with PyPy in mind, but has excellent generic advice.&lt;/li&gt;
&lt;li&gt;I enjoyed &lt;a class="reference external" href="http://thechangelog.com/86"&gt;this podcast&lt;/a&gt; where Jeff Atwood talks about his new
project, &lt;a class="reference external" href="http://www.discourse.org"&gt;Discourse&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category><category term="GNOME"></category><category term="links"></category><category term="Emacs"></category></entry><entry><title>project of note: Discourse</title><link href="http://tshepang.net/project-of-note-discourse" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-11:project-of-note-discourse</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html"&gt;The announcement&lt;/a&gt; by project lead, Jeff Atwood, sold me. This is one
rather incredible guy, a game changer of sorts, most notable for
helping create what is likely &lt;a class="reference external" href="http://stackoverflow.com"&gt;the most important programming resource
on the web&lt;/a&gt;. So whenever he goes and creates something else, I
naturally do pay attention, and this &lt;a class="reference external" href="http://www.discourse.org"&gt;Discourse&lt;/a&gt; thing looks amazing,
from by limited usage so far.&lt;/p&gt;
&lt;p&gt;I am just jealous that it's written in Ruby, and not Python. I am also
jealous that &lt;a class="reference external" href="http://blog.discourse.org/2013/04/the-discourse-servers"&gt;the main service runs on Ubuntu, and not Debian&lt;/a&gt;.&lt;/p&gt;
</summary><category term="non-Python"></category><category term="non-Debian"></category><category term="project-of-note"></category></entry><entry><title>me loving Auto Fill Mode (Emacs)</title><link href="http://tshepang.net/me-loving-auto-fill-mode-emacs" rel="alternate"></link><updated>2013-11-26T19:24:24+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-10:me-loving-auto-fill-mode-emacs</id><summary type="html">&lt;p&gt;For the past 2 weeks or so, I have been learning Emacs, something I've
been meaning to do for years now. I decided to do it seriously (not
skip a day, sometimes hours at a time), and am really liking it. It's
a very well-designed application with a great amount of polish, far
more than anything I've seen yet (I've used Vim, Geany, Scribes, and
Eclipse).  It also helps that the documentation is so
&lt;a class="reference external" href="http://tshepang.net/projects-with-excellent-documentation"&gt;well-written&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So far, my single most favorite feature is &lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Fill"&gt;Auto Fill Mode&lt;/a&gt;, which
allows you to keep typing without caring about line breaks, for they
get automatically get applied for you. Am very sure that this feature
exists elsewhere, but I actually never used it.&lt;/p&gt;
&lt;p&gt;Related to that is the &lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Fill-Commands"&gt;fill-paragraph&lt;/a&gt; command, which is invoked via
the Alt+q shortcut (M-q) in Emacs speak. What it does is reformat the
paragraph as if it was typed while in Auto Fill Mode. Is gorgeous!&lt;/p&gt;
</summary><category term="Emacs"></category></entry><entry><title>'How Many' by Busta Rhymes</title><link href="http://tshepang.net/how-many-by-busta-rhymes" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-28:how-many-by-busta-rhymes</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Busta_Rhymes"&gt;Busta Rhymes&lt;/a&gt; has a mixtape named &lt;em&gt;Cut Master C With Busta Rhymes&lt;/em&gt;,
and in there is a version of &lt;strong&gt;How Many Mics&lt;/strong&gt; from the album, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/The_Score_(album)"&gt;The Score&lt;/a&gt;
(simply titled &lt;strong&gt;How Many&lt;/strong&gt;).
Busta Rhymes is among the most highly-skilled of all rappers, ever,
but hardly ever performs in supreme tracks,
so was excited to listen to his take on one of the best hip-hop tracks ever
(from &lt;a class="reference external" href="http://tshepang.net/top-tracks-fugees"&gt;the best ever hip-hop album&lt;/a&gt;).&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>Python pipedreams</title><link href="http://tshepang.net/python-pipedreams" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-27:python-pipedreams</id><summary type="html">&lt;p&gt;None of these is likely to happen at all.
It's even safe to use the word &lt;em&gt;never&lt;/em&gt; with a great amount of certainty;
but I wanted to document them anyway, if for no other reason than rescue
them from the exclusiveness of my mind:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;remove &lt;tt class="docutils literal"&gt;f.readlines()&lt;/tt&gt;;
&lt;tt class="docutils literal"&gt;list(f)&lt;/tt&gt; is a clearer and more general replacement (&lt;a class="reference external" href="http://bugs.python.org/issue13510#msg186940"&gt;source&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;rm &lt;tt class="docutils literal"&gt;os.system&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;os.popen*&lt;/tt&gt; and relatives;
we already have the &lt;a class="reference external" href="http://docs.python.org/3/library/subprocess"&gt;subprocess module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;rid of all forms of string formatting,
other than &lt;a class="reference external" href="http://docs.python.org/3/library/string#string-formatting"&gt;Advanced String Formatting&lt;/a&gt;;
do it everywhere, including the &lt;a class="reference external" href="http://docs.python.org/3/library/logging"&gt;logging module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;change module names to be PEP-compliant, everywhere&lt;/li&gt;
&lt;li&gt;remove &lt;tt class="docutils literal"&gt;lambda&lt;/tt&gt;; it's not Pythonic, and just feels like a wart;
it also does a good job of making Python code less readable&lt;/li&gt;
&lt;li&gt;change &lt;cite&gt;def&lt;/cite&gt; keyword to &lt;cite&gt;func&lt;/cite&gt;; it's more descriptive&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category></entry><entry><title>links 2013-04-25</title><link href="http://tshepang.net/links-2013-04-25" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-25:links-2013-04-25</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stallman.org/apple"&gt;Apple is a scary company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://soziev.com"&gt;this is one incredible web designer&lt;/a&gt; (&lt;a class="reference external" href="http://delaguardia.com.mx"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.delaguardia.com.mx/pyramid-view-configuration-let-me-count-the-ways.html"&gt;nice and detailed post about Pyramid's powerful View configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.dell.com/us/business/p/xps-13-linux/pd"&gt;my dream laptop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://meta.stackoverflow.com/a/145813/147166"&gt;how to evaluate competing technologies for use&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="hardware"></category><category term="links"></category></entry><entry><title>project of note: Debian Installer</title><link href="http://tshepang.net/project-of-note-debian-installer" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-24:project-of-note-debian-installer</id><summary type="html">&lt;p&gt;I've recently looked at Ubuntu's 10.04 and 10.10 installers, and they
are quite nifty tools, so fresh and gorgeous, and so easy to use that
nobody would dare say &amp;quot;I can't install Linux!&amp;quot;. And then I recently
re-installed my Debian system and I don't really see how much harder it
is to use than Ubuntu's (except that it's far uglier, so I guess that
also makes it intimidating).&lt;/p&gt;
&lt;p&gt;What triggered this post is the following titbit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;d-i [Debian Installer] is the very first thing many of our users
see, and has a huge range of uses, from simple desktop installs to
massive corporate deployments; it's unspeakably important that it
works well, and it's a testament to its design that it's been able
to trundle along without actually very much serious refactoring for
the best part of five years now.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://raphaelhertzog.com/2010/11/25/people-behind-debian-colin-watson/"&gt;an interview of Colin Watson&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In addition, this tool (or rather, a set of tools) also happens to be
rock-solid tool, and its great reliability gets admiration from me on
each install (and I've done dozens, with not one instance of data loss).&lt;/p&gt;
</summary><category term="Debian"></category><category term="project-of-note"></category><category term="quote"></category></entry><entry><title>the not grateful</title><link href="http://tshepang.net/the-not-grateful" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-24:the-not-grateful</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Unfortunately, my experience has been that most people gloss over the
philosophical arguments in favour of open source,
and focus instead on the price,
viewing open source as a cheap way to fill a software stack.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://cecinestpasun.com/entries/personal-funding-and-culture-open-source"&gt;Personal funding, and the culture of open source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is sad, but the author should have probably used the term &lt;em&gt;Free software&lt;/em&gt;,
instead of &lt;em&gt;open source&lt;/em&gt;... politics vs. convenience.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>top music videos</title><link href="http://tshepang.net/top-music-videos" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-24:top-music-videos</id><summary type="html">&lt;p&gt;Excellence in the track concerned contributes to the magnificence
of its video. I'm a fan of nearly all the following tracks:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Next Movement&lt;/strong&gt; (The Roots)
The odd positions that our stars take and the overall beauty of it
makes it an eternal favourite of mine,
not to mention fact that the track is among my hip-hop favourites.
The simplicity of the video contributes and so is the fact it
remains entertaining despite that it's shot in just one room,
which is the kind of inventiveness I admire in art.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;That Thing&lt;/strong&gt; (Lauryn Hill)
Flawlessly merges the views of two eras on one screen.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Got Till It's Gone&lt;/strong&gt; (Janet Jackson)
Great direction and cinematography as well as the casting makes
this an eternal masterpiece.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stranger in Moscow&lt;/strong&gt; (Michael Jackson; Director - Nick Brandt)
Among the best camerawork and editing with magnificent slow-motion
scenes.. towards perfection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Sixth Sense&lt;/strong&gt; (Common)
Excellently capturing an unexplained event which looks like some
sort of chaos, causing looks of despair and wonder among the
characters conecerned, some catching it on tv,
some near the event... powerful.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Everything is Everything&lt;/strong&gt; (Lauryn Hill)
Great VFX showcasing NYC as a turntable are hard to beat.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hey Ya&lt;/strong&gt; (OutKast)
The high energy the video invokes, the appeal of seeing
a member of OutKast perform, and the VFX makes for an
exciting experience.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Respiration&lt;/strong&gt; (Mos Def &amp;amp; Talib Kweli feat. Common)
Beautiful images of them great rappers strutting their style enhanced
shot by the black and style camerawork with some wonderful busy city
images.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Egumnandini&lt;/strong&gt; (Doc Shebeleza)
Few videos were aver able to capture the township party scene with
such energy and believability. The cinematography is quite good too.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Who We Be&lt;/strong&gt; (DMX)
I usually like DMX's music videos because of their craftsmanship and the
messages they portray -- staying away from the annoying booty-shows
that so many succesful other rappers employ. This one is armed with
some excellent editing, some good visual effects, and some real-life
footage all put in the mix.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Love of My Life&lt;/strong&gt; (Erykah Badu)
Erykah Badu's perfomance, as is the case in her videos, draws
one's attention, despite a huge anti-climactic slow-down in
the middle of the song.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All 'n my Grill&lt;/strong&gt; (Missy Elliot)
This could have been higher in the ratings had its mighty New York
settings -- with the dark lighting and that famous yellow-taxi
scenery -- not been interrupted by the boring dancing that Missy
likes so much in her videos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feel It Boy&lt;/strong&gt; (Beenie Man ft. Janet Jackson; Dir: Dave Meyers)
Gorgeous, mellow, and digitally-manipulated envionment which offers rare
warmth. It boasts perhaps the largest collection of gorgeous gals of any
music video I've seen. Jackson doesn't look comfortable though, with
unnatural poses.&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="music"></category></entry><entry><title>notes on desirism</title><link href="http://tshepang.net/notes-on-desirism" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-21:notes-on-desirism</id><summary type="html">&lt;p&gt;Stuff I scribbled down after listening to the first Season of a
now-defunct &lt;a class="reference external" href="http://commonsenseatheism.com/?p=11626"&gt;series on applied ethics&lt;/a&gt;,
all an attempt to make sense of it all:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;morality:&lt;ul&gt;
&lt;li&gt;a subset of a theory of values&lt;/li&gt;
&lt;li&gt;it deals with:&lt;ul&gt;
&lt;li&gt;obligation&lt;/li&gt;
&lt;li&gt;prohibition&lt;/li&gt;
&lt;li&gt;permission&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;value: concerned with reasons for action&lt;/li&gt;
&lt;li&gt;desires:&lt;ul&gt;
&lt;li&gt;the only reasons for action that exist&lt;/li&gt;
&lt;li&gt;all value is ultimately based on desires&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;all intentional actions are grounded on believes and desires&lt;/li&gt;
&lt;li&gt;believes are motivationally inert&lt;/li&gt;
&lt;li&gt;what good people do:&lt;ul&gt;
&lt;li&gt;promote desires that tend to fulfill other desires&lt;/li&gt;
&lt;li&gt;inhibit desires that tend to thwart other desires&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;what tools to use:&lt;ul&gt;
&lt;li&gt;use praise to promote good desires&lt;/li&gt;
&lt;li&gt;use condemnation to inhibit bad desires&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;there are two forms of desires:&lt;ul&gt;
&lt;li&gt;desires-as-means&lt;/li&gt;
&lt;li&gt;desires-as-ends (the type that actually matters)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;shortcuts:&lt;ul&gt;
&lt;li&gt;the only desires relevant to the discussion are &lt;em&gt;malleable&lt;/em&gt; desires&lt;/li&gt;
&lt;li&gt;the only actions relevant to the discussion are &lt;em&gt;intentional&lt;/em&gt; actions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="ethics"></category></entry><entry><title>project of note: M cross environment</title><link href="http://tshepang.net/project-of-note-m-cross-environment" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-20:project-of-note-m-cross-environment</id><summary type="html">&lt;p&gt;I spend several hours researching how to build a Qt app (written in C++)
on Debian for users who will run it on Windows.
I also wanted it be just one binary at the end so that deployment is just
a matter of copying and running the one executable.
This means I needed to statically-compile the app,
and the sad news is that I first needed to build Qt itself statically.&lt;/p&gt;
&lt;p&gt;If I had actually known of &lt;a class="reference external" href="http://mxe.cc"&gt;M cross environment&lt;/a&gt; (MXE), I would have
shaved nearly all of those 'wasted' hours. I am very grateful to the
developers, especially because building Qt was mainly a matter of
installing &lt;a class="reference external" href="http://mxe.cc/#requirements-debian"&gt;a few build dependencies&lt;/a&gt; and running &lt;tt class="docutils literal"&gt;make qt&lt;/tt&gt;. An hour
or two later, I had newly cross-compiled Qt waiting for my use. It was
also pleasant that the app, in a form of a &lt;tt class="docutils literal"&gt;.exe&lt;/tt&gt; file, just worked on
Windows 7.&lt;/p&gt;
&lt;p&gt;Having a look around, the build system actually looks elegant, and is a
lot simpler than the scary mess that is &lt;a class="reference external" href="https://live.gnome.org/Jhbuild"&gt;JHBuild&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I have published two guides on Stack Overflow on how this works,
&lt;a class="reference external" href="http://stackoverflow.com/a/13211922/321731"&gt;one for Qt 4&lt;/a&gt; and &lt;a class="reference external" href="http://stackoverflow.com/a/14170591/321731"&gt;another for Qt 5&lt;/a&gt;.&lt;/p&gt;
</summary><category term="non-Debian"></category><category term="project-of-note"></category><category term="non-Python"></category></entry><entry><title>am joining Gittip</title><link href="http://tshepang.net/am-joining-gittip" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-13:am-joining-gittip</id><summary type="html">&lt;p&gt;In &lt;a class="reference external" href="http://sayspy.blogspot.com/2013/04/why-im-signing-up-for-gittip.html"&gt;Why I'm signing up for Gittip&lt;/a&gt;, a core CPython commiter, Brett
Cannon, mentions a great reason to reward FLOSS contributors
financially:&lt;/p&gt;
&lt;blockquote&gt;
... a way for the community to thank someone's family for letting
them share their loved one with open source.  For instance, tips
for me would be a way of thanking my wife for letting me spend the
hours I do contributing to Python in my various ways by letting me
treat my wife to a night out so neither of us has to cook.&lt;/blockquote&gt;
&lt;p&gt;He inspired me to actually go find a bit more about this &lt;a class="reference external" href="https://www.gittip.com"&gt;Gittip&lt;/a&gt;
thing, after which &lt;a class="reference external" href="https://www.gittip.com/tshepang"&gt;I decided to participate&lt;/a&gt; as well.&lt;/p&gt;
&lt;p&gt;In terms of money, I previously fooled around with &lt;a class="reference external" href="http://flattr.com"&gt;flattr&lt;/a&gt; too, but
stopped along the way for some reason (after a few months), so will
see how long this one relationship lasts.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>looking at liquidluck themes</title><link href="http://tshepang.net/looking-at-liquidluck-themes" rel="alternate"></link><updated>2013-09-30T23:28:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-13:looking-at-liquidluck-themes</id><summary type="html">&lt;p&gt;Following are demos of all liquidluck themes I could find,
all running &lt;a class="reference external" href="https://bitbucket.org/tshepang/blog/src"&gt;this source&lt;/a&gt;,
but each slightly modified to change theme name (&lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/lepture/liquidluck-theme-moment"&gt;moment&lt;/a&gt; (the default theme; &lt;a class="reference external" href="http://demo-moment.tshepang.net"&gt;demo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/bingdian/liquidluck-theme-responsive"&gt;responsive&lt;/a&gt; (&lt;a class="reference external" href="http://demo-responsive.tshepang.net"&gt;demo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/popomore/liquidluck-theme-reveal"&gt;reveal&lt;/a&gt; (&lt;a class="reference external" href="http://demo-reveal.tshepang.net"&gt;demo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/leandromouta/liquidluck-theme-thegrey"&gt;thegrey&lt;/a&gt; (&lt;a class="reference external" href="http://demo-thegrey.tshepang.net"&gt;demo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/microjo/liquidluck-theme-lovelymod"&gt;lovelymod&lt;/a&gt; (&lt;a class="reference external" href="http://demo-lovelymod.tshepang.net"&gt;demo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/bcho/liquidluck-theme-cb3f20"&gt;cb3f20&lt;/a&gt; (&lt;a class="reference external" href="http://demo-cb3f20.tshepang.net"&gt;demo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/lepture/liquidluck-theme-chiang"&gt;chiang&lt;/a&gt; (&lt;a class="reference external" href="http://demo-chiang.tshepang.net"&gt;demo&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I get a blank page&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;When building, it fails with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[E 130413 20:53:48 base:42] 'None' has no attribute 'strftime'
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/lianqin7/liquidluck-theme-icbu"&gt;icbu&lt;/a&gt; (&lt;a class="reference external" href="http://demo-icbu.tshepang.net"&gt;demo&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;When building, I get 2 of these messages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[E 130413 23:40:19 base:42] 'dict object' has no attribute 'package'
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/lepture/liquidluck-theme-octopress"&gt;octopress&lt;/a&gt; (&lt;a class="reference external" href="http://demo-octopress.tshepang.net"&gt;demo&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;When building, I get 4 of these messages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[E 130413 23:33:53 base:42] list index out of range
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/lepture/liquidluck-theme-bootstrap"&gt;bootstrap&lt;/a&gt;: &lt;a class="reference external" href="https://github.com/lepture/liquidluck-theme-bootstrap/issues/1"&gt;broken&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="blogging"></category></entry><entry><title>a nicer-sounding word than 'propaganda'</title><link href="http://tshepang.net/a-nicer-sounding-word-than-propaganda" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-12:a-nicer-sounding-word-than-propaganda</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;...O'Reilly meme-engineers a nice euphemism -- &amp;quot;meme-engineering&amp;quot; -- to
describe what has previously been known as &amp;quot;propaganda.&amp;quot;&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://thebaffler.com/past/the_meme_hustler"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a reaction to Tim O'Reilly's definition of that nicer-sounding term,
which goes thus:&lt;/p&gt;
&lt;blockquote&gt;
Just as gene engineering allows us to artificially shape genes,
meme-engineering lets us organize and shape ideas so that they
can be transmitted more effectively,
and have the desired effect once they are transmitted.&lt;/blockquote&gt;
&lt;p&gt;All this could be out-of-context, but I didn't care to check for myself.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>links 2013-04-12</title><link href="http://tshepang.net/links-2013-04-12" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-12:links-2013-04-12</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://arunrocks.com/moving-blogs-to-pelican"&gt;a nice post&lt;/a&gt; on why static blog generation rocks;
much better (and more detailed) than &lt;a class="reference external" href="http://tshepang.net/what-me-loves-about-static-website-generation"&gt;mine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://xkcd.com/1102"&gt;the fallacy of fast growth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://xkcd.com/933"&gt;being hardcore&lt;/a&gt;; nice humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://english.blogoverflow.com/2012/12/the-give-that-keeps-on-gifting-the-protean-nature-of-english-words-and-why-thats-a-good-thing/"&gt;embracing an ever-changing language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;loving the clean design of &lt;a class="reference external" href="http://craig.is/writing/chrome-logger/techspecs"&gt;this page&lt;/a&gt;;
most of all, I love the code/pre tag rendering.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="blogging"></category><category term="links"></category></entry><entry><title>me likes subprocess.DEVNULL</title><link href="http://tshepang.net/me-likes-subprocessdevnull" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-11:me-likes-subprocessdevnull</id><summary type="html">&lt;p&gt;If you want to run an external process from within Python, and are not
interested in the error that process may emit, there are a few ways,
and I will demonstrate this by opening a Python shell in a directory
that isn't version-controlled by &lt;a class="reference external" href="http://mercurial.selenic.com"&gt;Mercurial&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;So, we don't want to see this ugliness:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split())
abort: no repository found in '/home/tshepang/projects/pyramid' (.hg not found)!
255
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;So, here's the simplest solution:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split(), stderr=open(os.devnull))
255
&lt;/pre&gt;
&lt;p&gt;Problem: it leaves the file descriptor open... not good.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;We fix:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; DEVNULL = open(os.devnull)
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split(), stderr=DEVNULL)
255
&amp;gt;&amp;gt;&amp;gt; DEVNULL.close()
&lt;/pre&gt;
&lt;p&gt;Much better, much uglier. (&lt;a class="reference external" href="https://bitbucket.org/tshepang/scripts/src/tip/vcs.py"&gt;example usage&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Something better:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; with open(os.devnull) as DEVNULL:
...     call('hg status'.split(), stderr=DEVNULL)
255
&lt;/pre&gt;
&lt;p&gt;Looks much nicer, and is more convenient,
unless we wanted to do something similar multiple times,
in which case the previous example would be preferable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Best solution:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call, DEVNULL
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split(), stderr=DEVNULL)
255
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This &lt;a class="reference external" href="http://hg.python.org/cpython/rev/eaf93e156dff"&gt;small and wonderful feature&lt;/a&gt; is &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.3.html#subprocess"&gt;new as of Python 3.3&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Python"></category><category term="VCS"></category></entry><entry><title>a bit of poetry</title><link href="http://tshepang.net/a-bit-of-poetry" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-07:a-bit-of-poetry</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;There will always be justifications that a war is needed because
of this oppressor or that incursion or this unforgivable action.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="https://news.ycombinator.com/item?id=5506999"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I thought that was well-put. English can be a beautiful language.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>companies I deeply appreciate</title><link href="http://tshepang.net/companies-i-deeply-appreciate" rel="alternate"></link><updated>2013-10-09T23:33:14+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-07:companies-i-deeply-appreciate</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Red_Hat"&gt;Red Hat&lt;/a&gt; contributes more to &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open_source_software"&gt;FLOSS&lt;/a&gt; than any other company,
employing hundreds of developers to work full-time on it.&lt;/li&gt;
&lt;li&gt;Google&lt;ul&gt;
&lt;li&gt;Runs &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Google_Summer_of_Code"&gt;the Summer of Code program&lt;/a&gt;, which pays hundreds of
students to work full-time for a few months on FLOSS projects of
their choosing.&lt;/li&gt;
&lt;li&gt;Provides Gmail for gratis, which I use as my primary web address.&lt;/li&gt;
&lt;li&gt;Funds the development of Chromium,
a very credible alternative to the world's major web browsers,
and my personal favorite. It's also FLOSS.&lt;/li&gt;
&lt;li&gt;Funds most of the development of Android, which is quickly
becoming the dominant platform for high-end phones, and also
happens to be mostly FLOSS (though I hate the closed development).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://stackexchange.com"&gt;Stack Exchange&lt;/a&gt; family of sites attempt to provide the best Q&amp;amp;A
for a wide array of topics. They have succeeded specifically in one
topic, programming, in a form of &lt;a class="reference external" href="http://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.atlassian.com"&gt;Atlassian&lt;/a&gt; offers &lt;a class="reference external" href="https://bitbucket.org"&gt;Bitbucket&lt;/a&gt;,
a gratis hosting service for public software projects;
this is a great thing, but not special since there are others offering
the same, most notably &lt;a class="reference external" href="https://github.com"&gt;GitHub&lt;/a&gt;.
What makes it special is that it also offers gratis hosting
for unlimited private repositories.
I have over a dozen such repositories and each time I create one,
I feel like the world is a wonderful place... I am grateful.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="list"></category></entry><entry><title>what me loves about static website generation</title><link href="http://tshepang.net/what-me-loves-about-static-website-generation" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-06:what-me-loves-about-static-website-generation</id><summary type="html">&lt;p&gt;There's a ridiculous amount of power and flexiblity in having all the
blog sources locally:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One can use text editor of choice, which is a big help,
given the quality of web-based editors in general.&lt;/li&gt;
&lt;li&gt;What this implies is that I can now put the blog in a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Revision_control"&gt;VCS&lt;/a&gt;.
This acts as some sort of backup too,
since I place my sources on &lt;a class="reference external" href="https://bitbucket.org/tshepang/blog"&gt;a remote server&lt;/a&gt;. &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This also means that I can do a heck of a lot of edits without being
connected to the web, or deeper changes like playing search-replace
through the entire blog.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="cons"&gt;
&lt;h2&gt;cons&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The complexity of &lt;a class="reference external" href="http://tshepang.net/blogging-with-pelican"&gt;the setup&lt;/a&gt; is going to scare many people away.&lt;/li&gt;
&lt;li&gt;It can take a lot of time to setup;
For me, this was made worse by having a lot of posts, as well as
&lt;a class="reference external" href="http://tshepang.net/favorite-pelican-themes"&gt;being rather particular&lt;/a&gt; about the look and functionality of the output.&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I used to run a command like &lt;tt class="docutils literal"&gt;wget &lt;span class="pre"&gt;--mirror&lt;/span&gt; &lt;span class="pre"&gt;http://tshepang.net&lt;/span&gt;&lt;/tt&gt;
once in a while, just in case!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="blogging"></category></entry><entry><title>links 2013-04-05</title><link href="http://tshepang.net/links-2013-04-05" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-05:links-2013-04-05</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I don't care much for C#, but &lt;a class="reference external" href="http://msmvps.com/blogs/jon_skeet/archive/2011/12/05/book-review-fluent-c-rebecca-riordan-sams.aspx"&gt;this 'negative' book review&lt;/a&gt;
by &lt;a class="reference external" href="http://www.yoda.arachsys.com/csharp/"&gt;a luminary&lt;/a&gt; in the .NET community is worthy.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pycon.blip.tv/file/4880330/"&gt;a video&lt;/a&gt; on the awesome Disqus commenting system&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2011-06-03-libreoffice-3-4-0.html"&gt;LibreOffice progress&lt;/a&gt; is quite impressive.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://journal.dedasys.com/2011/07/25/why-i-prefer-text-to-video"&gt;pros of text over video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.boredomandlaziness.org/2011/08/scripting-languages-and-suitable.html"&gt;going from simple to complex in teaching/learning programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="GNOME"></category><category term="Python"></category><category term="non-Python"></category><category term="links"></category></entry><entry><title>project of note: PostgreSQL</title><link href="http://tshepang.net/project-of-note-postgresql" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-04:project-of-note-postgresql</id><summary type="html">&lt;p&gt;Among those rather quite (in terms of controversy) but highly-respectable
projects, it appears there really isn't any FLOSS DBMS system that compares.
It even bills itself &lt;em&gt;the most advanced open source database&lt;/em&gt; on
&lt;a class="reference external" href="http://www.postgresql.org/"&gt;its main page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've had great honors for the project for years now,
but what prompted this post is its &lt;a class="reference external" href="http://www.postgresql.org/support/security/faq/2013-04-04/"&gt;2013-04-04 Security Release FAQ&lt;/a&gt;
(&lt;a class="reference external" href="http://www.piware.de/2013/04/urgent-postgresql-security-updates-for-debianubuntu/"&gt;via&lt;/a&gt;), a highly-detailed and thorough explanation regarding an important
security issue affecting a few of its releases.
Reading this, one gets the idea that it's some serious developers running
the project, and I deeply appreciate.&lt;/p&gt;
</summary><category term="project-of-note"></category></entry><entry><title>me loving the Kiln Harmony concept</title><link href="http://tshepang.net/me-loving-the-kiln-harmony-concept" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-03:me-loving-the-kiln-harmony-concept</id><summary type="html">&lt;p&gt;I tend to work a lot with both Git and Mercurial,
and to ease the pain of forgetting which I'm using at a given moment,
I created a setup I described on &lt;a class="reference external" href="http://tshepang.net/easing-switching-between-git-and-mercurial"&gt;another post&lt;/a&gt;.
An even better solution is having all this sorted out on the server side,
so that it doesn't matter which of the two I'm using.
This comes in a form of a product named &lt;a class="reference external" href="http://blog.fogcreek.com/announcing-kiln-harmony-the-future-of-dvcs/"&gt;Kiln Harmony&lt;/a&gt;,
which also turns out to be &lt;a class="reference external" href="https://news.ycombinator.com/item?id=5363085"&gt;a complex beast&lt;/a&gt; behind-the-scenes.
Would be kool to see a FLOSS implementation of this.&lt;/p&gt;
</summary><category term="non-FLOSS"></category><category term="VCS"></category></entry><entry><title>developer of note: Vinay Sajip</title><link href="http://tshepang.net/developer-of-note-vinay-sajip" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-31:developer-of-note-vinay-sajip</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://plumberjack.blogspot.com/"&gt;Vinay Sajip&lt;/a&gt; is the maintainer of &lt;a class="reference external" href="http://docs.python.org/library/logging"&gt;logging&lt;/a&gt;, a Python logging
library/module, available in the standard library. What prompted this
post is his tireless improvements, not just to the software itself, but
also the documentation surrounding it (&lt;a class="reference external" href="http://plumberjack.blogspot.com/2011/04/logging-documentation-for-python-27.html"&gt;example&lt;/a&gt;). It's all the more
impressive that he continuously blogs about various ways to use the
module, and maintains &lt;a class="reference external" href="http://docs.python.org/howto/logging-cookbook"&gt;a bunch of nuggets on advanced usage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One early event, which is likely the first
time I noticed him, is the time when he rebutted some apparently
inaccurate claims against the module, at which he responded in a
&lt;a class="reference external" href="http://plumberjack.blogspot.com/2010/09/python-logging-functionality-facts-vs.html"&gt;highly-detailed post&lt;/a&gt;, the sort that lent credence to the module. This
inspired me to give it a try, and &lt;a class="reference external" href="http://docs.python.org/howto/logging.html"&gt;it's not that hard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's one other project he works on, &lt;a class="reference external" href="http://sarge.readthedocs.org"&gt;sarge&lt;/a&gt;, which is like
&lt;a class="reference external" href="http://docs.python.org/library/subprocess"&gt;subprocess&lt;/a&gt; on steroids. Have a look at &lt;a class="reference external" href="http://sarge.readthedocs.org/en/latest/overview.html#why-not-just-use-subprocess"&gt;why he created it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lately, he is working on &lt;a class="reference external" href="https://distlib.readthedocs.org/en/latest/"&gt;distlib&lt;/a&gt;,
a library which implements low-level functions that relate to
packaging and distribution of Python software.
This excites me a lot since it's a key piece in the latest attempt
at fixing Python packaging once and for all.&lt;/p&gt;
&lt;p&gt;On top of all this, he is very active on Stack Overflow,
having answered &lt;a class="reference external" href="http://stackoverflow.com/users/118903/vinay-sajip?tab=answers"&gt;hundreds of questions&lt;/a&gt; there. Amazing!&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="Python"></category></entry><entry><title>links 2013-03-24</title><link href="http://tshepang.net/links-2013-03-24" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-24:links-2013-03-24</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.bash.org/?244321"&gt;great IRC humor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.impressivewebs.com/css-white-space/"&gt;nice CSS white-space explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an &lt;a class="reference external" href="http://simeonfranklin.com/blog/2013/mar/17/my-pycon-2013-poster/"&gt;interesting chart&lt;/a&gt; on the pain beginners may feel when trying to use
Python for particular tasks&lt;/li&gt;
&lt;li&gt;writing a solid feed reader &lt;a class="reference external" href="http://inessential.com/2013/03/18/brians_stupid_feed_tricks"&gt;is not a joke&lt;/a&gt; (&lt;a class="reference external" href="http://www.marco.org/2013/03/19/free-works"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;I got deeply excited as I read about
&lt;a class="reference external" href="http://www.linuxfromscratch.org/hints/downloads/files/more_control_and_pkg_man.txt"&gt;a nice scheme of manual package management&lt;/a&gt;,
one of the many &lt;a class="reference external" href="http://www.linuxfromscratch.org/hints/list.html"&gt;LFS hints&lt;/a&gt;. I am looking forward to
the challenge (which may result in me ditching Debian for home use).&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="non-Debian"></category><category term="humor"></category><category term="Python"></category><category term="links"></category></entry><entry><title>links 2013-03-14</title><link href="http://tshepang.net/links-2013-03-14" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-14:links-2013-03-14</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;each feature release of Python comes with a great amount of changes,
but I was particularly impressed by &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.2"&gt;those of 3.2&lt;/a&gt;;
the latest such release &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.3"&gt;isn't too shabby either&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the all-important factor of success in business... &lt;a class="reference external" href="http://blog.kowalczyk.info/article/ahcj/Easy-vs-probable-or-how-to-make-money-with-softw.html"&gt;luck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;one interesting way of measuring Python 3 adoption is download numbers:
&lt;a class="reference external" href="http://blog.briancurtin.com/posts/the-year-of-the-snake.html"&gt;0.8 million out of a total of 2 million&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;another sad case of Ubuntu diverging from GNOME...
&lt;a class="reference external" href="http://debarshiray.wordpress.com/2012/10/06/goa-why-it-is-the-way-it-is/"&gt;Online Accounts&lt;/a&gt; (&lt;a class="reference external" href="http://blog.yorba.org/jim/2013/02/the-garden-of-the-forking-paths.html"&gt;via&lt;/a&gt;);
as the author of that quality post says, they may have good reasons for this;
but to on the surface, it just looks bad&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://meta.stackoverflow.com/a/67891/147166"&gt;a detailed defense&lt;/a&gt; on the choice of technology for Stack Exchange chat&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category><category term="GNOME"></category><category term="non-Debian"></category><category term="non-FLOSS"></category><category term="links"></category></entry><entry><title>on growing up</title><link href="http://tshepang.net/on-growing-up" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-01:on-growing-up</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Martijn Faassen used to ask us &amp;quot;how fast is PyPy&amp;quot; so we decided to
name an option enabling all optimizations &amp;quot;--faassen&amp;quot;. Then
&amp;quot;--no-faassen&amp;quot; was naturally added too. Later we decided to grow up
and renamed it to &amp;quot;-O2&amp;quot;, and now &amp;quot;-Ojit&amp;quot;.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://morepypy.blogspot.com/2013/02/10-years-of-pypy.html"&gt;a summary of 10 years of PyPy history&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Amazing energy and intellectual prowess the project participants possess,
and &lt;a class="reference external" href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain"&gt;a very respectable project&lt;/a&gt; at that.&lt;/p&gt;
</summary><category term="humor"></category><category term="Python"></category><category term="quote"></category></entry><entry><title>Six Shooter (2005)</title><link href="http://tshepang.net/six-shooter-2005" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-02-24:six-shooter-2005</id><summary type="html">&lt;p&gt;This 27 minute short is worthy mainly due to the loud and fascinating
young guy sitting next to the lead character on a train trip. He happens
to be the most insensitive character I have seen anywhere (if my poor
memory serves me well), and is funny at times. The ending is strange
though, and I guess deliberately pointless.&lt;/p&gt;
&lt;p&gt;I was inspired to watch this due the director, who later on made the
weird and wonderful &lt;a class="reference external" href="http://movies.tshepang.net/seven-psychopaths-2012"&gt;Seven Psychopaths&lt;/a&gt;.&lt;/p&gt;
</summary><category term="good"></category><category term="short"></category></entry><entry><title>great praise for the RPython translation toolchain</title><link href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-02-12:great-praise-for-the-rpython-translation-toolchain</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I am a curmudgeon and I find most new developments in software to be
thoroughly uninteresting. RPython is different. It's the most
interesting thing I've seen in well over a decade.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://tratt.net/laurie/tech_articles/articles/fast_enough_vms_in_fast_enough_time"&gt;Fast Enough VMs in Fast Enough Time&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The highly-detailed article is about the adventures of building
a language VM using the &lt;a class="reference external" href="http://doc.pypy.org/en/latest/translation.html"&gt;RPython toolchain&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Python"></category><category term="quote"></category></entry><entry><title>nice review of Fedora 18</title><link href="http://tshepang.net/nice-review-of-fedora-18" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-01-17:nice-review-of-fedora-18</id><summary type="html">&lt;p&gt;I really enjoyed reading &lt;a class="reference external" href="http://thomas.apestaart.org/log/?p=1514"&gt;this review&lt;/a&gt; of the experience of installing
Fedora 18 and first use. Other than being well-written, I like the fact
that he gives points to each pro and con. I also liked this bit of
opinion, which I totally agree with:&lt;/p&gt;
&lt;blockquote&gt;
Logging in. Being told there are updates. Holy crap – 218 updates –
for a release that’s a day old. Does the word ‘release’ mean
anything anymore? -5. Seriously, freeze that crap for a few days,
only real security issues or facepalm bugs.&lt;/blockquote&gt;
</summary><category term="non-Debian"></category></entry><entry><title>developer of note: Jeff Forcier</title><link href="http://tshepang.net/developer-of-note-jeff-forcier" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-01-15:developer-of-note-jeff-forcier</id><summary type="html">&lt;p&gt;The strength of character that &lt;a class="reference external" href="http://bitprophet.org/about/index.html"&gt;Jeff 'bitprophet' Forcier&lt;/a&gt; possesses is
admirable. He is the lead developer of &lt;a class="reference external" href="http://fabfile.org"&gt;fabric&lt;/a&gt;, the most popular
deployment tool written in Python. I honor him here due to how he
handled the issues with &lt;a class="reference external" href="https://github.com/paramiko/paramiko"&gt;paramiko&lt;/a&gt;, the library that fabric uses
heavily. He had to make tough decisions, like embedding that library in
fabric source (due to various issues), and even forking it. All of this
of course involved a lot of work and discussing, and thankfully at the
end, the original 'owner' of that indispensable piece of software
relented and transferred it to this bitprophet character. This means
Jeff now runs 2 of the most important tools in all of the Python
world... &lt;a class="reference external" href="http://bitprophet.org/blog/2012/09/29/paramiko-and-ssh/"&gt;more of the gory details&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Python"></category><category term="developer-of-note"></category></entry><entry><title>links 2013-01-02</title><link href="http://tshepang.net/links-2013-01-02" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-01-02:links-2013-01-02</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;Go language looks good for web apps:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.kowalczyk.info/article/4dep/Go-vs-Python-for-a-simple-web-server.html"&gt;comparison with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.kowalczyk.info/article/uvw2/Thoughts-on-Go-after-writing-3-websites.html"&gt;evaluation after writing some important apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.t9i.in/2013/01/why-program-in-go/"&gt;combines elegance of Python with speed of C/C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Python import system can be &lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/python_concepts/import_traps.html"&gt;a scary beast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I appreciate this &lt;a class="reference external" href="http://womble.decadent.org.uk/blog/whats-in-the-linux-kernel-for-debian-70-wheezy-part-1.html"&gt;summary of the differences&lt;/a&gt; between upstream
kernel and one included in Debian; would be nice to get more of this,
and also on other major software included in Debian&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://superuser.com/a/236605/34953"&gt;highest-voted answer&lt;/a&gt; I ever gave on &lt;a class="reference external" href="http://stackexchange.com/"&gt;Stack Exchange&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=1149530#p1149530"&gt;benefits of systemd&lt;/a&gt; according to an Arch Linux developer; one
thing I appreciate is that this was written by someone other than
&lt;a class="reference external" href="http://tshepang.net/developer-of-note-lennart-poettering"&gt;systemd project leader&lt;/a&gt;, a controversial figure&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category><category term="non-Python"></category><category term="links"></category></entry><entry><title>misconceptions I had</title><link href="http://tshepang.net/misconceptions-i-had" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-12-26:misconceptions-i-had</id><summary type="html">&lt;p&gt;From &lt;a class="reference external" href="http://en.wikipedia.org/wiki/List_of_common_misconceptions"&gt;one of the most important articles on Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the most surprising one is that microwaves do not work by emitting
waves at resonance frequency of water; they work using &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Dielectric_heating"&gt;some other
method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the Great Wall of China is not visible from space (unaided)&lt;/li&gt;
&lt;li&gt;seasons are not caused by the Earth being closer to the Sun in the
summer than in the winter&lt;/li&gt;
&lt;li&gt;we are not born with all brain cells we will ever have; this is a
recent discovery (2000s)&lt;/li&gt;
&lt;li&gt;Frankenstein was actually the name of the creator of the monster, not
the monster itself&lt;/li&gt;
&lt;li&gt;Thomas Edison did not invent the light bulb&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>top tracks: Fugees</title><link href="http://tshepang.net/top-tracks-fugees" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-12-21:top-tracks-fugees</id><summary type="html">&lt;div class="section" id="masterpieces"&gt;
&lt;h2&gt;4 masterpieces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How Many Mics&lt;/li&gt;
&lt;li&gt;Fu-Gee-La&lt;/li&gt;
&lt;li&gt;The Mask&lt;/li&gt;
&lt;li&gt;Cowboys&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent-works"&gt;
&lt;h2&gt;4 excellent works&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ready Or Not&lt;/li&gt;
&lt;li&gt;Zealots&lt;/li&gt;
&lt;li&gt;The Beast&lt;/li&gt;
&lt;li&gt;Manifest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these are in one album, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/The_Score_(album)"&gt;The Score&lt;/a&gt;, the best hip-hop album ever
made.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="top-tracks"></category><category term="music"></category></entry><entry><title>top tracks: The Roots</title><link href="http://tshepang.net/top-tracks-the-roots" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-12-21:top-tracks-the-roots</id><summary type="html">&lt;div class="section" id="masterpiece"&gt;
&lt;h2&gt;1 masterpiece&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;In the Music [Game Theory]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent-works"&gt;
&lt;h2&gt;8 excellent works&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Lesson - Part III (It's Over Now) [Come Alive]&lt;/li&gt;
&lt;li&gt;Distortion to Static [Do You Want More?!!!??!]&lt;/li&gt;
&lt;li&gt;Don't Feel Right [Game Theory]&lt;/li&gt;
&lt;li&gt;Respond/React [Illadelph Halflife]&lt;/li&gt;
&lt;li&gt;Section [Illadelph Halflife]&lt;/li&gt;
&lt;li&gt;Wot They Do [Illadelph Halflife]&lt;/li&gt;
&lt;li&gt;Next Movement [Things Fall Apart]&lt;/li&gt;
&lt;li&gt;Push Up Ya Lighta [Illadelph Halflife]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is my most favorite of all hip-hop groups. The intensely-talented
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Black_Thought"&gt;Black Thought&lt;/a&gt;, its lead vocalist, is my most favorite of all hip-hop
artists.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="top-tracks"></category><category term="music"></category></entry><entry><title>links 2012-12-19</title><link href="http://tshepang.net/links-2012-12-19" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-12-19:links-2012-12-19</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=cQl6jUjFjp4"&gt;This guy presents&lt;/a&gt; 2 incredible ideas; one has been running for
years (humans translating text that's hard to read by machines, while
authenticating themselves as humans - &lt;a class="reference external" href="http://en.wikipedia.org/wiki/ReCAPTCHA"&gt;reCAPTCHA&lt;/a&gt;), and another that
is brand new, known as &lt;a class="reference external" href="http://duolingo.com/"&gt;Duolingo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.youtube.com/watch?v=-3ml3GP_5fg"&gt;Sbhonyonyo the ugly mermaid&lt;/a&gt; - this is habsolutely (sic) hilarious!&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://news.ycombinator.com/item?id=4787587"&gt;on the supremacy of Japanese toilets&lt;/a&gt;; whoever said toilet humor
can't be smart and hilarious at the same time&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://xkcd.com/915"&gt;Connoisseur&lt;/a&gt; - poking fun at the definition of the word&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://xkcd.com/77/"&gt;Bored With the Internet&lt;/a&gt; - very relevant cartoon, except it applies
to my love for movies, whereby, while watching, am already thinking
what I will write in my review; sometimes I think I am a loser&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="humor"></category></entry><entry><title>errors resulting from setting named pipes to be non-blocking</title><link href="http://tshepang.net/errors-resulting-from-setting-named-pipes-to-be-non-blocking" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-11-18:errors-resulting-from-setting-named-pipes-to-be-non-blocking</id><summary type="html">&lt;p&gt;Using C, I have been writing to named pipes in a non-blocking
way and have been getting a whole bunch of EAGAIN errors.
I have spent way too long on the web trying to find out why,
and bumped onto &lt;a class="reference external" href="http://developerweb.net/viewtopic.php?pid=25967#p25967"&gt;this excellent answer&lt;/a&gt;.
Looking at the manpage, I see that this would give the same value as
EWOULDBLOCK, which is a far more meaningful name in this case.&lt;/p&gt;
&lt;p&gt;This is what will display those errors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;error writing to file &amp;#39;%s&amp;#39;: %s (errno %d)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is how to avoid them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;EWOULDBLOCK&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;error writing to file &amp;#39;%s&amp;#39;: %s (errno %d)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this kind of confusion, I just wish these two
variables did not refer to the same errno value.&lt;/p&gt;
</summary><category term="non-Python"></category></entry><entry><title>links 2012-11-18</title><link href="http://tshepang.net/links-2012-11-18" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-11-18:links-2012-11-18</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lwn.net/Articles/523058/"&gt;Challenges for Linux networking&lt;/a&gt;; sad to read of these shortcomings&lt;/li&gt;
&lt;li&gt;refusal to accept a reasonable, popular, and easy-to-implement request,
&lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=647828"&gt;an option to never turn off the screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codinguser.com/2012/07/i-miss-qt-or-what-cute-documentation-looks-like/"&gt;great praise for Qt and its docs&lt;/a&gt;; me was led to it when
researching a cross-platform (Linux and Windows) GUI toolkit&lt;/li&gt;
&lt;li&gt;I found using gaming to explain version control unbeatable; that is
the great appeal of &lt;a class="reference external" href="http://www-cs-students.stanford.edu/~blynn/gitmagic/"&gt;Git Magic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>what I do after Debian installation</title><link href="http://tshepang.net/what-i-do-after-debian-installation" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-11-10:what-i-do-after-debian-installation</id><summary type="html">&lt;p&gt;I think anyone who has never done any OS install before can install
Debian with any issue at all, provided they will not be doing any
partitioning. It is that easy.&lt;/p&gt;
&lt;p&gt;As for me, I do a lot more installations than the average person, so I
semi-automate the setup process with the help of this script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# some convenience&lt;/span&gt;
&lt;span class="nb"&gt;shopt&lt;/span&gt; -s expand_aliases
&lt;span class="nb"&gt;source&lt;/span&gt; ~/nna/conf/bash_aliases

&lt;span class="c"&gt;# config files&lt;/span&gt;
sudo cp ~/nna/conf/sources.list /etc/apt
sudo cp ~/nna/conf/sudoers /etc

&lt;span class="c"&gt;# APT&lt;/span&gt;
sudo apt-get update
sudo apt-get --allow-unauthenticated upgrade
sudo apt-get --allow-unauthenticated dist-upgrade
sudo apt-get --allow-unauthenticated install devscripts debhelper build-essential python3-apt gpm

&lt;span class="c"&gt;# wajig&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/src/wajig &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; iiwajig&lt;span class="o"&gt;)&lt;/span&gt;
ibase &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; inondebian &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; itracker &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; icpython &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ipurge

&lt;span class="c"&gt;# for Tracker&lt;/span&gt;
sudo sh -c &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;fs.inotify.max_user_watches=100000&amp;#39; &amp;gt;&amp;gt; /etc/sysctl.conf&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# so I can share via a webserver, or easily access from browser&lt;/span&gt;
sudo ln -s ~/.custom_repo /var/www/custom_repo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Contents of Debian repository list file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/apt/sources.list
deb file:/home/wena/.custom_repo tshepang main
deb http://debian.mirror.ac.za/debian wheezy main contrib non-free
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;tshepang&lt;/tt&gt; codename refers to my custom repository, the one
managed by &lt;a class="reference external" href="http://tshepang.net/project-of-note-reprepro"&gt;reprepro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Contents of &lt;strong&gt;sudo&lt;/strong&gt; setup file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cat /etc/sudoers
Defaults env_reset
Defaults mail_badpass
Defaults &lt;span class="nv"&gt;secure_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;quot;&lt;/span&gt;
root     &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt; ALL
%sudo    &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt; ALL
Defaults !tty_tickets
Defaults &lt;span class="nv"&gt;timestamp_timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The one change from default &lt;strong&gt;sudo&lt;/strong&gt; setup is so that each bash session
can inherit sudo powers from another. It's one case where I trade
&lt;a class="reference external" href="http://ask.debian.net/questions/how-to-have-sudo-powers-shared-between-different-bash-sessions"&gt;security&lt;/a&gt; for convenience. Another such case is increasing the
ask-for-password timeout to 100 minutes, instead of the default 15
minutes.&lt;/p&gt;
&lt;p&gt;And then these aliases, which point to scripts that install some
packages:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ibase&lt;/tt&gt;: basic stuff I got to have, stuff like the components I use
for my desktop apps, some CLI tools, and some documentation&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;inondebian&lt;/tt&gt;: packages that aren't part of Debian, e.g. stuff from
external repositories, or nonm-free stuff from Debian repos&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;itracker&lt;/tt&gt;: I always run the git version of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;, so these
tools help me build it&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ipurge&lt;/tt&gt;: stuff that was installed as Recommends dependencies of
the above (e.g. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-bluetooth&lt;/span&gt;&lt;/tt&gt;) or during Debian installation
(e.g. &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;), but that I won't use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The symbolic links is so that those I share a network with (LAN) can
have easy web browser access to some stuff on my machine.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>developer of note: Lennart Poettering</title><link href="http://tshepang.net/developer-of-note-lennart-poettering" rel="alternate"></link><updated>2013-10-16T09:14:54+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-10-27:developer-of-note-lennart-poettering</id><summary type="html">&lt;p&gt;Lennart is among the most visible/vocal developers in the GNOME
community, collecting admirers and detracters along the way since he
does not appear afraid of voicing controversial thoughts, or even
express arrogance.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mail.gnome.org/archives/desktop-devel-list/2007-October/msg00136.html"&gt;I first heard of him&lt;/a&gt; through a project that was to revolutionise Unix
audio, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/PulseAudio"&gt;PulseAudio&lt;/a&gt;. Using it was not really the best of experiences
(it consumed too much CPU time, which wasn't a good trade-off given I
didn't need any of its advanced features),
but it may well have just been the way Debian configured it at the time.&lt;/p&gt;
&lt;p&gt;Later on, he started work on an init system that was to replace
exisiting ones on Linux-based systems, known as &lt;a class="reference external" href="http://www.freedesktop.org/wiki/Software/systemd"&gt;systemd&lt;/a&gt;. This is
among the FLOSS projects that did genuinely excite me, and for years I
was waiting for it to be Debian default. Sadly, too many issues were
raised, including the refusal of Lennart to support non-Linux systems,
as well as having 'too many features',
way beyond being just a traditional init system, worrying many.&lt;/p&gt;
&lt;p&gt;Regardless of the controversy, the fact that Lennart was able to shake
up the FLOSS world with two major projects like this makes him among the
great developers on the planet. He also really puts a lot of effort
in his projects, portraying great talent while at it, as well managing to market
his projects very well, at least in my eyes.&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="GNOME"></category></entry><entry><title>links 2012-10-23</title><link href="http://tshepang.net/links-2012-10-23" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-10-23:links-2012-10-23</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I did not expect &lt;a class="reference external" href="http://stackoverflow.com/q/11942654/321731"&gt;this question of mine&lt;/a&gt; to be loved so much. In
fact, I thought it would see some resistance, due to so many
Python-related threading/multiprocessing questions on Stack Overflow,
such that it might be closed as a duplicate.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2012-08-08-libreoffice-3-6-0.html"&gt;This blog post&lt;/a&gt; makes me wanna contribute to LibreOffice, which is
made even more appealing by fact that I'm using the language a lot
&lt;a class="reference external" href="http://tshepang.net/me-got-meself-another-coding-job"&gt;at work&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It is a sad fact that for large Python codebases, the pain of porting
to Python 3 is quite high. Here's &lt;a class="reference external" href="http://vperic.blogspot.com/2012/08/bootstrapping-trial-in-python-3.html"&gt;an example for Twisted&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I am a fan of &lt;a class="reference external" href="http://docs.python.org/dev/library/argparse"&gt;argparse&lt;/a&gt;, but &lt;a class="reference external" href="https://github.com/docopt/docopt"&gt;this specific CLI parsing library&lt;/a&gt;
takes an interesting direction.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codinghorror.com/blog/2012/10/judging-websites.html"&gt;great web app design advice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>links 2012-09-28</title><link href="http://tshepang.net/links-2012-09-28" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-09-28:links-2012-09-28</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/a/2116517/321731"&gt;A look at the high fragmentation of programming languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://insanecoding.blogspot.com/2009/11/they-actually-want-bad-code.html"&gt;a sad case&lt;/a&gt; where management is warry of quality code&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5117/688"&gt;What happens after loading the Linux kernel image into RAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5117/688"&gt;Development process for putting hardware support in Linux-based
systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kryogenix.org/days/2012/03/04/my-new-phone-2012-edition"&gt;Why choose N9 (Meego) over anything Android and iPhone&lt;/a&gt; (&lt;a class="reference external" href="http://www.kryogenix.org/days/2012/08/03/me-and-the-nokia-n9"&gt;and why
not&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>developer of note: Michael Meeks</title><link href="http://tshepang.net/developer-of-note-michael-meeks" rel="alternate"></link><updated>2013-10-18T23:47:11+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-08-09:developer-of-note-michael-meeks</id><summary type="html">&lt;p&gt;Being the most visible LibreOffice (and formerly, OpenOffice.org)
developer for a few years now, he is also a tireless communicator and
organiser. The switch from OpenOffice.org to LibreOffice was not
exactly a smooth ride, but this guy kept showing a positive attitude
throughout. In &lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2012-08-08-libreoffice-3-6-0.html"&gt;the latest&lt;/a&gt; of his longer-form blog posts (he
normally writes tiny updates), he exposes the great progress that
LibreOffice has had. This is not the most glamorous of software
projects, but it certainly is among the most important in the world of
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/FLOSS"&gt;FLOSS&lt;/a&gt;, and it's kool to have people keeping it going.&lt;/p&gt;
</summary><category term="developer-of-note"></category></entry><entry><title>me got meself another coding job</title><link href="http://tshepang.net/me-got-meself-another-coding-job" rel="alternate"></link><updated>2013-10-18T23:46:56+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-08-02:me-got-meself-another-coding-job</id><summary type="html">&lt;p&gt;Some years ago, I was totally excited by having &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my first job working
on software&lt;/a&gt;. I am very grateful for the chance the owner, who
interviewed me for the position, took on me. I learned an incredible
amount of stuff.&lt;/p&gt;
&lt;p&gt;Some months ago, a friend enticed me to the idea of doing something
else, giving me contacts for &lt;a class="reference external" href="http://www.embedded-iq.com"&gt;some company&lt;/a&gt; building software and
electronics products for the mining industry. So I wasn't actually
looking for work, but I was glad of the opportunity since I was sort
of stagnating, and it really looked like this new company did some
pmore fun stuff, and I got the vibe that I'd really get challenged.&lt;/p&gt;
&lt;p&gt;It's been 3 months now, and my guess was right. I keep getting
surprised by the levels of smart I encounter regurlarly. These are the
sorts of people I simply can't match with my lesser brain, but am glad
to work with, since they teach me so much.&lt;/p&gt;
&lt;p&gt;The systems we build are embedded, so I spend most of my time working
with C and C++, and it tends to be a serious challenge, given that
there's a lot less hand-holding with those than with my favorite,
Python.&lt;/p&gt;
</summary><category term="luck"></category></entry><entry><title>matplotlib rocks</title><link href="http://tshepang.net/matplotlib-rocks" rel="alternate"></link><updated>2013-10-20T22:20:21+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-19:matplotlib-rocks</id><summary type="html">&lt;p&gt;Have a look at this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With &lt;a class="reference external" href="http://matplotlib.org"&gt;matplolib&lt;/a&gt; installed, running the code above should resulted in
the following image:&lt;/p&gt;
&lt;img alt="image resulting from running the code above" src="images/matplotlib-1.png" /&gt;
&lt;p&gt;You will notice that there's 2 graphs drawn over the same axis, nothing
special. What I really loved about matplotlib is that I did not need to
specify what colors to use for any of the graphs (&lt;a class="reference external" href="http://tshepang.net/plotting-with-matplotlib"&gt;as I did
previously&lt;/a&gt;). The colors were chosen automatically. It was helpful
especially in my case because I needed a way to specify an arbitrary
number of graphs. Without this magical feature, the code would be a lot
uglier.&lt;/p&gt;
&lt;p&gt;Here goes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;number_of_graphs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number_of_graphs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I provide 3 as command line argument, I get this:&lt;/p&gt;
&lt;img alt="image resulting from running the code above" src="images/matplotlib-2.png" /&gt;
&lt;p&gt;This feature left me pleasantly surprised.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>Debian 7 will release with wajig 2.7.3</title><link href="http://tshepang.net/debian-7-will-release-with-wajig-273" rel="alternate"></link><updated>2013-10-20T22:23:47+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-17:debian-7-will-release-with-wajig-273</id><summary type="html">&lt;p&gt;I once claimed that Debian 7 &amp;quot;wheezy&amp;quot; will release with version 2.7 of
wajig, but soon after, I experienced an exception that occurs if you run a
command like &lt;tt class="docutils literal"&gt;wajig new&lt;/tt&gt; if one of the newly-available packages was
available for the configured foreign architecture, but not for the
native one (&lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=679969"&gt;bug 679969&lt;/a&gt;). To fix that, I released 2.7.1, but I
submitted a dirty tarball for upload, so had to resubmit, ending up
releasing 2.7.2. Later on, someone noticed that &lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=681309"&gt;a certain subcommand
wasn't recognized&lt;/a&gt;, and I released 2.7.3 which fixes the issue.&lt;/p&gt;
</summary><category term="wajig"></category><category term="Debian"></category></entry><entry><title>Valve appears anarchistic</title><link href="http://tshepang.net/valve-appears-anarchistic" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-14:valve-appears-anarchistic</id><summary type="html">&lt;p&gt;While reading &lt;a class="reference external" href="http://www.gamasutra.com/view/feature/3408"&gt;how this legendary game creator is run&lt;/a&gt; (or at least
used to be), I was pretty much reminded that's kinda how an
anarchistic business would be run. I was pleasantly surprised to later
encounter a section named &lt;em&gt;The Workers Control the Means of
Production&lt;/em&gt; on the same article. Kool stuff. [&lt;a class="reference external" href="http://assets.sbnation.com/assets/1074301/Valve_Handbook_LowRes.pdf"&gt;via&lt;/a&gt;]&lt;/p&gt;
</summary><category term="anarchism"></category></entry><entry><title>Zero Punctuation rocks</title><link href="http://tshepang.net/zero-punctuation-rocks" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-10:zero-punctuation-rocks</id><summary type="html">&lt;p&gt;I recently discovered an incredibly entertaining and scathing game reviewer,
&lt;a class="reference external" href="http://www.escapistmagazine.com/videos/view/zero-punctuation"&gt;Zero Punctuation&lt;/a&gt;.
None of the reviews I've seen so far are any shallow,
and there's even solid social commentary.&lt;/p&gt;
</summary><category term="gaming"></category></entry><entry><title>links 2012-07-07</title><link href="http://tshepang.net/links-2012-07-07" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-07:links-2012-07-07</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.guardian.co.uk/society/2010/jul/25/female-circumcision-children-british-law"&gt;some women get their pussies mutilated for some shitty reasons!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://commonsenseatheism.com/?p=10389"&gt;Luke Muehlhauser on feminism&lt;/a&gt; - superb writing&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.infidels.org/library/modern/julian_baggini/review-martin.html"&gt;the futility of theist vs. atheist debate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I really enjoyed the humor in the humorous &lt;a class="reference external" href="http://www.youtube.com/watch?v=gAYL5H46QnQ"&gt;Threw It On the Ground&lt;/a&gt;
music video; even the music is nice&lt;/li&gt;
&lt;li&gt;me not sure I would qualify for a job at Netflix, due its &lt;a class="reference external" href="http://www.slideshare.net/reed2001/culture-1798664"&gt;highly
demanding culture&lt;/a&gt; would be extra kool if more large companies
adopted something similar&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="atheism"></category><category term="links"></category></entry><entry><title>wajig 2.6 and 2.7</title><link href="http://tshepang.net/wajig-26-and-27" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-02:wajig-26-and-27</id><summary type="html">&lt;p&gt;Version 2.6 of wajig has changes so small that I did not bother writing
about its release, but was nevertheless very important because the
bash-completion now works a lot better than before,
thanks to &lt;a class="reference external" href="http://rrt.sc3d.org/"&gt;Reuben Thomas&lt;/a&gt;.
I also stopped wajig from accepting UPPERCASE subcommands,
since a few people on the mailing list expressed dislike,
and that includes project founder.&lt;/p&gt;
&lt;p&gt;Version 2.7, the version that will be in the next stable release of
Debian [&lt;a class="reference external" href="http://tshepang.net/debian-7-will-release-with-wajig-273"&gt;update&lt;/a&gt;], Wheezy (Debian 7), fixes two bugs, one of which I
sort of intentionally broke in order to fix some issues with the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--simulate&lt;/span&gt;&lt;/tt&gt; and/or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--teaching&lt;/span&gt;&lt;/tt&gt; options.
Someone &lt;a class="reference external" href="http://bugs.debian.org/670687"&gt;did complain about this&lt;/a&gt; which was good since it's a good
indicator that someone actually cared about the feature.
That motivated me to fix it,
and I ensured that the fix was in before Debian 7 freeze.&lt;/p&gt;
&lt;p&gt;This work is my greatest contribution for this upcoming Debian
release.&lt;/p&gt;
</summary><category term="wajig"></category><category term="Debian"></category></entry><entry><title>sorting dictionary items by value</title><link href="http://tshepang.net/sorting-dictionary-items-by-value" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-26:sorting-dictionary-items-by-value</id><summary type="html">&lt;p&gt;Following should be self-explanatory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second-last command sorts by keys, but that's easy. Sorting by
value, as shown by the last command above, is what trips many novices,
and I had to spend too much time on the web finding how to do it, and I
still don't really understand how it works, except that it works :)&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>one of the harsh realities of working on a big FLOSS project</title><link href="http://tshepang.net/one-of-the-harsh-realities-of-working-on-a-big-floss-project" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-19:one-of-the-harsh-realities-of-working-on-a-big-floss-project</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I wasted my own time trying to be nice. One thing that you can get
from Greg's report is that kernel developers have very limited time.
Time is our most precious resource. If being polite wastes time, and
a quick jab is more effective, then those quick jabs become the
efficient process.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lwn.net/Articles/501855/"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="quote"></category></entry><entry><title>when a FLOSS project gets real big</title><link href="http://tshepang.net/when-a-floss-project-gets-real-big" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-19:when-a-floss-project-gets-real-big</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Developers typically send their changes to the maintainer of the
file that is being changed. Those maintainers, who number around
700, feed those changes up to the 130 subsystem maintainers. From
there, the patches make their way into linux-next, then to Linus
Torvalds, and, eventually the mainline—if they get accepted at each
step along the way.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lwn.net/Articles/499952/"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="quote"></category></entry><entry><title>on taste and morality</title><link href="http://tshepang.net/on-taste-and-morality" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-16:on-taste-and-morality</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I have an aversion to eating liver. I do not like the smell, or the
taste, of eating liver. However, in spite of my personal aversion,
it would be wrong for me to use this to justify prohibiting others
from eating liver. Because I do not like it, I do not eat it. I
could say that I do not like to eat liver because it is
intrinsically bad, and because it is intrinsically bad anybody who
likes the taste of liver must be defective. I could try to make that
argument, but there would be no merit to it. I would be wrong. In my
error, I would be interfering with the liberty of others for no good
reason.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://atheistethicist.blogspot.com/2005/11/homosexuality.html"&gt;Homosexuality&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="ethics"></category><category term="quote"></category></entry><entry><title>'Advice to Aspiring Nanotechnologists' by Eric Drexler</title><link href="http://tshepang.net/advice-to-aspiring-nanotechnologists-by-eric-drexler" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-10:advice-to-aspiring-nanotechnologists-by-eric-drexler</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
Software systems will be vital to nanotechnology and to enabling
technologies along the way. A basic introduction to computers and
software will be of value to anyone in any area of science or
technology. Those interested in software related to nanotechnology
should pay special attention to numerical simulation methods for
molecular mechanical and quantum electronic systems, and to the
design of programs for highly parallel computer systems, since this
is the direction hardware will be moving in the coming years.
Parallel systems will help designers develop nanotechnology, and
nanocomputers will later be used to build massively parallel
(trillion processor and up) computer systems. Finally, if powerful
systems are to be useful in molecular design, they will need to be
accessible through fast, clean, intuitive interfaces that let
designers see and manipulate model molecules.&lt;/blockquote&gt;
&lt;p&gt;The great Eric Drexler offers &lt;a class="reference external" href="http://www.kurzweilai.net/engines-of-creation-20-advice-to-aspiring-nanotechnologists"&gt;extensive guidance&lt;/a&gt; for those
considering studying towards molecular nanotech, and that quote is most
relevant to me, since I'm doing software and all.&lt;/p&gt;
&lt;p&gt;The end-notes, where he encourages supreme rigour and discipline, would
scare most away. This appears to be a demanding career.&lt;/p&gt;
</summary><category term="future-tech"></category></entry><entry><title>developer of note: Victor Stinner</title><link href="http://tshepang.net/developer-of-note-victor-stinner" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-09:developer-of-note-victor-stinner</id><summary type="html">&lt;p&gt;Depending on the impact of the change, contributing to open source
software can be intensely challenging. Referring specifically to
CPython, the reference implementation of my favorite programming
language, you can have literally hundreds of messages on the mailing
lists, and at times, many more in the issue tracking system, all
discussing the change in mind. Such changes are most often accompanied
with a &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0001/"&gt;PEP&lt;/a&gt; (Python Enhancement Proposal), a formalised document which
is basically a design spec for the change in mind. It also, helpfully,
summarises the arguments against the change, and addresses them while at
it, which can be of help to those not inclined to consume the
oft-lengthy discussions.&lt;/p&gt;
&lt;p&gt;Given all that, it can be quite challenging for any one individual to
champion such important changes, and an example of one such heroic
individual is &lt;a class="reference external" href="http://www.haypocalc.com/wiki/Accueil"&gt;Victor Stinner&lt;/a&gt;, a core CPython developer. He is the
most visible of the guys who helped ensure acceptance of &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0418/"&gt;PEP 418&lt;/a&gt;,
which proposes some time-related additions and improvements to the
standard library's &lt;a class="reference external" href="http://doc.python.org/library/time"&gt;time module&lt;/a&gt;. There are many such additions, many a
lot more important than this specific one, but what's most unique about
this one is the sheer amount of discussion that went around this
particular PEP. The mailing list discussions were practically endless,
and so were the updates to the PEP, not to mention the amount of
research involved, which was needed in order to have CPython expose the
new functionality in a cross-platform manner. Now, that's some serious
perseverance.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Looking at his commits, the guy has done a heck of a lot of work in
cleaning up, refactoring, and optimizing the string-handling code. I
can't imagine that this stuff is easy, especially since a large portion
of it is in C, that scary, no-hand-holding language.&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="Python"></category></entry><entry><title>links 2012-05-17</title><link href="http://tshepang.net/links-2012-05-17" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-17:links-2012-05-17</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://go.linuxfoundation.org/who-writes-linux-2012"&gt;The rate of Linux kernel development is seriously impressive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.gnome.org/archives/gtk-devel-list/2007-November/msg00032.html"&gt;Why bundle stuff in one library instead of a few&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-devel/2011/04/msg00711.html"&gt;From humble beginnings to extreme success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Joel Spolsky is a wonderful writer, and has great humor. Check &lt;a class="reference external" href="http://hginit.com/04.html"&gt;his
impressive effort&lt;/a&gt; at making an oft-boring task of reading a
tutorial fun. Check especially his reference to one obscure tv
actor.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="humor"></category></entry><entry><title>me loves new Git site design</title><link href="http://tshepang.net/me-loves-new-git-site-design" rel="alternate"></link><updated>2013-10-16T20:33:01+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-16:me-loves-new-git-site-design</id><summary type="html">&lt;p&gt;I really like the &lt;a class="reference external" href="http://git-scm.com/"&gt;new website design&lt;/a&gt; of the Git project (&lt;a class="reference external" href="https://github.com/blog/1125-new-git-homepage"&gt;story&lt;/a&gt;).
It even gained a nice and fresh icon, replacing the old which looked
like it was created in 1995. Note that &lt;a class="reference external" href="http://web.archive.org/web/20110716073224/http://git-scm.com/"&gt;the old site&lt;/a&gt; wasn't crap
either, and was already pretty much modern, following the 'simple and
bold' design trend I've witnessed in recent years. I'm jealous it's
better than that of &lt;a class="reference external" href="http://mercurial.selenic.com/"&gt;Mercurial&lt;/a&gt;, my favorite VCS.&lt;/p&gt;
</summary><category term="VCS"></category></entry><entry><title>developer of note: Martin Pitt</title><link href="http://tshepang.net/developer-of-note-martin-pitt" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-15:developer-of-note-martin-pitt</id><summary type="html">&lt;p&gt;I suspect that &lt;a class="reference external" href="http://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; isn't a trivial piece of software, and I
consider it among the greatest of all FLOSS. It even bills itself the
most advanced of all FLOSS databases. That's what brought &lt;a class="reference external" href="http://www.piware.de/"&gt;Martin Pitt&lt;/a&gt;
to my attention, for he is it's Debian (and now also Ubuntu) maintainer.
One other notable thing about him is his quiet persona (I follow Debian
development fairly closely, and I don't remember seeing him take part in
any of the arguments in its mailing lists). I only ever notice him when
he'd give &lt;a class="reference external" href="http://www.piware.de/2011/09/dropping-postgresql-9-0-packages-for-debianubuntubackports/"&gt;some random&lt;/a&gt; &lt;a class="reference external" href="http://www.piware.de/2012/05/packages-for-postgresql-9-2-beta-1-now-available/"&gt;status update&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category><category term="non-Debian"></category></entry><entry><title>project of note: reprepro</title><link href="http://tshepang.net/project-of-note-reprepro" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-11:project-of-note-reprepro</id><summary type="html">&lt;p&gt;I have given kudos to &lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/reprepro-saved-my-live"&gt;twice&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/what-i-do-after-debian-installation"&gt;before&lt;/a&gt;, and though those 2
posts are actually outdated, I still keep a custom repository, a subset
of the official repository of a specific arch, but only of packages that
I ever install.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Every once in a while, I run this command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang \
/var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;What it does is add packages that are stored by the Debian package
management system (located in &lt;tt class="docutils literal"&gt;/var/cache/apt/archives&lt;/tt&gt;) to the
custom repository (located in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.custom_repo&lt;/span&gt;&lt;/tt&gt;). That ensures that I
only keep packages that matter to me for any later install.&lt;/p&gt;
&lt;p&gt;Note that &lt;tt class="docutils literal"&gt;tshepang&lt;/tt&gt; is the name of the repository. It's an unofficial
equivalent of &lt;tt class="docutils literal"&gt;testing&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;unstable&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Another command that I sometimes run, though less frequently, is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang \
/var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;This one is used to help keep the repository fresh. Check out &lt;a class="reference external" href="http://tshepang.net/removing-obsolete-packages-from-a-local-debian-repository"&gt;this
post&lt;/a&gt; for an explanation.&lt;/p&gt;
&lt;p&gt;Even less frequently, it happens that some package files are no longer
referenced (i.e. not found in &lt;tt class="docutils literal"&gt;Package.gz&lt;/tt&gt;) for some reason. Here's
handy command to display them:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro --basedir ~/.custom_repo dumpunreferenced
&lt;/pre&gt;
&lt;p&gt;And here's another that actually gets rid of them:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro --basedir ~/.custom_repo deleteunreferenced
&lt;/pre&gt;
</summary><category term="Debian"></category><category term="project-of-note"></category></entry><entry><title>Dry And Heavy (1977)</title><link href="http://tshepang.net/dry-and-heavy-1977" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-09:dry-and-heavy-1977</id><summary type="html">&lt;p&gt;A very laid-back Burning Spear album, with a mere 9 short tracks, the
best of which is a re-imagining of one of my eternal favorite tracks of
all time, &lt;em&gt;Creation&lt;/em&gt; (live versions). It's named &lt;em&gt;It's A Long Way
Around&lt;/em&gt;, and I could not stop myself from repeating it.&lt;/p&gt;
&lt;p&gt;Each of the other tracks is quite good, though not catchy at all.&lt;/p&gt;
</summary><category term="music"></category><category term="excellent"></category></entry><entry><title>my Argparse tutorial now part of official Python documentation</title><link href="http://tshepang.net/my-argparse-tutorial-now-part-of-official-python-documentation" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-07:my-argparse-tutorial-now-part-of-official-python-documentation</id><summary type="html">&lt;p&gt;I am very glad that &lt;a class="reference external" href="http://docs.python.org/howto/argparse"&gt;a tutorial&lt;/a&gt; I started writing over 2 months ago
has finally been added to &lt;a class="reference external" href="http://docs.python.org/howto"&gt;the howto section&lt;/a&gt; of CPython documentation.
It took a lot of iteration (over 7) in total before finally being
accepted. But even then, it's still not fully satisfactory for me, and I
really hope that someone else with fresh eyes is going to go through all
of it and offer improvements. Even better, I hope people will find it
useful. I know I would have when I started doing argument parsing. I
found &lt;a class="reference external" href="http://docs.python.org/library/argparse"&gt;the main module documention&lt;/a&gt; overwhelming, and &lt;a class="reference external" href="http://docs.python.org/library/argparse#example"&gt;the very first
example&lt;/a&gt; is in fact why I even started writing this tutorial at all, as
is evident on &lt;a class="reference external" href="http://bugs.python.org/issue14034"&gt;the relevant issue&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>accessibility on Debian</title><link href="http://tshepang.net/accessibility-on-debian" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-19:accessibility-on-debian</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Assistive_technology#Software"&gt;Accessibility&lt;/a&gt; is one of those things we the privileged (those with
workable eyesight and hearing) tend to forget about; That's why
developers like Debian's Samuel Thibault deserve great respect. The guy
was brought to my attention by the great Raphael Hertzog through &lt;a class="reference external" href="http://raphaelhertzog.com/2012/04/19/people-behind-debian-samuel-thibault-working-on-accessibility-and-the-hurd/"&gt;one of
his all-important People Behind Debian series of interviews&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is one of those things that make me wish I was rich... pay a bunch
of people interested in this kind of work to do it full-time.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>developer of note: Stefano Zacchiroli</title><link href="http://tshepang.net/developer-of-note-stefano-zacchiroli" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-15:developer-of-note-stefano-zacchiroli</id><summary type="html">&lt;p&gt;I admire &lt;a class="reference external" href="http://upsilon.cc/~zack"&gt;this guy&lt;/a&gt; a lot:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;his great passion for Debian (he speaks on behalf of it on a variety
of events)&lt;/li&gt;
&lt;li&gt;mature and thoughtfulness in a variety of debates regarding this or
that decision within Debian&lt;/li&gt;
&lt;li&gt;his ongoing push for collaboration between Debian and other distros&lt;/li&gt;
&lt;li&gt;his positive outlook for Debian, at a time when many are worried
about its loss of relevance&lt;/li&gt;
&lt;li&gt;his passion for software freedom (we need people like this in an age
where people tend to trade freedom for pragmatism)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To prove I'm not the only one, there a bunch more guys who were happy
enough with his 2010 term as Debian Project Leader (DPL), that they
re-elected him again. What's more interesting is that no one else stood
for election. He also won the term &lt;a class="reference external" href="https://lists.debian.org/debian-announce/2012/msg00008.html"&gt;the third time&lt;/a&gt;, so will reign over
Debian in 2012.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>links 2012-04-12</title><link href="http://tshepang.net/links-2012-04-12" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-12:links-2012-04-12</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.billthelizard.com/2008/12/books-programmers-dont-really-read.html"&gt;Books Programmers Don't Really Read&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.b-list.org/weblog/2006/oct/28/python-tips-dont-be-too-concise/"&gt;avoid being too concise&lt;/a&gt; – a Python example&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://inventwithpython.com/blog/2010/09/27/i-want-to-teach-my-kid-how-to-program/"&gt;excellent review of a book that uses Python to teach kids
programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.blog.aknin.name/2010/05/29/mailing-list-debates-considered-harmful/"&gt;mailing lists are less than ideal for debate/extended discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category><category term="links"></category></entry><entry><title>wajig 2.5 released</title><link href="http://tshepang.net/wajig-25-released" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-11:wajig-25-released</id><summary type="html">&lt;p&gt;The release of &lt;a class="reference external" href="http://tshepang.net/wajig-23-released"&gt;wajig 2.3&lt;/a&gt;, though important to me, caused varius
complaints because it changed much of the UI. 2.5 goes a long way
towards fixing those. What particularly helped guide this release is my
creating a &lt;a class="reference external" href="http://groups.google.com/group/wajig"&gt;mailing list&lt;/a&gt;, just so that I can ask users for opinions on
whether or not to do this or that change. There was much feedback and
complaints of course, sometimes to a point where I felt like I'm just
messing up, as in not helping make the world a better place. Luckily
there were also words of appreciation of my efforts in maintaining it.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20120411T124858Z.html"&gt;the gory details&lt;/a&gt;.&lt;/p&gt;
</summary><category term="wajig"></category></entry><entry><title>David Beazley's PyCon US 2012 Keynote</title><link href="http://tshepang.net/david-beazleys-pycon-us-2012-keynote" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-09:david-beazleys-pycon-us-2012-keynote</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://pyvideo.org/video/659/keynote-david-beazley"&gt;David Beazley's PyCon 2012 key note talk&lt;/a&gt; is among the best I've seen
in the field of software development. It's not even the content (the
complexity and hackability of PyPy), but rather the presentation itself.
The guy must have put a lot of effort in his slides, and what's better
is that he was also doing live demonstrations. From those, you could
gather that this isn't a mere mortal. He's brilliant (and humorous). And
I've never even heard of him before, but he appears to be some sort of
legend in the Python community.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>links 2012-04-09</title><link href="http://tshepang.net/links-2012-04-09" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-09:links-2012-04-09</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://paulgraham.com/hs.html"&gt;What You'll Wish You'd Known&lt;/a&gt; is one the best essays I've read yet;
it basically is advice for people still in high school. Beware though
that the writer, Paul Graham, is very bold person. He makes a lot of
assertions, without much in the way of backing it all up. Sure he's
well-read and experienced, but it appears he relies a lot on his
intuitions. Inaccurate as it may be, this essay has a lot of insight
and is very encouraging (e.g. don't underestimate your abilities).&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.mothercityliving.co.za/do-you-have-talents/#comment-21944"&gt;a nice objection&lt;/a&gt; to &lt;a class="reference external" href="http://www.mothercityliving.co.za/do-you-have-talents/#comment-21943"&gt;loud noise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://gizmodo.com/5691604/how-ma-bell-shelved-the-future-for-60-years"&gt;the (un)greatness of Bell Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codinghorror.com/blog/2011/10/on-parenthood.html"&gt;On Parenthood&lt;/a&gt; - incredible write-up on the joys of having a
child... this isn't material I normally read, but I felt compelled
considering my admiration for the writer, a famous software
developer; it almost makes me look forward to my first&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://reason.com/archives/2004/12/22/is-heaven-populated-chiefly-by"&gt;an impressive criticism of anti-abortionists&lt;/a&gt; (&lt;a class="reference external" href="http://commonsenseatheism.com/?p=8955#comment-43867"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>links 2012-04-08</title><link href="http://tshepang.net/links-2012-04-08" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-08:links-2012-04-08</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.alistapart.com/articles/neveruseawarning"&gt;a great post&lt;/a&gt; about the advantages of undo over warning dialogs&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.stackoverflow.com/2011/01/state-of-the-stack-2010-a-message-from-your-ceo/"&gt;the great success of Stack Overflow, and the associated Stack
Exchange network&lt;/a&gt; – lots of light humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.comp.leeds.ac.uk/nde/papers/teachpy3.html"&gt;why Python 3 is more suitable for teaching programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/past.html"&gt;history of HTML&lt;/a&gt; – the research and presentation is impressive&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.alistapart.com/articles/neveruseawarning"&gt;a look&lt;/a&gt; at the high fragmentation of programming languages&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="Python"></category></entry><entry><title>'Finding Great Developers' by Joel Spolsky</title><link href="http://tshepang.net/finding-great-developers-by-joel-spolsky" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-03:finding-great-developers-by-joel-spolsky</id><summary type="html">&lt;p&gt;Reading &lt;a class="reference external" href="http://www.joelonsoftware.com/articles/FindingGreatDevelopers.html"&gt;the article&lt;/a&gt; today reinforced my view that Joel Spolsky is
among the best bloggers on the topic of software development. Here he
discusses a few strategies on finding excellent developers, and my
favorite moment is when he mentions how hard he spoils interns in NYC:&lt;/p&gt;
&lt;blockquote&gt;
They're met at the airport here by a uniformed limo driver who grabs
their luggage and whisks them away to their hotel, probably the
coolest hotel they've ever seen in their life, right in the middle
of the fashion district with models walking in and out at all hours
and complicated bathroom fixtures that are probably a part of the
permanent collection of the Museum of Modern Art...&lt;/blockquote&gt;
&lt;p&gt;The article is of course a lot deeper than that, and goes to show the
deep passion this guy has for excellence in the field.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>trying out Calepin</title><link href="http://tshepang.net/trying-out-calepin" rel="alternate"></link><updated>2013-10-03T08:20:36+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-02:trying-out-calepin</id><summary type="html">&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;: The lack of reliability, worst of which was constant
unavailability of my blog, led me to move on. This time it's &lt;a class="reference external" href="http://pelican.notmyidea.org"&gt;Pelican&lt;/a&gt;,
hosted by &lt;a class="reference external" href="http://pages.github.com"&gt;GitHub Pages&lt;/a&gt;. &lt;a class="reference external" href="http://tshepang.net/blogging-with-pelican"&gt;Here's the setup&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I've been meaning to move my blog(s) away from Posterous, due to its UI
problems and ridiculously-slow page loads. I finally did it with the
help of &lt;a class="reference external" href="http://calepin.co/"&gt;Calepin&lt;/a&gt;, which itself has a bunch of problems. These are
forgivable since it's a Beta product:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The presentation is way too simple/plain, and doesn't provide a way
to customise it.&lt;/li&gt;
&lt;li&gt;I spent hours struggling with Dropbox login integration, where I
often had to go to Chrome's Incognito mode, and at some point, had to
delete my Dropbox account as well, just to get it to work.&lt;/li&gt;
&lt;li&gt;It seems crazy that each time I want to publish I have to visit the
web page to hit Publish, when Calepin should simply monitor the
Dropbox account.&lt;/li&gt;
&lt;li&gt;The blog is unreachable whenever I publish. This isn't such a big
deal of course, but c'mon.&lt;/li&gt;
&lt;li&gt;When hitting Publish, it takes way too long (several seconds) before
the page is rendered on the blog.&lt;/li&gt;
&lt;li&gt;...and am sure there will be more as time goes (proven by the fact
that this list kept growing as I typed this post)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Despite all these problems, it will have to do for now, until I find
another host, and maybe this time I will have to spend some cash.&lt;/p&gt;
&lt;p&gt;In the interest of balance, here's &lt;a class="reference external" href="http://tshepang.net/what-me-loves-about-static-website-generation"&gt;what attracted me&lt;/a&gt;.&lt;/p&gt;
</summary><category term="blogging"></category></entry><entry><title>wajig 2.4 released</title><link href="http://tshepang.net/wajig-24-released" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-03-29:wajig-24-released</id><summary type="html">&lt;p&gt;Less than a week after releasing 2.3, someone discovered a bug when
running the NEW subcommand. All wajig did was fall flat with an ugly
exception, making this some sort of emergency release. Anyways, I
already had some nice improvements, so I released those as well:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The INSTALL subcommand can now be given a mixture of filenames, .deb
files, and normal package names, and will be able to install the
packages specified. Previously, only one of these 3 types could be
installed at a time.&lt;/li&gt;
&lt;li&gt;Apparently the reasons I gave for removing the —simulate and
—teaching (now renamed to —teach) options in 2.3 weren't good enough,
so I reinstated them.&lt;/li&gt;
&lt;li&gt;The bash completer now completes both lower-case and upper-case
subcommands, thanks to &lt;a class="reference external" href="http://rrt.sc3d.org/"&gt;Reuben Thomas&lt;/a&gt;, an avid wajig user.&lt;/li&gt;
&lt;li&gt;There's a few other changes, so &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20120327T130420Z.html"&gt;here's the gory details&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="wajig"></category></entry><entry><title>links 2012-03-27</title><link href="http://tshepang.net/links-2012-03-27" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-03-27:links-2012-03-27</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;A highly detailed demonstration of &lt;a class="reference external" href="http://stackoverflow.com/q/1711631/321731"&gt;SQLite performance&lt;/a&gt;, which also
goes through various ways of tuning it.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://prog21.dadgum.com/80.html"&gt;Advice to Aimless, Excited Programmers&lt;/a&gt;; this sort of advice is not
nothing new but the writer is so good and the site design so clean
that it oughta be kinda canonical.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://inventwithpython.com/blog/2012/03/03/nobody-wants-to-learn-how-to-program/"&gt;Nobody Wants to Learn How to Program&lt;/a&gt;; interesting advice on
teaching programming.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://eli.thegreenplace.net/2012/03/15/processing-xml-in-python-with-elementtree/"&gt;a gentle tutorial&lt;/a&gt; on Python's &lt;tt class="docutils literal"&gt;xml.etree.ElementTree&lt;/tt&gt; module&lt;/li&gt;
&lt;li&gt;It's very interesting to see &lt;a class="reference external" href="http://blogs.gnome.org/xan/2012/03/26/web-its-whats-for-dinner/"&gt;a browser with relatively little use&lt;/a&gt;
continue getting developed, while monsters like Firefox,
Chrome/Chromium, and Safari have (almost) taken over the world.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="GNOME"></category><category term="links"></category><category term="Python"></category></entry><entry><title>wajig 2.3 released</title><link href="http://tshepang.net/wajig-23-released" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-03-25:wajig-23-released</id><summary type="html">&lt;p&gt;It's been many months since wajig was released, but this was about as
good as any since I probably did far more work on it than on any other
release so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The most user-visible change is that I changed the UI to feel more
standard/natural, where each of the wajig COMMANDS are 1st-class
citizens. Let me give an example of user wanting to install a package
named nautilus, but avoid installing its Recommends depencencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ole&lt;/span&gt;
wajig —norecommends INSTALL nautilus
&lt;span class="c"&gt;# new&lt;/span&gt;
wajig INSTALL —norecommends nautilus
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I call this natural because it makes more sense to have the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--norecommends&lt;/span&gt;&lt;/tt&gt; command line option to be specified &lt;em&gt;after&lt;/em&gt; the
(wajig) subcommand it modifies. Also, the way it was implemented
previously, the option would silently be ignored if it was used in a
case where it was irrelevant. That's not good, and it links to the
next user-visible change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There is less magic and more strictness. Previously, these commands
resulted in the same outcome:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wajig REMOVEORPHANS
wajig REMOVE-ORPHANS
wajig R-____EMOVE-ORPH----___AN_S
&lt;/pre&gt;
&lt;p&gt;What wajig did was simply sanitise the commands, getting rid of the
junk. Well, I don't like that, but since I didn't want to break
people's commands/aliases/scripts I actually tried to preserve that
functionality, but argparse didn't let me do that, and messing around
with &lt;tt class="docutils literal"&gt;sys.argv&lt;/tt&gt; before argparse jumped in was an error-prone mess,
which links us to the next change, this time behind-the-scenes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I replaced the archaic &lt;tt class="docutils literal"&gt;getopt&lt;/tt&gt; CLI parser with a far more powerful
&lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt;. This change alone, when I truly embraced it, using its
subcommand methods (see point 1 above), resulting in a ridiculous
work that involved mainly unfun work and resulted in changing (adding
and removing) thousands of lines code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The output of command &lt;tt class="docutils literal"&gt;wajig COMMANDS&lt;/tt&gt; is now generated
dynamically, instead of simply being read from a separate file.
Advantage is that it should now remain more up-to-date.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The usage info for each COMMAND was store on its own file, and the
aliases were symblic links to them. Now that's ugly, but I did it
that was some time ago because I could not think of a better, quick
way. The ugly solution is simple, but it added over a 100 files in
user machines, which is just bad design. Well, modern Linux-based
package management makes such invisible to all but the most
avid/curious users, but I never liked it anyways. Now, all of that
help info is auto-generated by &lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt; (you can imagine I'm a
big fan of that module by now).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There's bunch of other changes, though most was code stuff. As for
the user-visible stuff, a few COMMANDS were removed, a few options
added/removed. &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20120322T223441Z.html"&gt;Here's 'all' the gory details&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="Python"></category><category term="wajig"></category></entry><entry><title>removing obsolete packages from a local Debian repository</title><link href="http://tshepang.net/removing-obsolete-packages-from-a-local-debian-repository" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-21:removing-obsolete-packages-from-a-local-debian-repository</id><summary type="html">&lt;div class="section" id="background-info"&gt;
&lt;h2&gt;background info&lt;/h2&gt;
&lt;p&gt;Bandwidth in South Africa is neither readily-available nor cheap, so
whenever I fetch and install Debian packages (e.g. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; upgrade&lt;/tt&gt;),
I also keep them in a local custom repository. I use a great tool named
&lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; for this, and this is the command I use to update that
repository, given the location of the fresh package files:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang /var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;What's nice about the command is that, if there is an older version of
the pacakge I'm adding, it gets replaced, and the package index is
update accordingly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="and-now-to-the-topic-at-hand"&gt;
&lt;h2&gt;and now to the topic at hand&lt;/h2&gt;
&lt;p&gt;I run that command more or less regularly, but very often the repository
accumulates some junk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If a package gets renamed, reprepro has no way of knowing (at least
as far as my setup goes). One notable case of this is Debian kernels,
whose names match the major release versions (e.g.
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;linux-image-3.1.0-1-686-pae&lt;/span&gt;&lt;/tt&gt; becomes
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;linux-image-3.2.0-1-686-pae&lt;/span&gt;&lt;/tt&gt; when a new upstream release gets
packaged). Lots other packages change names, and very often, for a
variety of reasons (Debian is a little chaotic, often out of
necessity, and it's amazing that its developers keep it so damn
stable given all this change).&lt;/li&gt;
&lt;li&gt;If I add a package from an external repository or that I converted
from an rpm, reprepro has no way of knowing that fact. Now if I stop
using that package, it is just a waste of resources (CPU and disk
usage).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To help with the cleanup, I have written the following simple script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;apt_pkg&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="n"&gt;CUSTOM_REPO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/home/wena/.custom_repo/dists/tshepang/main/&amp;quot;&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;binary-i386/Packages.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WHEEZY_REPO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/var/lib/apt/lists/ftp.de.debian.org_debian_dists_testing_{}_&amp;quot;&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;binary-i386_Packages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;custom_repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CUSTOM_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;archive_areas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;main contrib non-free&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;wheezy_packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;archive_area&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;archive_areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WHEEZY_REPO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;archive_area&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;wheezy_packages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;custom_repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;package_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;package_name&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;wheezy_packages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apt-cache policy &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;package_name&lt;/span&gt;
            &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;remove from cache [Y/n]? &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;reprepro -vv --basedir /home/wena/.custom_repo/ &amp;quot;&lt;/span&gt;
                       &lt;span class="s"&gt;&amp;quot;remove tshepang &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's a snippet of its output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cx-oracle:
  Installed: 5.1.1-2
  Candidate: 5.1.1-2
  Version table:
 *** 5.1.1-2 0
        500 file:/home/wena/.custom_repo/ tshepang/main i386 Packages
        100 /var/lib/dpkg/status
remove from cache [Y/n]?
&lt;/pre&gt;
&lt;p&gt;What it does is look for packages which are only available in my custom
reposity, as compared with the one in Wheezy (soon to be Debian 7). It
then prompts me on whether or not to remove it from that custom
repository. Today, it helped me get rid of dozens of junk.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Debian"></category></entry><entry><title>links 2012-02-15</title><link href="http://tshepang.net/links-2012-02-15" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-15:links-2012-02-15</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sqlite.org/testing.html"&gt;The amount of testing&lt;/a&gt; SQLite goes through before each release is
impressive.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/013835.html"&gt;A stern slap on the wrist&lt;/a&gt; of noisy people; it's a well-informed
rebuttal against the famous &amp;quot;the CPython GIL sucketh&amp;quot; complaint.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sarge.readthedocs.org/en/latest/index.html"&gt;This subprocess wrapper&lt;/a&gt; looks immensely powerful; I haven't
needed its extra features yet, but I love the elegance and seeming
ease-of-use.&lt;/li&gt;
&lt;li&gt;A superb, highly-detailed &lt;a class="reference external" href="http://codereview.stackexchange.com/a/9003/"&gt;code review&lt;/a&gt; by &lt;a class="reference external" href="http://codereview.stackexchange.com/users/1659/winston-ewert"&gt;Winston Ewert&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://codereview.stackexchange.com/users/1659/winston-ewert"&gt;This guy&lt;/a&gt; (same one mentioned above) exposed &lt;a class="reference external" href="http://codereview.stackexchange.com/a/9009/1346"&gt;my sloppiness&lt;/a&gt; as
a programmer; I was nearly embarassed.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="Python"></category></entry><entry><title>on voting</title><link href="http://tshepang.net/on-voting" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-13:on-voting</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Voting&amp;quot; reminds me too much of situations where people who don't do
anything get to say what they want others to do.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://mail.python.org/pipermail/python-dev/2011-March/108902.html"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Guido_van_Rossum"&gt;Guido van Rossum&lt;/a&gt; on a proposed Python project roadmap.&lt;/p&gt;
</summary><category term="humor"></category><category term="quote"></category></entry><entry><title>attachment can lead to irrational behaviour</title><link href="http://tshepang.net/attachment-can-lead-to-irrational-behaviour" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-01:attachment-can-lead-to-irrational-behaviour</id><summary type="html">&lt;p&gt;In &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my previous job&lt;/a&gt;, we used to use some Java framework, &lt;a class="reference external" href="http://www.mulesoft.org/"&gt;Mule ESB&lt;/a&gt;,
for our clients. The project is distributed with a lot of jar files,
supposedly for the convenience of users. When we work on a project, we
just add all those jars to the classpath (we use Eclipse, an excessively
powerful and ugly IDE). Now, me being a sucker for the Debian way of
doing things, I'd install packages providing all those jars from a
Debian repository, then remove those Mule-distributed files, then add
symlinks in place of them pointing back to the actualy files. Imagine
how much time it took! Either that, or even easier (but still
time-consuming), skip the symlink thing entirely and just add those jars
(found in &lt;strong&gt;/usr/share/java&lt;/strong&gt; directory) directly.&lt;/p&gt;
&lt;p&gt;Beyond just wasting time, the are other potential problems with my
approach:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Debian's jar versions did tend to be different to Mule-supplied
versions. You can imagine what problems this can cause, especially
because the versions included there are most likely the ones used for
testing Mule.&lt;/li&gt;
&lt;li&gt;Even if the versions were the same, what if there are slight changes
from Debian's side. Debian's strict &lt;a class="reference external" href="http://www.debian.org/social_contract#guidelines"&gt;software guidelines&lt;/a&gt; implies
that they'll strip out some stuff that doesn't adhere. The good thing
is that Debian appends &lt;tt class="docutils literal"&gt;dfsg&lt;/tt&gt; to the version number, but &lt;a class="reference external" href="http://askubuntu.com/q/11592/2591"&gt;not
everybody knows that&lt;/a&gt;. And even if they did, they would then need to
spend time checking exactly what changed.&lt;/li&gt;
&lt;li&gt;Debian doesn't merely re-distribute the jar files. They actually
rebuild them, with Debian-supplied compilers. Maybe this isn't an
issue for Java projects, but who knows.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is not to knock the Debian way of doing things. It's actually quite
excellent (hence my love), but it can't fit all scenarios. See Matt
Zimmerman's &lt;a class="reference external" href="http://mdzlog.alcor.net/2010/07/06/weve-packaged-all-of-the-free-software-what-now/"&gt;excellent post&lt;/a&gt;, where he touches on this issue.&lt;/p&gt;
&lt;p&gt;I did wise up a bit by simply doing things the way the makers of Mule
intended.&lt;/p&gt;
</summary><category term="Debian"></category><category term="non-Python"></category></entry><entry><title>links 2012-02-01</title><link href="http://tshepang.net/links-2012-02-01" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-01:links-2012-02-01</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/a-prayer-to-the-programming-gods/"&gt;&amp;quot;A prayer to the programming gods&amp;quot;&lt;/a&gt; – decent humor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://plope.com/Members/chrism/in_defense_of_zope_libraries"&gt;A bit of Zope history, how it rocked, and how it sucked&lt;/a&gt; – makes&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;me respect &lt;a class="reference external" href="http://docs.pylonsproject.org/en/latest/docs/pyramid.html"&gt;Pyramid&lt;/a&gt; even more.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://jpos.org/blog/2010/06/technology-xy/"&gt;A scathing read regarding incompencies of developers&lt;/a&gt;; for the&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;sake of completeness, he should have mentioned that developers
often don't have time to fully understand technologies they are
often commanded (by employers) to work with.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://lists.mplayerhq.hu/pipermail/mplayer-users/2005-November/056854.html"&gt;on the frustrations of waiting too long to get help&lt;/a&gt;; great humor&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="humor"></category></entry><entry><title>surprising discovery of the day</title><link href="http://tshepang.net/surprising-discovery-of-the-day" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-01-03:surprising-discovery-of-the-day</id><summary type="html">&lt;p&gt;I was not aware that there were two separate words,
&lt;strong&gt;quiet&lt;/strong&gt; and &lt;strong&gt;quite&lt;/strong&gt;. I used them for their meanings
interchangeably, using both spellings unaware.&lt;/p&gt;
</summary></entry><entry><title>project of note: Requests</title><link href="http://tshepang.net/project-of-note-requests" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-12-31:project-of-note-requests</id><summary type="html">&lt;p&gt;Requests is a Python module that makes it real easy to deal with HTTP.
As an example, something as scary as fetching a web page that needs
authentication requires only a single line of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's capable of &lt;a class="reference external" href="http://docs.python-requests.org/en/latest/index.html#feature-support"&gt;a lot more&lt;/a&gt; of course (&lt;a class="reference external" href="http://docs.python-requests.org/en/latest/user/quickstart/"&gt;tutorial&lt;/a&gt;), and it's weird
that something this nice hasn't been around for ages. There is another
that is much simpler to use and more advanced than Python's standard
library named &lt;a class="reference external" href="http://code.google.com/p/httplib2/"&gt;httplib2&lt;/a&gt;, but it's not quite as simple/elegant:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.cache&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;ugly&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_credentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An example for achieving the same with only the standard library is far
messier.&lt;/p&gt;
</summary><category term="project-of-note"></category><category term="Python"></category></entry><entry><title>Battlestar Galactica - Season 3 Episode 20</title><link href="http://tshepang.net/battlestar-galactica-season-3-episode-20" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-12-29:battlestar-galactica-season-3-episode-20</id><summary type="html">&lt;p&gt;I hardly ever write anything about tv productions regardless of how many
times I tend to get impressed, and there hasn't been a shortage of that.
That's mainly due to laziness/motivation, but this time I just have to
mention this one gem:&lt;/p&gt;
&lt;p&gt;The very last episode of the Season mainly focuses on the trial of one
former president who is accused of treason due to surrendering to the
cylons (a species created by humans) as well as giving them official
approval to execute dozens of people. The defence given by an assistant
lawyer is a masterpiece, and would match well with any court thing I've
seen in my tv/movie-watching history. The performance matches as well,
and that's interesting because the performer/character combination is
among the least interesting in the series.&lt;/p&gt;
&lt;p&gt;As a sidenote, I find this Season to be the best (in a series of
four), because it covers more interesting events (the capturing of the
humans, the resistance, their eventual rescue, and a lot more, best of
which was the trial of course).&lt;/p&gt;
&lt;p&gt;This positiveness could make it look like I'm a huge fan of the series,
but I'm not. In fact, I too often tend to hate it. There's a whole lot
of religious non-sense that I can't bear, some seriously annoying
characters, at least overly eccentric one, too much day-dreaming, some
too-stupid plot decisions... but Episode 20 goes some way to help me
forgive the rest of the shit.&lt;/p&gt;
</summary><category term="tv"></category></entry><entry><title>Java gripes</title><link href="http://tshepang.net/java-gripes" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-11-02:java-gripes</id><summary type="html">&lt;p&gt;Okay, so Java sucks 'a bit', but the following surprised me:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I struggled to find a way to count the number of elements in an
array. In a string it's done thus: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;quot;four&amp;quot;.length()&lt;/span&gt;&lt;/tt&gt;. Given that, I
expected that &lt;tt class="docutils literal"&gt;{'f', 'o', 'u', &lt;span class="pre"&gt;'r'}.length()&lt;/span&gt;&lt;/tt&gt; would gimme the same
result. Nah! I found that I had to do
&lt;tt class="docutils literal"&gt;new char [] {'f', 'o', 'u', &lt;span class="pre"&gt;'r'}.length&lt;/span&gt;&lt;/tt&gt;, and yes, without the
brackets after length. WTF! There might be a good reason for such
(seeming) inconsistency of course, but I've been spoilt by Python's
elegant equivalents: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;len(&amp;quot;four&amp;quot;)&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;len(['f','o',&lt;/span&gt; 'u', &lt;span class="pre"&gt;'r'])&lt;/span&gt;&lt;/tt&gt;
which all give the same result. (sidenote: &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; is a Python
built-in function, which explains why there's no dot notation there).&lt;/li&gt;
&lt;li&gt;The standard library doesn't have CSV handling! I had to find an
external library for that!&lt;/li&gt;
&lt;li&gt;Given 2 strings, I can't do &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;str1==str2&lt;/span&gt;&lt;/tt&gt; for comparison, but am
forced to use the string method, equals: &lt;tt class="docutils literal"&gt;str1.equals(str2)&lt;/tt&gt;. This
bit me a few times, and am sure am not the only one.&lt;/li&gt;
&lt;li&gt;The standard library doesn't have &lt;tt class="docutils literal"&gt;.INI&lt;/tt&gt; file handling (&lt;a class="reference external" href="http://stackoverflow.com/questions/3728823"&gt;Someone
pointed to a 3rd party library&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="non-Python"></category><category term="Python"></category></entry><entry><title>top tracks: Bob Marley</title><link href="http://tshepang.net/top-tracks-bob-marley" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-11-02:top-tracks-bob-marley</id><summary type="html">&lt;div class="section" id="landmark"&gt;
&lt;h2&gt;1 landmark&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;No Woman, No Cry&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="masterpieces"&gt;
&lt;h2&gt;2 masterpieces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Stir It Up&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;One Love&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent-works"&gt;
&lt;h2&gt;6 excellent works&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Waiting in Vain&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Kaya&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Sun is Shining&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Satisfy My Soul&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Redemption Song&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Rastaman Chant&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="music"></category><category term="top-tracks"></category></entry><entry><title>top tracks: Burning Spear</title><link href="http://tshepang.net/top-tracks-burning-spear" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-11-02:top-tracks-burning-spear</id><summary type="html">&lt;div class="section" id="landmark"&gt;
&lt;h2&gt;1 landmark&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Old Marcus Garvey&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="masterpieces"&gt;
&lt;h2&gt;4 masterpieces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Tradition&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Invasion&lt;/em&gt; (aka &lt;em&gt;Black Wa-da-da&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Marcus Garvey&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Give Me&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent-works"&gt;
&lt;h2&gt;7 excellent works&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Creation Rebel&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Lion&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The Wilderness&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Slavery Days&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Civilise Reggae&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Live Good&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Jordan River&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="honorable-mention"&gt;
&lt;h2&gt;honorable mention&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Children of Today (&lt;em&gt;Living Dub - Vol. 1&lt;/em&gt; - 1993); longer version: We
Suffer (Original Mix) (&lt;em&gt;Rare and Unreleased&lt;/em&gt; - 2001)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="music"></category><category term="top-tracks"></category></entry><entry><title>top tracks: Salif Keita</title><link href="http://tshepang.net/top-tracks-salif-keita" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-11-02:top-tracks-salif-keita</id><summary type="html">&lt;div class="section" id="masterpieces"&gt;
&lt;h2&gt;5 masterpieces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mandjou (&lt;em&gt;Folon... The Past&lt;/em&gt; - 1995)&lt;/li&gt;
&lt;li&gt;Inigiche (&lt;em&gt;Mouffou&lt;/em&gt; - 2002)&lt;/li&gt;
&lt;li&gt;Souareba (&lt;em&gt;Soro&lt;/em&gt; - 1987)&lt;/li&gt;
&lt;li&gt;Cono (&lt;em&gt;Soro&lt;/em&gt; - 1987)&lt;/li&gt;
&lt;li&gt;Yamore (&lt;em&gt;Mouffou&lt;/em&gt; - 2002)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent-works"&gt;
&lt;h2&gt;4 excellent works&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Nyanafin&lt;/li&gt;
&lt;li&gt;Tekere&lt;/li&gt;
&lt;li&gt;Seydou&lt;/li&gt;
&lt;li&gt;Madan&lt;/li&gt;
&lt;li&gt;Sina (aka Soumbouya)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="music"></category><category term="top-tracks"></category></entry><entry><title>developer of note: John Palmieri</title><link href="http://tshepang.net/developer-of-note-john-palmieri" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-09-20:developer-of-note-john-palmieri</id><summary type="html">&lt;p&gt;Every so often, there appears a developer who pressures me away from
my lazy, unfocused, and undisciplined ass to go do some useful
programming.  This time around it's John Palmieri, the most visible of
the developers of &lt;a class="reference external" href="https://live.gnome.org/PyGObject"&gt;PyGObject&lt;/a&gt; (Python bindings for GTK+ and GLib).
The old way of using GTK+ with Python has for years been PyGTK and
this guy has been tirelessly working to move the world to the more
modern PyGObject, and has led at least one coding sprint to help
achieve this goal.  He also appears friendly and humble. He rocks!&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="GNOME"></category><category term="Python"></category></entry><entry><title>moving from Acer TravelMate to HP Probook, using Debian</title><link href="http://tshepang.net/moving-from-acer-travelmate-to-hp-probook-using-debian" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-07-16:moving-from-acer-travelmate-to-hp-probook-using-debian</id><summary type="html">&lt;p&gt;I have been using an Acer TravelMate 6592 laptop for close to 3 years
(ever since I got &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my coding job&lt;/a&gt;). It had some issues:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.google.co.za/search?hl=en&amp;amp;biw=1366&amp;amp;bih=630&amp;amp;q=6592+acer&amp;amp;um=1&amp;amp;ie=UTF-8&amp;amp;tbm=isch&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=wi"&gt;it's damn ugly&lt;/a&gt;, though not as much as Lenovo ones&lt;/li&gt;
&lt;li&gt;it requires Intel non-free firmware for its Wi-Fi chipset&lt;/li&gt;
&lt;li&gt;it frequently refused to make the LAN accessible from Linux on boot;
this was likely a BIOS issue&lt;/li&gt;
&lt;li&gt;the battery capacity was below 50% so it didn't last&lt;/li&gt;
&lt;li&gt;the hard drive was developing bad sectors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other than that, it truly was an excellent laptop, and I never
complained about its performance, ever since I added a 2GB RAM stick, to
make it a total of 4GB (except that I wished my HDD was faster, tempting
me to buy an SSD). What else I really liked about it is the
feature-packed touchpad: Beyond the normal two-finger and
side-scrolling, it also had up-down-left-right buttons which allowed
constant-speed scrolling. It's interesting that such a touchpad is very
rare.&lt;/p&gt;
&lt;p&gt;I now got an HP Probook 4530s and its pros:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.google.co.za/search?q=probook+4530s&amp;amp;um=1&amp;amp;ie=UTF-8&amp;amp;tbm=isch&amp;amp;source=og&amp;amp;sa=N&amp;amp;hl=en&amp;amp;tab=wi&amp;amp;biw=1366&amp;amp;bih=630"&gt;it's stunning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;it's got a real fast hard drive; there were times when I saw speeds
upwards to 70MB/s, which I never saw with the older laptop&lt;/li&gt;
&lt;li&gt;its Wi-Fi doesn't require non-free software&lt;/li&gt;
&lt;li&gt;it's far more modern (USB3 support) and supposedly faster (Core
i5-2410M vs. Core 2 Duo T7500), but my typical workload made even the
TravelMate more than adequate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the cons:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a less featureful touchpad&lt;/li&gt;
&lt;li&gt;keyboard keys placed in weird locations (e.g. &lt;strong&gt;pg up&lt;/strong&gt; and &lt;strong&gt;pg dn&lt;/strong&gt;
buttons are placed far away, at the top-right corner; I blame the
(needless for me) numeric keypad&lt;/li&gt;
&lt;li&gt;the screen resolution is on the low side and so is the screen size;
the older laptop is much bigger even if they are both labeled 15.4&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...and Debian:&lt;/p&gt;
&lt;p&gt;Quite a few times, I tend to want to stick to a stable release of
Debian. Following Debian development does take time (frequent updates,
curiosity to see what changed, and something getting broken here and
there). So I tried to do the same here. Sadly, some of the software in
Squeeze is too outdated to be optimal, so am glad to have teams like
&lt;a class="reference external" href="http://tshepang.net/thanks-to-the-debian-backports-team"&gt;Debian Backports folk&lt;/a&gt;. But that wasn't enough, so I ended up
installing Xorg components from Debian Unstable (Suspend doesn't work
well with Squeeze (Debian 6) and backports doesn't have a newer X
version.&lt;/p&gt;
&lt;p&gt;Let's see how long I last trying to keep pure by running as little from
outside Squeeze as possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;This didn't even last for 1 day. I was having issues with my X hanging
the entire OS, forcing me to do a hard-reboot. This happened when I was
watching a video using VLC, so I blamed it and installed the version
from Debian Unstable. Sadly, doing things that way resulted in a VLC
that refused to die normally, forcing me to do &lt;tt class="docutils literal"&gt;kill &lt;span class="pre"&gt;-9&lt;/span&gt; vlc&lt;/tt&gt;. I then
just screwed my plans and upgraded fully to Unstable, and now VLC quits
gracefully. Let's see if I'll have the X lockup again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 2&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Well, I still experience machine lock-ups, the bad ones forcing a
hard-reboot. This might be related to Wi-Fi because I used the system
for quite a while using the wired link, without any such lock-up.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 3&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;No more lock-ups, except very rarely. I run a mix of Testing and
Unstable at the moment, but my &amp;quot;/etc/sources.list&amp;quot; file points solely at
my custom repository and Testing, for it just is tiring to keep tracking
Unstable... way too much bandwidth.&lt;/p&gt;
</summary><category term="Debian"></category><category term="hardware"></category></entry><entry><title>links 2011-07-15</title><link href="http://tshepang.net/links-2011-07-15" rel="alternate"></link><updated>2013-11-15T07:39:14+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-07-15:links-2011-07-15</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bergie.iki.fi/blog/understanding_meego/"&gt;What's up with MeeGo?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=340298"&gt;a really good bug report&lt;/a&gt; – I found this because I was having the
same issue with Eclipse&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=340298"&gt;wonderful openness&lt;/a&gt; – the sort of reporting that raises the
expectations of web applications providers&lt;/li&gt;
&lt;li&gt;a real nice &lt;a class="reference external" href="https://chrome.google.com/webstore/detail/google-dictionary-by-goog/mgijmajocgfcbeboacabfgobmjgjcoja"&gt;Chromium dictionary Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pitivi.org/i/history.png"&gt;a graph&lt;/a&gt; showing the history FLOSS video editors&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>thanks to the Debian backports team</title><link href="http://tshepang.net/thanks-to-the-debian-backports-team" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-07-14:thanks-to-the-debian-backports-team</id><summary type="html">&lt;p&gt;So I got this new HP laptop, Probook 4530s, and installed Debian 6
(Squeeze) on it. I was left sitting with two unbearable problems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The touchpad wasn't fully operational (GNOME Mouse Preferences didn't
have a Touchpad tab where I could change the settings).&lt;/li&gt;
&lt;li&gt;The video driver seemed to have a problem according to the output of
&lt;strong&gt;xvinfo&lt;/strong&gt; (&lt;tt class="docutils literal"&gt;no adaptors present&lt;/tt&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I curiously looked at &lt;a class="reference external" href="http://backports.debian.org/"&gt;the backports&lt;/a&gt;, and found Linux kernel 2.6.38
(Squeeze has 2.6.32). I didn't expect much from it, but installed it
anyway (I heard that it has improved desktop responsiveness). I was
pleasantly surprised to find that it fixed the above two problems.
Loveliness.&lt;/p&gt;
&lt;p&gt;On another note, I found that Mercurial 1.8 also has a backport.
This is great news because I have repositories I created with that
version and the format is incompatible with Squeeze's 1.6.&lt;/p&gt;
</summary><category term="Debian"></category><category term="VCS"></category></entry><entry><title>my first code contribution to the CPython project</title><link href="http://tshepang.net/my-first-code-contribution-to-the-cpython-project" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-06-10:my-first-code-contribution-to-the-cpython-project</id><summary type="html">&lt;p&gt;Looking at &lt;a class="reference external" href="http://hg.python.org/cpython/file/default/Misc/ACKS"&gt;the long list&lt;/a&gt; of people who have contributed to Python,
you will notice that my name is somewhere. This moment excites me,
considering my deep respect for the project (the only other mega FLOSS
project I have comparable respect for is Debian).&lt;/p&gt;
&lt;p&gt;Interestinly, &lt;a class="reference external" href="http://bugs.python.org/issue12246"&gt;my patch&lt;/a&gt; went through a few iterations before it was
accepted, and even then, with some modifications. It was an eye-opening
experience, and made me learn a little more than I thought I needed to.
Now, I just need to do a few more of these.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>unfair criticism of Ubuntu</title><link href="http://tshepang.net/unfair-criticism-of-ubuntu" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-05-26:unfair-criticism-of-ubuntu</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;The developers who castigate Ubuntu are uniformly silent about the
number of kernel patches coming from the Mandriva camp. They have
nothing to say about how much Xandros gives back to Debian. Nobody
totals up contributions from Gentoo. There are no complaints about
Slackware's presence in the community. Arch Linux developers do not
hear that they are not doing enough. There are no high-profile
articles on how rPath is taking advantage of free software
developers.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lwn.net/Articles/294542/"&gt;In defence of Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="non-Debian"></category><category term="quote"></category></entry><entry><title>wajig 2.2 released</title><link href="http://tshepang.net/wajig-22-released" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-05-09:wajig-22-released</id><summary type="html">&lt;p&gt;Our friendly Debian developer agreed to upload yet another release of
wajig to Debian.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This one is quite special since it now uses Python 3.&lt;/li&gt;
&lt;li&gt;It also does automatic dependency installation for DEB files. This
part of the work took me longer because python-apt doesn't exactly
make it easy. I even had to look in the code to be sure what exactly
is happening. I ended up using a mixture of dpkg (for installation of
stated DEBs, and to configure them) and python-apt (for the automatic
installation part).&lt;/li&gt;
&lt;li&gt;The WHICHPACKAGE command, which displays which packages the given
file path belongs to, got improved. It was using custom
implementation which was broken for some uses, but there are
available tools (&lt;tt class="docutils literal"&gt;dpkg &lt;span class="pre"&gt;--list&lt;/span&gt;&lt;/tt&gt; for locally-installed packages and
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-file&lt;/span&gt; search&lt;/tt&gt; for both local and remote packages) that do the
job better, and I made use of them. These tools were probably not
avaialable the time this feature was added to wajig.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="wajig"></category></entry><entry><title>wajig 2.1 released</title><link href="http://tshepang.net/wajig-21-released" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-27:wajig-21-released</id><summary type="html">&lt;p&gt;Today I released &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20110427T131707Z.html"&gt;a new version of wajig&lt;/a&gt;, first time in about half a
year. It's not even like there's some groundbreaking stuff or anything,
I just haven't put as much time. Regardless, it's quite a good release.&lt;/p&gt;
&lt;p&gt;One the changes is getting rid of gjig, the GUI interface.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I actually did like it, but it was never a production standard piece
of code. It was actually quite nifty and useful, but the interface
was not at all modern or usual. It also needed a lot of polish.&lt;/li&gt;
&lt;li&gt;I learned a lot from trying to port it away from the deprecated
libglade library to a more modern gtkbuilder (part of GTK+) but the
porting documentation wasn't really good, so I was left with the
option doing it from scratch. Not exactly a small task.&lt;/li&gt;
&lt;li&gt;Worse still is the fact that there were more pro-looking GUI package
managers out there.&lt;/li&gt;
&lt;li&gt;It didn't keep up with the pace of development wajig. It was a
2nd-class citizen.&lt;/li&gt;
&lt;li&gt;Oh, and I'm so afraid of GUI developement, or should I say GTK+. It
was never an easy domain for me, and I still don't really get it. And
yes, I've tried. Maybe other toolkits are easier, and I'm too lazy to
check them out. I prefer backend stuff, where I don't have to deal
with these GUI things.&lt;/li&gt;
&lt;li&gt;I wanted to move wajig forward into Python 3 land, and given that
GTK+ support for that Python version isn't exactly mature (at time of
writing), I felt that I was being held back. And don't ask me why
rush for Python 3, because you are not going to get anything stronger
than &amp;quot;it's what the kool kids use&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="wajig"></category></entry><entry><title>from Squeeze to Unstable, and back again</title><link href="http://tshepang.net/from-squeeze-to-unstable-and-back-again" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-26:from-squeeze-to-unstable-and-back-again</id><summary type="html">&lt;p&gt;With all the noise regarding GNOME 3, I decided to lose patience and go
check it out. Thing is it's currently in Debian Experimental suite, so I
installed the essential components from there, stuff like gnome-shell,
mutter and gnome-panel, and things weren't so smooth. So I thought that
it might be because I was still using Squeeze (Debian 6, released in
February), so I upgraded my entire system to Sid (the main Debian
development suite). Well, the new hotness wasn't as usable as I'd like,
so I decided to go back to my rock-solid and familiar GNOME 2
environment. I was surpride that I could to downgrade the whole thing
back to Squeeze, without any major hitch. Of course the downgrading
process wasn't exactly smooth (lots of package removals before
re-installation for one), but I'm running Squeeze as we speak.&lt;/p&gt;
&lt;p&gt;It would have been quicker for me to just re-install of course,
especially because I have some installation and setup scripts to make it
quick. But doing that would imply I wouln't have access to my computer
for minutes on end. Not good. Also, it's nice that I continued running
that fine-looking GNOME 3, while under-the-hood it was being removed. It
took just a logout and back in to be back home... GNOME 2 from Squeeze.
Note that this sort of thing is not officially supported by Debian. It's
probably going to be harder to do this as Unstable develops further. But
this exercise gave me newfound respect for the strength and stability of
the Debian system.&lt;/p&gt;
</summary><category term="Debian"></category><category term="GNOME"></category></entry><entry><title>the need for quality in healthcare</title><link href="http://tshepang.net/the-need-for-quality-in-healthcare" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-11:the-need-for-quality-in-healthcare</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;For every drowned and pulseless child rescued by intensive care,
there are many more who don't make it—and not just because their
bodies are too far gone. Machines break down; a team can't get
moving fast enough; a simple step is forgotten. Such cases don't get
written up in The Annals of Thoracic Surgery, but they are the norm.
Intensive-care medicine has become the art of managing extreme
complexity—and a test of whether such complexity can, in fact, be
humanly mastered.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.newyorker.com/reporting/2007/12/10/071210fa_fact_gawande?currentPage=all"&gt;The Checklist&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That's some scary shit. Read the whole article to get the context
(i.e. the heroic work involved in saving that girl's life).
It's a great read.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>developer of note: Josselin Mouette</title><link href="http://tshepang.net/developer-of-note-josselin-mouette" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-08:developer-of-note-josselin-mouette</id><summary type="html">&lt;p&gt;The efforts that Josselin Mouette puts into maintaining Debian's GNOME
are amazing (and seemingly thankless). He is the most visible member of
that team-maintained part of Debian. He also portrays deep knowledge of
GNOME's oft-inconsistent and oft-complex internals, and does participate
in upstream discussions.&lt;/p&gt;
&lt;p&gt;Here are two examples of his heroic efforts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;His &lt;a class="reference external" href="http://lists.debian.org/debian-release/2009/08/msg00211.html"&gt;great summary&lt;/a&gt; of GNOME's then-current release status.&lt;/li&gt;
&lt;li&gt;With the release of GNOME 3, here he prepares &lt;a class="reference external" href="http://lists.debian.org/debian-gtk-gnome/2011/04/msg00006.html"&gt;a migration plan&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category><category term="GNOME"></category></entry><entry><title>cleansing multiple build directories</title><link href="http://tshepang.net/cleansing-multiple-build-directories" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-26:cleansing-multiple-build-directories</id><summary type="html">&lt;p&gt;In my adventures of &lt;a class="reference external" href="http://tshepang.net/my-jhbuild-setup"&gt;building GNOME with JHBuild&lt;/a&gt;, it often happens
that when I tweak something that affects the build environment (e.g. use
system Python instead of JHBuild-built one), I get a heck of a lot of
build failures. This will happen even after I run jhbuild clean (which
runs &lt;tt class="docutils literal"&gt;make clean&lt;/tt&gt; on the modules), testimony to the weakness ofthe
GNOME build infrastructure (autotools, ...). This means that I need to
run &lt;tt class="docutils literal"&gt;make distclean&lt;/tt&gt; or better still (where applicable)
&lt;tt class="docutils literal"&gt;git clean &lt;span class="pre"&gt;-dfx&lt;/span&gt;&lt;/tt&gt;. Note that I sometimes even have to uninstall one or
two modules (on JHBuild path) to get a build failure fixe
(&lt;tt class="docutils literal"&gt;jhbuild uninstall modulename&lt;/tt&gt;). This is laborious work, so I
sometimes just wipe out the entire installation.&lt;/p&gt;
&lt;p&gt;Note that there's dozens of modules to build, so I wrote this little
script to take care of it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;top_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/src/gnome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;full_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{}/{}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cd ~/src/gnome/{} &amp;amp;&amp;amp; git clean -dfx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cd ~/src/gnome/{} &amp;amp;&amp;amp; make distclean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cd ~/src/gnome/{} &amp;amp;&amp;amp; make clean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="update"&gt;
&lt;h2&gt;update&lt;/h2&gt;
&lt;p&gt;Someone very kind guy made &lt;a class="reference external" href="http://codereview.stackexchange.com/questions/1476/cleansing-multiple-build-directories/1477#1477"&gt;a bunch of suggestions&lt;/a&gt;, making my code much
better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;top_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/src/gnome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;full_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;git clean -dfx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;make distclean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;make clean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;p&gt;modules: &lt;a class="reference external" href="http://docs.python.org//library/os"&gt;os&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org//library/os.path"&gt;os.path&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org//library/subprocess"&gt;subprocess&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Python"></category><category term="GNOME"></category></entry><entry><title>my JHBuild setup</title><link href="http://tshepang.net/my-jhbuild-setup" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-19:my-jhbuild-setup</id><summary type="html">&lt;p&gt;JHBuild is a &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/command-reference.html.en"&gt;powerful&lt;/a&gt; and &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/config-reference.html.en"&gt;flexible&lt;/a&gt; build tool for GNOME. It does
takes some getting used to in terms of set-up, but this &lt;a class="reference external" href="http://live.gnome.org/Jhbuild"&gt;wiki page&lt;/a&gt; is
quite gentle, and it details how to get the code running on your
machine.&lt;/p&gt;
&lt;p&gt;If you use Debian (or Ubuntu), you can use run this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wajig --norecommends install build-essential docbook-xsl flex &lt;span class="se"&gt;\&lt;/span&gt;
bison cvs gperf cmake  &lt;span class="o"&gt;{&lt;/span&gt;uuid,ppp&lt;span class="o"&gt;}&lt;/span&gt;-dev &lt;span class="se"&gt;\&lt;/span&gt;
libx&lt;span class="o"&gt;{&lt;/span&gt;composite,randr,damage,ft2,i,t&lt;span class="o"&gt;}&lt;/span&gt;-dev &lt;span class="se"&gt;\&lt;/span&gt;
libxcb-&lt;span class="o"&gt;{&lt;/span&gt;event1,aux0,atom1&lt;span class="o"&gt;}&lt;/span&gt;-dev &lt;span class="se"&gt;\&lt;/span&gt;
lib&lt;span class="o"&gt;{&lt;/span&gt;pam0g,iw,db,gdbm,png12,ffi,tiff,vorbis,gl1-mesa,unistring&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
lib&lt;span class="o"&gt;{&lt;/span&gt;quvi,icu,neon27,usb-1.0-0,asound2,ncurses5,udev,usb,acl1&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
lib&lt;span class="o"&gt;{&lt;/span&gt;boost-signals,ldap2,sasl2&lt;span class="o"&gt;}&lt;/span&gt;-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's installs the development packages that will be needed by the build
process. The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--no-recommends&lt;/span&gt;&lt;/tt&gt; option means I want to limit the
installation to packages I really need, avoiding the extra stuff deemed
by the packager to be useful for me.&lt;/p&gt;
&lt;p&gt;My &amp;quot;~/.jhbuilrc&amp;quot; contains the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# build directory&lt;/span&gt;
&lt;span class="n"&gt;checkoutroot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/src/gnome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# don&amp;#39;t spew lots of distracting status messages&lt;/span&gt;
&lt;span class="n"&gt;notrayicon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# attempt to build modules even if their dependencies weren&amp;#39;t successfully built&lt;/span&gt;
&lt;span class="n"&gt;nopoison&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# don&amp;#39;t build these since they have issues; this implies that I must install my distro&amp;#39;s development versions&lt;/span&gt;
&lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;nspr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# dont fetch moduleset xml files from the web; use ones that are installed locally&lt;/span&gt;
&lt;span class="n"&gt;use_local_modulesets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# where html-formatted logs are kept&lt;/span&gt;
&lt;span class="n"&gt;tinderbox_outputdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/temp/tinderbox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/config-reference.html.en"&gt;Configuration File Reference&lt;/a&gt; for a detailed explanation of these
options.&lt;/p&gt;
&lt;p&gt;After this, I run &lt;tt class="docutils literal"&gt;jhbuild bootstrap &lt;span class="pre"&gt;--ignore-system&lt;/span&gt;&lt;/tt&gt;. This downloads,
builds, and installs the basic tools for building packages (here's &lt;a class="reference external" href="http://git.gnome.org/browse/jhbuild/tree/modulesets/bootstrap.modules"&gt;the
xml file&lt;/a&gt; it uses to determine what these tools are, and where it
downloads them from). To avoid issues with some incompatibility with my
OS, I use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--ignore-system&lt;/span&gt;&lt;/tt&gt;, which ensures that the bootstrap command
will use the blessed versions of these tools.&lt;/p&gt;
&lt;p&gt;When the bootstrap process is complete, I run the not-so-descriptive
command &lt;tt class="docutils literal"&gt;jhbuild tinderbox&lt;/tt&gt; (See Command Reference for a detailed
explanation of this and the other options). This is the same as build,
except that the output is stored in html files, in a directory specified
by &lt;strong&gt;tinderbox_outputdir&lt;/strong&gt; in the config file.&lt;/p&gt;
&lt;p&gt;Ideally, some hours later, the process should be complete. Reaching for
&amp;quot;~/temp/tinderbox&amp;quot; will present you with a whole bunch of html files,
one for each module. The file &amp;quot;index.html&amp;quot; will give a decent page that
acts like a summary of the entire build process, showing which modules
failed, and on what build stages. Gorgeous!&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;sidenotes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This process is rather simplified, for the sake of clarity.&lt;/li&gt;
&lt;li&gt;I run Debian 6, codenamed Squeeze.&lt;/li&gt;
&lt;li&gt;There is &lt;a class="reference external" href="http://www.vuntz.net/journal/post/2010/09/23/My-love-for-jhbuild"&gt;a more thorough tutorial&lt;/a&gt; elsewhere.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="GNOME"></category></entry><entry><title>cat, Python, and Perl</title><link href="http://tshepang.net/cat-python-and-perl" rel="alternate"></link><updated>2013-10-01T08:12:47+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-15:cat-python-and-perl</id><summary type="html">&lt;p&gt;I came across &lt;a class="reference external" href="http://greenteapress.com/perl/perl.pdf"&gt;a tutorial&lt;/a&gt; that showes how to implement a simple cat in
Perl. I've modified their example for the sake of simplicity:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="nf"&gt;cat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;FILE&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;@ARGV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Running this script (e.g. &lt;tt class="docutils literal"&gt;perl cat.pl file&lt;/tt&gt;)
will display those files as if you ran &lt;tt class="docutils literal"&gt;cat file&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;I decided to see how the Python example would look like:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
         &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
             &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                 &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Running this script (e.g. &lt;tt class="docutils literal"&gt;python3 cat.py file1 file2&lt;/tt&gt;)
will give exactly the same result as above.&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;notes&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Perl keyword, &lt;tt class="docutils literal"&gt;my&lt;/tt&gt;, indicates that the variabe it refers to is
local. Without that, it's taken to be global. As for Python, this is
implicit, and depends on where the variable is placed (scope).&lt;/li&gt;
&lt;li&gt;Perl has special ways of identifying data types. In our example,
&lt;tt class="docutils literal"&gt;$&lt;/tt&gt; is used to identify a variable that has a single value, and is
known as a scalar in Perl talk. This can be tedious of course (so
much typing!). In Python, the data fed into the variable is the only
thing that determines what type of the variable it is. I see this as
noise from Perl. It results in some badness, as in you can have two
variables names be the same, but given different types (e.g.
&lt;tt class="docutils literal"&gt;my $var; my &amp;#64;var;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;The upper case file handler, &lt;tt class="docutils literal"&gt;FILE&lt;/tt&gt;, is a matter of convention for
Perl, and can be named 'anything'. I used it in the Python sample
only for the sake of clarity.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;&amp;lt;&amp;gt;&lt;/tt&gt; operator is special syntax that means a file is being
manipulated. Python has no such.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;&amp;#64;_&lt;/tt&gt; is an argument list (&lt;tt class="docutils literal"&gt;&amp;#64;ARGV&lt;/tt&gt;) from the function call,
&lt;tt class="docutils literal"&gt;cat&lt;/tt&gt;. This is one other thing that is implicit about Perl, where
you have to learn extra syntax (and concepts), where a simple
argument list should have been provided during the function
declaration, as in Python's &lt;tt class="docutils literal"&gt;cat(files)&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Note that I didn't need to import anything to get Perl to work with
command line arguments. With Python, I need to explicitly do so,
and that's via the &lt;a class="reference external" href="http://docs.python.org/3/library/sys"&gt;sys module&lt;/a&gt;, which is part of its standard library.&lt;/li&gt;
&lt;li&gt;The Python &lt;tt class="docutils literal"&gt;with&lt;/tt&gt; statement is meant to make our lives easier, but
also adds syntax to the language. What it does is close a file for us
so we don't have to do it.&lt;/li&gt;
&lt;li&gt;The Python &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; function adds a newline by default, and that
would results in ugly output from our code, that's why we used the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;end=&amp;quot;&amp;quot;&lt;/span&gt;&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;[1:]&lt;/tt&gt; from the last statement in the Python example means that
we are slicing the list, removing the first element (element 0), and
keeping everything else. We do this because the current running
script is considered by Python as element 0, while in Perl, the 1st
element is actually the first thing that appears on the command line
after the script name. One would say that Perl does this more
elegantly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/reference/executionmodel"&gt;Python scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/3/library/functions#print"&gt;Python print function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/3/reference/compound_stmts#the-with-statement"&gt;Python with statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="non-Python"></category><category term="Python"></category></entry><entry><title>Music is the Weapon (2004)</title><link href="http://tshepang.net/music-is-the-weapon-2004" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-05:music-is-the-weapon-2004</id><summary type="html">&lt;p&gt;I have deep respect for Fela Kuti's musicianship, and more than any
other musician I've ever listened to. His intense love for the craft,
though I suspect that it may at times been detrimental to those
surrounding him, is hard to beat. His political views seemed relevant
too, as he mentions Nigerian government's oppressive acts, one of which
resulted in the death of his mother. How he was going to help correct
these injustices is another thing altogether&lt;/p&gt;
&lt;p&gt;Fela Kuti was an eccentric character, at least as portrayed. He had the
fearless attitude of an traditional activist, which is a quality I
admire (and lack). He also promoted and practiced traditional African
religion (while opposing Christianity and Islam), and polygamy, which is
okay in itself, until the fact that the women themselves would not be
allowed to have other partners. Maybe Fela didn't mind it (he din't
mention it), but I doubt it. That's some double standards which I really
hate.&lt;/p&gt;
&lt;p&gt;The documentary itself is pretty decent, but lacks the depth I was
hoping for. I guess I'm more interested in the musical Fela Kuti than
the politics, even though one heavily influenced the other, making it
hard to separrate the two. But check out &lt;a class="reference external" href="http://www.amazon.com/review/R28YF6P9MDOEPS/ref=cm_cr_dp_perm?ie=UTF8&amp;amp;ASIN=B000079DF9&amp;amp;nodeID=130&amp;amp;tag=&amp;amp;linkCode="&gt;this quality review&lt;/a&gt;, which
is far better and more detailed than I can muster.&lt;/p&gt;
</summary><category term="decent"></category><category term="documentary"></category><category term="music"></category></entry><entry><title>another visit to Eastern Cape</title><link href="http://tshepang.net/another-visit-to-eastern-cape" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-28:another-visit-to-eastern-cape</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/a-visit-to-eastern-cape"&gt;Last time&lt;/a&gt;, I raved about my experiences at a friend's home place,
Nyosini. My memory is not to be completely trusted, but this second (or
third, if we count attending &lt;a class="reference external" href="http://tshepang.net/one-less-angel"&gt;a funeral&lt;/a&gt;). one was even better. Such
hospitality is what I'm sure most people on the planet have never
experienced. We (me and two friends, who were just as impressed) were
treated like royalty. We slept there just one night though, so we spent
nearly all our time there in one yard.&lt;/p&gt;
&lt;p&gt;I have never seen a family quite like this. My own family is quite
close, but definitely not as kindly as this one. And by the way, there
are no exceptions. The love they have, and express, for each other is...
damn I wish I was a better writer.&lt;/p&gt;
&lt;p&gt;I met Bongo again, and the guy's character hasn't changed a bit... maybe
even more shy than last time, I can't tell. Lwazi and Siya weren't there
(boarding school).&lt;/p&gt;
&lt;p&gt;One could say it was me (us?) paying homage to that wonderful family
(it's been over 3 years), but also an excuse to go enjoy the warmth of
their welcome, not to mention the gorgeous scenery of the surrounding
hills.&lt;/p&gt;
</summary></entry><entry><title>Floetic (2002)</title><link href="http://tshepang.net/floetic-2002" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-28:floetic-2002</id><summary type="html">&lt;p&gt;I love the smooth melody that is &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Floetic"&gt;*Floetic*&lt;/a&gt; by Floetry. It is the sort
of sound you find in Jill Scott's near-masterpiece of an album, &lt;em&gt;Who's
Jill Scott&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Here's my favorites:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;track 5: &amp;quot;Getting Late&amp;quot; – not nearly as seductive as &amp;quot;Say Yes&amp;quot;, but
what it's a masterwork&lt;/li&gt;
&lt;li&gt;track 8: &amp;quot;Say Yes&amp;quot; – it's most notable thing is the sensual play by
one them gals; makes me wanna say... yes&lt;/li&gt;
&lt;li&gt;track 2: &amp;quot;Floetic&amp;quot; – energetic and nearly-formulaic; beautiful
arrangements&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="music"></category><category term="very-good"></category></entry><entry><title>project of note: Iotop</title><link href="http://tshepang.net/project-of-note-iotop" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-25:project-of-note-iotop</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://guichaz.free.fr/iotop/"&gt;Iotop&lt;/a&gt; displays disk I/O usage of individual process, in a way similar
to top. What I really loved though is that it allows one to display the
accumulated amount of I/O on any of the DISK READ, DISK WRITE, SWAPIN,
and IO (overall). This is through a nifty interface:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You just press &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; on the keyboard, and it will sort the hungriest
processes on top.&lt;/li&gt;
&lt;li&gt;Reversing the order, you just press &lt;tt class="docutils literal"&gt;r&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;If you want to sort by other colums, you just press the left/right
key.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://guichaz.free.fr/iotop/iotop_big.png"&gt;The presentation&lt;/a&gt; is rather busy, and it doesn't have the myriad
options that &lt;tt class="docutils literal"&gt;top&lt;/tt&gt; has (e.g. I can't chose to hide any of the columns
I'm uninterested in), but it's more than good enough for it's specific
purpose.&lt;/p&gt;
</summary><category term="project-of-note"></category></entry><entry><title>Beethoven's Symphony 9</title><link href="http://tshepang.net/beethovens-symphony-9" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-24:beethovens-symphony-9</id><summary type="html">&lt;p&gt;I was led to listen to Beethoven's &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Symphony_No._9_(Beethoven)"&gt;critically-acclaimed&lt;/a&gt; &amp;quot;Symphony No.
9&amp;quot;. Well, let's say I'm a novice regarding Classical music, but I didn't
find anything amazing in there. Let's call it acquired taste, but I've
heard dozens of Classical tracks that were superior. Let's say maybe I
wasn't focusing much on the music (I was listening to it while browsing
the web). Oh, and I even played it twice just to make sure, and still...
nothing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: the version I listened to is formally titled &lt;em&gt;Symphony No.9 in
D minor, Op.125 – &amp;quot;Choral&amp;quot;&lt;/em&gt; and was played by Wiener Philharmoniker,
Orchestra.&lt;/p&gt;
</summary><category term="classical"></category><category term="music"></category><category term="unrated"></category></entry><entry><title>ouch!</title><link href="http://tshepang.net/ouch" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-22:ouch</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;...while Eliezer Yudkowsky has a ton of interesting things to say
about a lot of subjects, he's also philosophically incompetent (at
least in some areas) and I worry that enshrining him as your guru
will dull your philosophical acuity.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://commonsenseatheism.com/?p=14502#comment-97473"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A comment by someone simply known as Mark in Luke Muehlhauser's post,
&lt;a class="reference external" href="http://commonsenseatheism.com/?p=14502"&gt;New Directions for CommonSenseAtheism.com&lt;/a&gt;.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>The B-Sides 1990-2000 (2002)</title><link href="http://tshepang.net/the-b-sides-1990-2000-2002" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-22:the-b-sides-1990-2000-2002</id><summary type="html">&lt;p&gt;I'm currently enjoying the wonderful &amp;quot;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/The_Best_of_1990–2000#Bonus_B-sides_disc"&gt;The B-Sides 1990-2000&lt;/a&gt;&amp;quot; (2002)
by U2. It's a bunch of real nice Dance re-mixes.&lt;/p&gt;
&lt;p&gt;Here's my favorites:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;track 8: &lt;em&gt;Salomé (Zooromancer Remix)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;track 9: &lt;em&gt;Even Better Than The Real Thing (The Perfecto Mix)&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="music"></category><category term="rock"></category><category term="very-good"></category></entry><entry><title>Hold It Down (1995)</title><link href="http://tshepang.net/hold-it-down-1995" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-20:hold-it-down-1995</id><summary type="html">&lt;p&gt;I recently got hold of &amp;quot;Hold It Down&amp;quot; (1995) by &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Das_EFX"&gt;Das EFX&lt;/a&gt;. Real good
ole-style hip-hop, thanks to a friend who, when I asked who he reckoned
the best hip-hop group is, he mentioned Das EFX. In my investigations, I
also got hold of their &amp;quot;Generation EFX&amp;quot; (1998) which is really bad.
Strange that just 3 years later people can fuck up like that.&lt;/p&gt;
&lt;p&gt;Here's my favorites:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;track 18 – &lt;em&gt;Hardcore Rap Act&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;track 12 – &lt;em&gt;Alright&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;track 05 – &lt;em&gt;Real Hip Hop&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="excellent"></category><category term="hip-hop"></category><category term="music"></category></entry><entry><title>plotting with matplotlib</title><link href="http://tshepang.net/plotting-with-matplotlib" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-17:plotting-with-matplotlib</id><summary type="html">&lt;p&gt;Here's drawing a simple graph:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# a list of 10 integers, 0-9&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now for something a little more interesting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can have more than one graph on a single figure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What if the two graphs have much differing ranges:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Depending on need, that might not be ideal.
So let's create two separate y-axes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twinx&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah, not exactly ideal. We lost the automatic coloring, and we don't
even know which graph is which. Let's do better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twinx&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was done with the help of &lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/api/two_scales.html"&gt;this example&lt;/a&gt;. There's a heck of a
&lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/index.html"&gt;lot&lt;/a&gt; &lt;a class="reference external" href="http://matplotlib.sourceforge.net/gallery.html"&gt;more&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;built-in function: &lt;a class="reference external" href="http://docs.python.org/library/functions#range"&gt;range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;module: &lt;a class="reference external" href="http://docs.python.org/library/random"&gt;random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd-party module: &lt;a class="reference external" href="http://matplotlib.sourceforge.net/api/pyplot_api.html"&gt;matplotlib.pyplot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://matplotlib.sourceforge.net/contents.html"&gt;matplotlib documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Python"></category></entry><entry><title>project of note: matplotlib</title><link href="http://tshepang.net/project-of-note-matplotlib" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-17:project-of-note-matplotlib</id><summary type="html">&lt;p&gt;I believe &lt;a class="reference external" href="http://matplotlib.sourceforge.net/"&gt;matplotlib&lt;/a&gt; is THE plotting library for Python. It happens
to be highly advanced too, and has &lt;a class="reference external" href="http://matplotlib.sourceforge.net/contents.html"&gt;extensive documentation&lt;/a&gt; to show up
for it, including a large collection &lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/index.html"&gt;examples&lt;/a&gt; and a &lt;a class="reference external" href="http://matplotlib.sourceforge.net/gallery.html"&gt;gallery&lt;/a&gt; of
plots (and the code used to produce them).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/plotting-with-matplotlib"&gt;I played a bit with it&lt;/a&gt; and &lt;a class="reference external" href="http://tshepang.net/matplotlib-rocks"&gt;was later on impressed by its
versatility&lt;/a&gt;.&lt;/p&gt;
</summary><category term="project-of-note"></category><category term="Python"></category></entry><entry><title>links 2011-02-15</title><link href="http://tshepang.net/links-2011-02-15" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-15:links-2011-02-15</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bugs.python.org/issue11162"&gt;my first CPython feature request&lt;/a&gt;; unsurprisingly, it was rejected&lt;/li&gt;
&lt;li&gt;I still can't comprehend why Ubuntu gods decided to put their window
controls on the left, and so does &lt;a class="reference external" href="http://yokozar.org/blog/archives/194"&gt;this guy&lt;/a&gt; (&lt;a class="reference external" href="http://www.codinghorror.com/blog/2010/03/the-opposite-of-fitts-law.html"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://benjamin-schweizer.de/operating-systems-lifecycle-chart.html"&gt;Operating Systems Lifecycle Chart&lt;/a&gt; – nice presentation, nice site
design&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://benjamin.mako.hill.usesthis.com/"&gt;The tools&lt;/a&gt; used by one very advanced Debian user; this is quality
and in-depth writing.&lt;/li&gt;
&lt;li&gt;Someone claimed &lt;a class="reference external" href="http://lists.debian.org/debian-user/2007/11/msg00664.html"&gt;Gnucash was to blame&lt;/a&gt; for her move to Linux-based
systems; for another, &lt;a class="reference external" href="http://lists.debian.org/debian-user/2006/10/msg03316.html"&gt;the tool was Meld&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>comparing Debian repositories</title><link href="http://tshepang.net/comparing-debian-repositories" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-09:comparing-debian-repositories</id><summary type="html">&lt;p&gt;If you got two Debian repositories, it's quite easy to check the
differences in package versions between them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;apt_pkg&lt;/span&gt;

&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/.repo_custom/dists/cache/main/binary-i386/Packages.gz&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/.repo_bin/dists/squeeze/main/binary-i386/Packages.gz&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_system&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version_compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}t{1}t({2})&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The line &lt;tt class="docutils literal"&gt;import apt_pkg&lt;/tt&gt; implies that &lt;strong&gt;python3-apt&lt;/strong&gt; is installed.&lt;/p&gt;
&lt;p&gt;Here's a snippet of what the output will look like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
2.32.1-2    2.28.1-6    (gconf-defaults-service)
0.23.0-1    0.21.1-1    (pylint)
2.91.5-2    2.30.2-2    (libgnomekbd-common)
0.21.2-1    0.16.4-1    (libpixman-1-dev)
2.91.7-1    2.30.1-2    (nautilus)
0.9.22-1    0.9.21-3    (pulseaudio-utils)
&lt;/pre&gt;
&lt;p&gt;Here, we get a display of package versions where the repo1 (custom repo
in this case) is greater than repo2 version. To do it the other way
around, use the &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt; character in the comparison line, &lt;tt class="docutils literal"&gt;if vc &amp;gt; 0&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;modules: &lt;a class="reference external" href="http://docs.python.org/library/gzip"&gt;gzip&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/library/os"&gt;os&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd party library: &lt;a class="reference external" href="http://apt.alioth.debian.org/python-apt-doc/library/apt_pkg.html"&gt;apt_pkg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Debian"></category><category term="Python"></category></entry><entry><title>links 2011-02-07</title><link href="http://tshepang.net/links-2011-02-07" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-07:links-2011-02-07</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html"&gt;The Law of Leaky Abstractions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tirania.org/blog/archive/2010/Dec-31.html"&gt;Open Source Contribution Etiquette&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jimmyg.org/blog/2009/working-with-python-subprocess.html"&gt;a gentle intro&lt;/a&gt; to Unix processes, and the Python &lt;a class="reference external" href="http://docs.python.org/library/subprocess"&gt;subprocess
module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/q/4861803/321731"&gt;How does one make Java ignore the number of spaces in a string when
splitting?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/docs-or-it-doesnt-exist/"&gt;on the importance of decent documentation&lt;/a&gt; – a great post&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="Python"></category></entry><entry><title>splitting strings</title><link href="http://tshepang.net/splitting-strings" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-01:splitting-strings</id><summary type="html">&lt;p&gt;If I have a string with spaces, and wanted to split it into a
list/array, I would use this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a b c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
&lt;p&gt;I can go ahead and specify a delimiter (which character the string must
split on):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string with spaces&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I get the same result:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
&lt;p&gt;But what if my string wasn't so forgiving?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a b  c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', '', 'c']
&lt;/pre&gt;
&lt;p&gt;Not exactly what we want. Leaving the delimiter out gives us the exact
same list as when we had this with a forgiving string.&lt;/p&gt;
&lt;p&gt;Anyways, the point is that for a lot of cases, probably a majority, when
one wants to perform a string split, it's because they want to delimit
it with spaces. So, Python covers for that common use-case. That's a bit
of &lt;a class="reference external" href="http://docs.python.org/library/stdtypes.html#str.split"&gt;magic&lt;/a&gt; (&lt;a class="reference external" href="http://bugs.python.org/issue1367936"&gt;justification&lt;/a&gt;) one might take for granted, because it's
not available in PHP and Java. I'm here only going to show Java
examples. PHP examples aren't that much different though.&lt;/p&gt;
&lt;p&gt;Here goes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a b  c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, , c]
&lt;/pre&gt;
&lt;p&gt;That's not what we want, so in order to cover for my unforgiving string,
I get to use regular expressions (regexp)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string with spaces&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; +&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, c]
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;+&lt;/tt&gt; in the &lt;tt class="docutils literal"&gt;split()&lt;/tt&gt; method indicates that the match can either
be one or more consecutive spaces.&lt;/p&gt;
&lt;p&gt;That's not what we want, so in order to cover for my unforgiving string,
I get to use regular expressions (regexp)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string with spaces&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; +&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, c]
&lt;/pre&gt;
&lt;p&gt;But what if the string was even less forgiving. In this case, having
tabs as well? We need some more regexp help:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a    bnc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\s+&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, c]
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;s&lt;/tt&gt; matches any white space.&lt;/p&gt;
&lt;p&gt;With Python, I expected the default way to work but it didn't, but came
back disappointed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a    bnc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['at', 'bnc']
&lt;/pre&gt;
&lt;p&gt;Perhaps it's a philosophical difference, but it's harder to do this with
Python. This is the only thing so that I found easier to achieve in Java
than in Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;s+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a    bnc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;...and we finally get what we want:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
</summary><category term="Python"></category><category term="non-Python"></category></entry><entry><title>basic ConfigParser usage</title><link href="http://tshepang.net/basic-configparser-usage" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-28:basic-configparser-usage</id><summary type="html">&lt;p&gt;Reading &lt;tt class="docutils literal"&gt;.INI&lt;/tt&gt; files is very easy with Python. Say you had a file,
&amp;quot;&lt;em&gt;config.cfg&lt;/em&gt;&amp;quot;, with this content:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[numbers]
one: 1
two: 2
&lt;/pre&gt;
&lt;p&gt;The code to read that content is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[('one', '1'), ('two', '2')]
&lt;/pre&gt;
&lt;p&gt;That's a list of tuples, each tuple a key-value pair.&lt;/p&gt;
&lt;p&gt;Even better, since these are key-value pairs, why not use a more
suitable data type? Here goes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{'two': '2', 'one': '1'}
&lt;/pre&gt;
&lt;p&gt;That's the &lt;strong&gt;dict&lt;/strong&gt; function, which takes a list of tuples, and converts
them to a dictionary. You might also have noticed that the ordering is
now a bit off. That's because the dict type doesn't care about ordering.
Remember that in order to access dictionary content, you use a key and
not an index:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;
&lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/library/configparser"&gt;configparser module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/library/stdtypes#mapping-types-dict"&gt;dict mapping type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Python"></category></entry><entry><title>dangerous inconsistency in symlink removal</title><link href="http://tshepang.net/dangerous-inconsistency-in-symlink-removal" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-28:dangerous-inconsistency-in-symlink-removal</id><summary type="html">&lt;p&gt;Here's how to make a symlink and to delete it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir dir
ln -s dir dirlink
rm -r dirlink
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's another way to delete it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rm -r dirlink/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although it will do the job, it will actually complain with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rm: cannot remove &lt;span class="sb"&gt;`&lt;/span&gt;dirlink&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;: Not a directory
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that we could have achieved the deletion with just:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rm dirlink
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is because the symlink is just a single file. So there's no need to
treat it like a directory when deleting.&lt;/p&gt;
&lt;p&gt;Sadly, this behaviour is inconsistent when there is a mounted voulem.
The first way of deletion has no problem, but the second one will wipe
out the entire drive, if it so happens that &lt;tt class="docutils literal"&gt;dir&lt;/tt&gt; is the mount
directory (i.e. &lt;tt class="docutils literal"&gt;ln &lt;span class="pre"&gt;-s&lt;/span&gt; /media/my_drive dirlink &amp;amp;&amp;amp; rm &lt;span class="pre"&gt;-r&lt;/span&gt; dirlink/&lt;/tt&gt;). I
learned this the hard way :(&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] Here's &lt;a class="reference external" href="http://unix.stackexchange.com/q/6618/688"&gt;some explanation&lt;/a&gt;.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>basic usage of Python with Oracle DB, in Debian</title><link href="http://tshepang.net/basic-usage-of-python-with-oracle-db-in-debian" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-27:basic-usage-of-python-with-oracle-db-in-debian</id><summary type="html">&lt;p&gt;What if you wanted to access Oracle using Python? Once you are &lt;a class="reference external" href="http://tshepang.net/accessing-oracle-db-using-python-in-debian"&gt;set
up&lt;/a&gt;, it's real easy. We use &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt;, the most popular Python
library to read Oracle DBs.&lt;/p&gt;
&lt;p&gt;Let's start by simply reading the DB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SELECT * TABLE_NAME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt; explain exactly what each of these means.&lt;/p&gt;
&lt;p&gt;If we wanted instead to modify stuff in there, we only add one extra
line, which is &lt;tt class="docutils literal"&gt;cursor.commit&lt;/tt&gt;, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SELECT * TABLE_NAME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For real-world code, you are of course going to add exception handling
for all this, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SELECT * TABLE_NAME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That exception handling is rather oversimplified though, but is good
enough for illustrative purposes. Also, note that there is no timeout
set in case of problematic/slow network access, so my code will just sit
there waiting to connect.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>using Python's subprocess module</title><link href="http://tshepang.net/using-pythons-subprocess-module" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-26:using-pythons-subprocess-module</id><summary type="html">&lt;p&gt;There are at least 2 ways to run a simple command like &lt;tt class="docutils literal"&gt;echo test&lt;/tt&gt; in
Python: via the shell, or directly (via the kernel).&lt;/p&gt;
&lt;p&gt;This is via the shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;echo test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
test
&lt;/pre&gt;
&lt;p&gt;This is via the kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;echo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(b'testn', b'')
&lt;/pre&gt;
&lt;p&gt;Not exactly what we want. The output is actually a tuple (&lt;strong&gt;stdout&lt;/strong&gt;,
&lt;strong&gt;stderr&lt;/strong&gt;). Note that by default, &lt;tt class="docutils literal"&gt;shell=False&lt;/tt&gt;, and that's why it's
not stated here.&lt;/p&gt;
&lt;p&gt;To get the equivalent of what we get from the first example, we have to
do a bit more work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;echo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
test
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; thing indicates that the string is in bytes format. To get a
normal string from that, just run the string's &lt;a class="reference external" href="http://docs.python.org/library/stdtypes.html?highlight=encode#str.decode"&gt;decode method&lt;/a&gt;. Also,
that I had to use the &lt;tt class="docutils literal"&gt;end&lt;/tt&gt; argument on the &lt;a class="reference external" href="http://docs.python.org/library/functions.html#print"&gt;print function&lt;/a&gt;, was to
avoid an empty line on the terminal output.&lt;/p&gt;
&lt;p&gt;As can be seen, this means we do much of the work ourself, but the
benefit is that we now have finer-grained control (e.g. we get to
control when to display the output). Another benefit is that it is more
secure to do it this way (I don't know the details, so see &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Shell_injection#Shell_injection"&gt;shell
injection&lt;/a&gt; for the argument).&lt;/p&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There is a whole wealth of info on this from &lt;a class="reference external" href="http://jimmyg.org/blog/2009/working-with-python-subprocess.html"&gt;a gentle tutorial&lt;/a&gt;
where I learned this stuff. It also explains what pipes are
(&lt;tt class="docutils literal"&gt;subprocess.PIPE&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Also, take a look at &lt;a class="reference external" href="http://docs.python.org/library/subprocess.html#subprocess.Popen.communicate"&gt;the official doc for the Popen.communicate()
method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintopython3.net/strings.html"&gt;a great explanation&lt;/a&gt; of what strings really are, and how they
relate to Python 3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Python"></category></entry><entry><title>shlex and subprocess</title><link href="http://tshepang.net/shlex-and-subprocess" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-25:shlex-and-subprocess</id><summary type="html">&lt;p&gt;I learned about a module called &lt;a class="reference external" href="http://docs.python.org/library/shlex.html"&gt;shlex&lt;/a&gt;. It's stated to be a simple
lexical analyzer, and I don't really know what this means, but I found
at least one of its uses. It provides a convenience method that lets me
split a command line string, to feed into &lt;a class="reference external" href="http://docs.python.org/library/subprocess.html"&gt;subprocess&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;Let's say I want to run the command &lt;tt class="docutils literal"&gt;/bin/cat 'file with spaces'&lt;/tt&gt; from
within &lt;tt class="docutils literal"&gt;python&lt;/tt&gt;. A normal &lt;tt class="docutils literal"&gt;split&lt;/tt&gt; won't work, because it uses white
space as a delimiter (by default). To test, I will create a file named
&amp;quot;&lt;strong&gt;file with spaces&lt;/strong&gt;&amp;quot; and add text
(&lt;tt class="docutils literal"&gt;content of 'file with spaces'&lt;/tt&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content of file with spaces&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class="s1"&gt;&amp;#39;file with spaces&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's the code, using the normal split method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/bin/cat &amp;#39;file with spaces&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;formatted_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatted_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/bin/cat: &lt;span class="s1"&gt;&amp;#39;file: No such file or directory&lt;/span&gt;
&lt;span class="s1"&gt;/bin/cat: with: No such file or directory&lt;/span&gt;
&lt;span class="s1"&gt;/bin/cat: spaces&amp;#39;&lt;/span&gt;: No such file or directory
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's when &lt;tt class="docutils literal"&gt;shlex&lt;/tt&gt; module gets to be useful.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shlex&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/bin/cat &amp;#39;file with spaces&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;formatted_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shlex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatted_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
content of 'file with spaces'
&lt;/pre&gt;
</summary><category term="Python"></category></entry><entry><title>getting rid of junk</title><link href="http://tshepang.net/getting-rid-of-junk" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-22:getting-rid-of-junk</id><summary type="html">&lt;p&gt;PZ Myers of &lt;a class="reference external" href="http://scienceblogs.com/pharyngula/"&gt;Pharyngula&lt;/a&gt; fame is the best atheist writer I've read yet,
and his blog challenges that of Luke Muehlhauser's &lt;a class="reference external" href="http://commonsenseatheism.com/"&gt;Common Sense Atheism&lt;/a&gt;
as the best atheism blog I've read yet.
Watch him &lt;a class="reference external" href="http://scienceblogs.com/pharyngula/2010/09/26/sunday-sacrilege-a-funeral-for/"&gt;trash away&lt;/a&gt; his Bible and Koran,
in a far more symbolic way than I did with my Bible some years ago...
I simply piled it on top of the rest of the trash.&lt;/p&gt;
</summary><category term="atheism"></category></entry><entry><title>project of note: Geany</title><link href="http://tshepang.net/project-of-note-geany" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-19:project-of-note-geany</id><summary type="html">&lt;p&gt;I've been a satisfied user of Geany, a lightweight IDE, these past few
months:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;automatically detects if it should auto-indent (EG after a function
definition in Python)&lt;/li&gt;
&lt;li&gt;got code-folding&lt;/li&gt;
&lt;li&gt;can highlight #include file and open it (on new tab); does not do
this if it's a system file (/usr/include) though&lt;/li&gt;
&lt;li&gt;got terminal emulator on bottom (though I don't use it)&lt;/li&gt;
&lt;li&gt;can automatically detect tab width (or so it claims)&lt;/li&gt;
&lt;li&gt;has a usage finder which shows where a given function is called, even
among multiple files&lt;/li&gt;
&lt;li&gt;got autosave option as a plugin&lt;/li&gt;
&lt;li&gt;got file browser option as a plugin (although it does not detect
filesystem changes, EG when a file is deleted the view is not updated
to reveal such a change)&lt;/li&gt;
&lt;li&gt;when space-indent is chosen, backspacing through such behaves as if
they were tabs which enhances navigability&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="project-of-note"></category></entry><entry><title>project of note: linkchecker</title><link href="http://tshepang.net/project-of-note-linkchecker" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:project-of-note-linkchecker</id><summary type="html">&lt;p&gt;Weeks ago, I looked for a utility that would help me check for my blog's
dead links, and I bumped onto &lt;a class="reference external" href="http://linkchecker.sourceforge.net/"&gt;LinkChecker&lt;/a&gt; (version on my system is
6.2). It turned out to be impressively advanced, and here's the summary
from its manpage:&lt;/p&gt;
&lt;blockquote&gt;
LinkChecker features recursive checking, multithreading, output in
colored or normal text, HTML, SQL, CSV or a sitemap graph in GML or
XML, support for HTTP/1.1, HTTPS, FTP, mailto:, news:, nntp:, Telnet
and local file links, restriction of link checking with regular
expression filters for URLs, proxy support, username/password
authorization for HTTP and FTP, robots.txt exclusion protocol
support, i18n support, a command line interface and a (Fast)CGI web
interface (requires HTTP server).&lt;/blockquote&gt;
</summary><category term="project-of-note"></category></entry><entry><title>project of note: Mailman</title><link href="http://tshepang.net/project-of-note-mailman" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:project-of-note-mailman</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://list.org/"&gt;Mailman&lt;/a&gt; is most likely the most popular mailing list manager in the
FLOSS ecosystem. What I like about it is the ease-of-use it provides for
the end-user: if u wanna subscribe to &lt;a class="reference external" href="mailto:topic&amp;#64;host.org"&gt;topic&amp;#64;host.org&lt;/a&gt; mailing list, you
simply append -request to the recepient name (&lt;a class="reference external" href="mailto:topic-request&amp;#64;host.org"&gt;topic-request&amp;#64;host.org&lt;/a&gt;)
and use the subject &amp;quot;subscribe&amp;quot;, and simply send. To unsubscribe, you do
the same, except the subject becomes &amp;quot;unsubscribe&amp;quot;. There's also the web
interface for those who won't remember/know these simple instructions of
course. Another bonus: it's written in Python!&lt;/p&gt;
</summary><category term="project-of-note"></category></entry><entry><title>project of note: rdiff-backup</title><link href="http://tshepang.net/project-of-note-rdiff-backup" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:project-of-note-rdiff-backup</id><summary type="html">&lt;p&gt;So I got my hands on a 250GB 2.5&amp;quot; portable HDD, which led to me to go do
proper backups again. I decided to go back to the familiar
&lt;a class="reference external" href="http://rdiff-backup.nongnu.org/"&gt;rdiff-backup&lt;/a&gt; and I became exceedingly impressed by its thorough
documentation (&lt;a class="reference external" href="http://rdiff-backup.nongnu.org/rdiff-backup.1.html"&gt;manpage&lt;/a&gt;, &lt;a class="reference external" href="http://rdiff-backup.nongnu.org/FAQ.html"&gt;FAQ&lt;/a&gt;, and the one place beginners should
start, &lt;a class="reference external" href="http://rdiff-backup.nongnu.org/examples.html"&gt;examples&lt;/a&gt;), a myriad capabilities (over 60 command line
options), and an elegant design (the target directory looks exactly like
the original except for an extra directory named rdiff-backup-data,
which contains all that's needed to roll-back, restore, check stats,
...).&lt;/p&gt;
&lt;p&gt;My usage:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rdiff-backup --include-globbing-filelist rdiff-backup ~/ /media/backup
&lt;/pre&gt;
&lt;p&gt;There, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/conf/rdiff-backup&lt;/span&gt;&lt;/tt&gt; is a file that has a list of directories
I want to exclude in the backup, and &lt;tt class="docutils literal"&gt;/media/backup&lt;/tt&gt; is the backup
destination.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;There is a credible competitor in a form of duplicity, which is probably
superior since it's got encryption. This duplicity also got a bonus of
being used by some hot new GUI backup utility now &lt;a class="reference external" href="http://lists.fedoraproject.org/pipermail/announce/2010-May/002815.html"&gt;endorsed by Fedora&lt;/a&gt;
and may in future be &lt;a class="reference external" href="http://mail.gnome.org/archives/desktop-devel-list/2010-February/msg00013.html"&gt;an official part of GNOME&lt;/a&gt;, Déjà Dup.&lt;/p&gt;
</summary><category term="project-of-note"></category><category term="GNOME"></category></entry><entry><title>project of note: Sudo</title><link href="http://tshepang.net/project-of-note-sudo" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:project-of-note-sudo</id><summary type="html">&lt;p&gt;Some of the benefits of Sudo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The password I authenticate with to perform admin tasks is the same
as the one I use to log in as normal user. This means, in simple
setups, one need only remember one password, instead of two.&lt;/li&gt;
&lt;li&gt;The extra command you have to type before performing any admin task
reduces the danger of running dangerous commands... the sort of thing
that is easy to do when logged in as root.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And some of the more advanced benefits:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[gives users] permission to do certain tasks as a different user
(which doesn’t even have to be root) without giving them complete
access to that user or root. On server systems or multiuser systems
with different people working on different tasks not everyone need
complete access to the system, one hands out only the amount of
access that is required for the task.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://ask.debian.net/questions/4cac81ff19ce953ad306ccab/answers/4cac8a1719ce953ad306dbf0"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="project-of-note"></category><category term="quote"></category></entry><entry><title>project of note: Twisted</title><link href="http://tshepang.net/project-of-note-twisted" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:project-of-note-twisted</id><summary type="html">&lt;p&gt;I've been impressed by &lt;a class="reference external" href="http://stackoverflow.com/q/2974781"&gt;the claims made for Twisted&lt;/a&gt;, which erased the
erroneous thought I've been having that it's just another web framework.
Well, it appears it doesn't really have an equal, and is something
completely different.&lt;/p&gt;
&lt;p&gt;What prompted me to award it &lt;strong&gt;project of note&lt;/strong&gt; honor is its &lt;a class="reference external" href="http://twistedmatrix.com/trac/wiki/ReviewProcess"&gt;patch
review process&lt;/a&gt;, a good indicator that this isn't a toy.&lt;/p&gt;
</summary><category term="project-of-note"></category></entry><entry><title>links 2011-01-17</title><link href="http://tshepang.net/links-2011-01-17" rel="alternate"></link><updated>2013-11-26T19:24:24+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-17:links-2011-01-17</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5642/688"&gt;a wealth of info on 'kill -9'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/a/1010/688"&gt;the best comparison of vi and emacs I've seen yet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://slott-softwarearchitect.blogspot.com/2011/01/java-php-python-which-is-faster-in.html"&gt;the complexity of programming language benchmarking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pixelbeat.org/misc/google_stars.html"&gt;high profile FLOSS developers employed by Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I have never seen such &lt;a class="reference external" href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/"&gt;detailed criticism&lt;/a&gt; of a programming language.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category><category term="Emacs"></category></entry><entry><title>accessing Oracle DB using Python, in Debian</title><link href="http://tshepang.net/accessing-oracle-db-using-python-in-debian" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-15:accessing-oracle-db-using-python-in-debian</id><summary type="html">&lt;p&gt;The following instructions assume that you are using &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Debian Squeeze&lt;/a&gt;,
the current 'stable' release. The instructions hereare very specific, so
look elsewhere for &lt;a class="reference external" href="http://agiletesting.blogspot.com/2005/05/installing-and-using-cxoracle-on-unix.html"&gt;something more generic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;downloads&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Get registered on Oracle website, and download
oracle-instantclient11.2-basic*.rpm (~40MB).&lt;/li&gt;
&lt;li&gt;Get &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/"&gt;cx-Oracle&lt;/a&gt; rpm for your specific Python version and your
specific processor (in my case, 3.1 and i386 respectively).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;installation and setup&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install libpython3.1 libaio1 alien
sudo alien --install oracle-instantclient11.2-basic*rpm cx_Oracle*rpm
sudo ln -s /usr/lib/python3.1/site-packages/cx_Oracle.so /usr/lib/python3.1/lib-dynload
sudo ln -s /usr/lib/oracle/11.2/client/lib/libnnz11.so /usr/lib
sudo ln -s /usr/lib/oracle/11.2/client/lib/libclntsh.so.11.1 /usr/lib
&lt;span class="nb"&gt;echo export &lt;/span&gt;&lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/oracle/11.2/client/lib &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
python3 -c &lt;span class="s1"&gt;&amp;#39;import cx_Oracle&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that last line executes without printing a message to the screen, the
install is most likely successful.&lt;/p&gt;
&lt;p&gt;For basic usage, see &lt;a class="reference external" href="http://tshepang.net/basic-usage-of-python-with-oracle-db-in-debian"&gt;this tiny tutorial&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Debian"></category><category term="Python"></category><category term="non-FLOSS"></category></entry><entry><title>poll results of debian-user's favorite FLOSS</title><link href="http://tshepang.net/poll-results-of-debian-users-favorite-floss" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-15:poll-results-of-debian-users-favorite-floss</id><summary type="html">&lt;p&gt;Here's an index of the poll results where I asked on debian-user mailing
list what their favorite FLOSS is. It's a yearly poll which has been
running for a few years now, and is now defunct:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2009/11/msg00930.html"&gt;2009&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2008/12/msg00031.html"&gt;2008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2007/12/msg00144.html"&gt;2007&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2006/11/msg00305.html"&gt;2006&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2005/11/msg03609.html"&gt;2005&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category></entry><entry><title>Barry White's top tracks</title><link href="http://tshepang.net/barry-whites-top-tracks" rel="alternate"></link><updated>2013-10-02T23:31:13+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:barry-whites-top-tracks</id><summary type="html">&lt;div class="section" id="points"&gt;
&lt;h2&gt;6 &lt;a class="reference external" href="http://tshepang.net/simple-rating-system-for-music"&gt;points&lt;/a&gt;:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1 landmark (&lt;em&gt;Bring Back My Yesterday&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;1 masterpiece (&lt;em&gt;Let Me Live My Life Lovin' You Babe&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;1 excellent work (&lt;em&gt;Just the Way You Are&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="music"></category></entry><entry><title>BioShock</title><link href="http://tshepang.net/bioshock" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:bioshock</id><summary type="html">&lt;p&gt;I enjoyed a &lt;a class="reference external" href="http://www.wired.com/gamelife/2008/02/ken-levine-how"&gt;negative review of BioShock&lt;/a&gt; partly because everything
else I've read so far was full of praise, and partly because,
immersive as it is, really is overrated. For one, I couldn't believe
that I was restricted to basically one environment, and I got so lost
around the repetitive-looking environment just as I was in &lt;em&gt;Halo:
Combat Evolved&lt;/em&gt; (a superior game, even considering it was released
over 5 years earlier).&lt;/p&gt;
&lt;p&gt;What I like about the game:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;an amazing array of genetic weapons&lt;/li&gt;
&lt;li&gt;great art direction&lt;/li&gt;
&lt;li&gt;the fearsome Big Daddies&lt;/li&gt;
&lt;li&gt;an appealing gloomy storyline of genetic engineering gone awry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The whole thing did alert me what a tremendously useful tool 3D games
could be as exploration tools to unfamiliar worlds.  Note that I've
lived through such an experience with the vastly underrated &lt;em&gt;Conflict:
Desert Storm&lt;/em&gt;.&lt;/p&gt;
</summary><category term="gaming"></category></entry><entry><title>Body Bags</title><link href="http://tshepang.net/body-bags" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:body-bags</id><summary type="html">&lt;p&gt;I was reading &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Body_Bags_(comics)"&gt;Body Bags comic&lt;/a&gt; early this morning and it's
devastatingly unique and fresh, with some seriously interesting
characters. Nice stuff. Am not big on comics, but if they tend to come
like this, I'll definitely get hooked.&lt;/p&gt;
</summary><category term="comic"></category></entry><entry><title>evil edits</title><link href="http://tshepang.net/evil-edits" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:evil-edits</id><summary type="html">&lt;p&gt;It gets disgusting when re-releases, usually in a form of 'the best of
X', gets their tracks' lengths reduced, all to make space for a larger
number of tracks on that album. The worst such a situation is in the
case of Don't Leave Me This Way (Harold Melvin &amp;amp; the Blue Notes) which
had a release that cut it to about 5 minutes of its original 10 minutes,
effectively getting rid of the most exciting part of that track, the
climactic second act. A similar thing happened to Brenda Fassie's
Weekend Special whose climax was also mercilessly cut in her Greatest
Hits album.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>GameSpy's 'BioShock' review</title><link href="http://tshepang.net/gamespys-bioshock-review" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:gamespys-bioshock-review</id><summary type="html">&lt;p&gt;Last year, I got seduced by GameSpy with their &lt;a class="reference external" href="http://goty.gamespy.com/2006/"&gt;2006 review&lt;/a&gt;, and this
time around, I got seduced yet again by their review of &lt;a class="reference external" href="http://goty.gamespy.com/2007/special/22.html"&gt;BioShock&lt;/a&gt;.
Going through their various categories, that game got mentioned more
than twice, being among the top10 PC games, winning Art Direction award,
and then, in what truly caught my attention, winning the Best Story
award. The review makes me salivate. [&lt;a class="reference external" href="http://tshepang.net/bioshock"&gt;update&lt;/a&gt;]&lt;/p&gt;
</summary><category term="gaming"></category></entry><entry><title>Halo 3</title><link href="http://tshepang.net/halo-3" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:halo-3</id><summary type="html">&lt;p&gt;I could not spot a real improvement from Halo 2, bar the hyper-realistic
environments of Flood-infested walls, the addition of some vehicles, and
the ability to dislodge heavy guns. It seems most effort went into just
the environments while ignoring gameplay and a fresh and good storyline.
It's quite a pity because the first Halo was such an epic achievement,
while the second, while unable to replicate the first's grandeur, had
quite a few innovations.&lt;/p&gt;
</summary><category term="gaming"></category></entry><entry><title>hip-hop greats</title><link href="http://tshepang.net/hip-hop-greats" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:hip-hop-greats</id><summary type="html">&lt;div class="section" id="landmarks"&gt;
&lt;h2&gt;landmarks&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;MC's Act Like They Don't Know (KRS-One and DJ Premier)&lt;/li&gt;
&lt;li&gt;My Downfall (Notorious B.I.G.)&lt;/li&gt;
&lt;li&gt;Nas is Like (Nas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="masterpieces"&gt;
&lt;h2&gt;masterpieces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Animal in Man (Dead Prez)&lt;/li&gt;
&lt;li&gt;Bad Dreams (Busta Rhymes)&lt;/li&gt;
&lt;li&gt;Doggy Dogg World (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;G Funk Intro (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Gz &amp;amp; Hustlas (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Hip-Hop (Dead Prez)&lt;/li&gt;
&lt;li&gt;In the Music (The Roots)&lt;/li&gt;
&lt;li&gt;Serial Killa (Snoop Dogg)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="excellent"&gt;
&lt;h2&gt;excellent&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Beware (Big Pun)&lt;/li&gt;
&lt;li&gt;Cowboys (Fugees)&lt;/li&gt;
&lt;li&gt;Distortion to Static (The Roots)&lt;/li&gt;
&lt;li&gt;Don't Feel Right (The Roots)&lt;/li&gt;
&lt;li&gt;8 Mile (Eminem)&lt;/li&gt;
&lt;li&gt;Elevators (Outkast)&lt;/li&gt;
&lt;li&gt;For All My Niggaz &amp;amp;&amp;amp; Bitches (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Fu-Gee-La (Fugees)&lt;/li&gt;
&lt;li&gt;Gin And Juice (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Hard Knock Life (Jay-Z)&lt;/li&gt;
&lt;li&gt;Hold (KRS-One)&lt;/li&gt;
&lt;li&gt;How Many MC's (KRS-ONE)&lt;/li&gt;
&lt;li&gt;How Many Mics (Fugees)&lt;/li&gt;
&lt;li&gt;I'm A African (Dead Prez)&lt;/li&gt;
&lt;li&gt;It's A Party (Busta Rhymes feat. Zhane)&lt;/li&gt;
&lt;li&gt;Kick in the Door (Notorious B.I.G.)&lt;/li&gt;
&lt;li&gt;Mask, The (Fugees)&lt;/li&gt;
&lt;li&gt;Mathematics (DJ Premier, Mos Def)&lt;/li&gt;
&lt;li&gt;Mind Sex (Dead Prez)&lt;/li&gt;
&lt;li&gt;Miss Jackson (Outkast)&lt;/li&gt;
&lt;li&gt;Micranots? (Micranots)&lt;/li&gt;
&lt;li&gt;Murder Was the Case (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Next Movement (The Roots)&lt;/li&gt;
&lt;li&gt;Old School (Tupac)&lt;/li&gt;
&lt;li&gt;Ooh! (De la Soul ft. RedMan)&lt;/li&gt;
&lt;li&gt;Track 15, album: Slum (Slum Village)&lt;/li&gt;
&lt;li&gt;Pump Pump (Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Ready Or Not (Fugees)&lt;/li&gt;
&lt;li&gt;Respiration (Blackstar feat. Common)&lt;/li&gt;
&lt;li&gt;Respond/React (The Roots)&lt;/li&gt;
&lt;li&gt;Score, The (Fugees)&lt;/li&gt;
&lt;li&gt;Section (The Roots)&lt;/li&gt;
&lt;li&gt;Shook Ones Pt. II (Mobb Deep)&lt;/li&gt;
&lt;li&gt;6th Sense (Common and DJ Premier)&lt;/li&gt;
&lt;li&gt;Still (Dr Dre feat. Snoop Dogg)&lt;/li&gt;
&lt;li&gt;Tell Me Something (Arrested Development)&lt;/li&gt;
&lt;li&gt;Ten Crack Commandments (Notorious B.I.G.)&lt;/li&gt;
&lt;li&gt;They Schools (Dead Prez)&lt;/li&gt;
&lt;li&gt;Thirty Three Threes (Canibus)&lt;/li&gt;
&lt;li&gt;Throw Yo Hands in the Air (Cypress Hill)&lt;/li&gt;
&lt;li&gt;Tradin' War Stories (Tupac)&lt;/li&gt;
&lt;li&gt;Travellin' Man (DJ Honda and Mos Def)&lt;/li&gt;
&lt;li&gt;Way I Am, The (Eminem)&lt;/li&gt;
&lt;li&gt;Woo-Ha (Busta Rhymes)&lt;/li&gt;
&lt;li&gt;Wot The Do (The Roots)&lt;/li&gt;
&lt;li&gt;You Came Up (Big Pun)&lt;/li&gt;
&lt;li&gt;You'll Find A Way (Dead Prez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="special-mentions"&gt;
&lt;h2&gt;special mentions&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Life Goes On (Tupac) - chiefly for being an ex-landmark; am not
really enjoying no more&lt;/li&gt;
&lt;li&gt;Quiet Storm (Mobb Deep feat. Lil' Kim) - chiefly for having a really
favorite chorus by the Kim lady&lt;/li&gt;
&lt;li&gt;Shove This Jay-Oh-Bee (Canibus) - me loving the so-alive beat&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="hip-hop"></category><category term="music"></category></entry><entry><title>Ma-Brrr</title><link href="http://tshepang.net/ma-brrr" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:ma-brrr</id><summary type="html">&lt;p&gt;We all know that each repeat viewing of a movie is a different
experience. You can say the same with a stage play, except that it's
never the same thing. I'm here referring to MaBrr (there is not even one
credible site I found with a few minutes of search), a musical play
currently seen at State Theatre, Pretoria. It's about the life and
career of Brenda Fassie, a deceased South African vocalist, who was
arguably the most popular of the country's artist in history.&lt;/p&gt;
&lt;p&gt;The first night was the best experience I've so far had in my stage play
experience. It was electrifying and the audience agreed with me. A few
goosebumps here and there. It's amazing how larger-than-life one person
can be made. It brought a new appreciation of South African art (and
abilities), that there's such a rich culture to export.&lt;/p&gt;
&lt;p&gt;So what are some the elements that made me so excited, the first time
around:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lead performance: I gained new-found respect for Lesego Motsepe, who
is famous for her long career in Isidingo, a soapie generally
regarded as South Africa's best; the director even mentioned that
someone stated that she wasn't LIKE Brenda, but rather, she WAS
Brenda; the result of the voice training she went through was
amazing, because she really sounded like her character&lt;/li&gt;
&lt;li&gt;music: the compositions were remixed, and the live band bringing it
alive rocked; I wish it would get recorded because some of it were
improvements on the originals&lt;/li&gt;
&lt;li&gt;dancers: though the dancing merely okay, their energy was tops,
especially the guys, and the quality of the choreography also helped&lt;/li&gt;
&lt;li&gt;costume design: what the dancers had to wear was mostly impressive,
and often offered an accurate display of dressing styles through a
bit of South Africa's past&lt;/li&gt;
&lt;li&gt;backing vocalists: wonderful, notably the fat guy, who had a tiny
moment to act, which was hilarious&lt;/li&gt;
&lt;li&gt;extra emotion: well, Bongani Fassie, Brenda's son, pitched on stage
unscheduled, and even joined the lead performer to sing &amp;quot;Too Late for
Mama&amp;quot;&lt;/li&gt;
&lt;li&gt;miscellaneous: a bunch of scenes and moments are too many to mention&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The fact that this was opening night may have helped a lot, as well as
close to sold-out venue. Now, the shitty thing about stage is that such
moments can't be replicated, and even though it may have been recorderd,
it's just not the same.&lt;/p&gt;
&lt;p&gt;The revisit was something else. The attendance was really bad this time
around (a Thursday after Friday's opening night):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lead performance: she was probably tired and/or discouraged by the
small and unresponsive crowd; she mostly didn't even try to sound
like Brenda&lt;/li&gt;
&lt;li&gt;music: there's wasn't a degradation, so kudos!&lt;/li&gt;
&lt;li&gt;dancing: less energy, and that there were fallen beads on stage
probably didn't help&lt;/li&gt;
&lt;li&gt;costume design: same shit, so nothing to say here&lt;/li&gt;
&lt;li&gt;backing vocalists: wonderful, but the fat guy was just reciting his
words this time&lt;/li&gt;
&lt;li&gt;extra emotion: well, the Bongani Fassie thing can't be replicated&lt;/li&gt;
&lt;li&gt;miscellaneous: no surprises, nothing new worth mentioning&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="update"&gt;
&lt;h2&gt;update&lt;/h2&gt;
&lt;p&gt;I went to see this for the third time, this time on a Saturday, so the
audience was much bigger than last time, and the show was far better,
making me a little bit obsessed.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lead performance: she did better than last time, but maybe not as
good as the first night&lt;/li&gt;
&lt;li&gt;music: I recall enjoying the previous moments better, maybe because I
got used to it&lt;/li&gt;
&lt;li&gt;dancing: the energy seemed as high as the first time around, and I
enjoyed it more (I really the supercool guys at the jazz club)&lt;/li&gt;
&lt;li&gt;costume design: same shit, so nothing to say here&lt;/li&gt;
&lt;li&gt;backing vocalists: the nice fat guy was replaced by a less
interesting one&lt;/li&gt;
&lt;li&gt;extra emotion: I kept getting (unbearable) attention from one dancer,
since I was on the front row seats; I guess she wanted to steal the
show, and I didn't allow her (she was unrelenting) so I shifted my
attention away&lt;/li&gt;
&lt;li&gt;miscellaneous: the kids called up on stage were much more fun than on
previous occasions&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="music"></category><category term="stage"></category></entry><entry><title>me loves Cherry Poptart</title><link href="http://tshepang.net/me-loves-cherry-poptart" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:me-loves-cherry-poptart</id><summary type="html">&lt;p&gt;This morning I read &amp;quot;Cherry Does the Time Warp&amp;quot;, part of the funny and
politically satirical adult comic series, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Cherry_(comics)"&gt;Cherry&lt;/a&gt;. It's not the first
time I've read a Cherry installment, but this specific one parodies some
characters in history and popular media in a fun manner, but it's
highlight is Cherry's encounter with her teenage, sexually-inept mom
(and you can imagine what transpires).&lt;/p&gt;
</summary><category term="comic"></category></entry><entry><title>SABC 1 glory</title><link href="http://tshepang.net/sabc-1-glory" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:sabc-1-glory</id><summary type="html">&lt;p&gt;I got captivated by the new SABC 1 theme presentation (for lack of a
better name), which is a fusion of computer animation and live footage
with reddish filtering, an artistic impression reminding me of the
visual landmark that is 300. It's however not nearly as popular or
memorable as the previous theme which portrayed South African Black and
White people having switched roles (as in White people living in
townships and Black people leading a more affluent lifestyle). This, the
latter, is an interesting play on the stereotypical both races have on
each other and was notably also because of the superb camerawork and
some interesting acting. It's interesting as regards the former for I
thought the latter couldn't be bettered.&lt;/p&gt;
</summary><category term="tv"></category></entry><entry><title>simple rating system for music</title><link href="http://tshepang.net/simple-rating-system-for-music" rel="alternate"></link><updated>2013-10-02T23:26:53+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:simple-rating-system-for-music</id><summary type="html">&lt;p&gt;I use a simplistic point system to rate top music tracks:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;landmark = 3 points&lt;/li&gt;
&lt;li&gt;masterpiece = 2 points&lt;/li&gt;
&lt;li&gt;excellent work = 1 point&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wonder what others use and am too lazy to search.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>Too Long In Slavery</title><link href="http://tshepang.net/too-long-in-slavery" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:too-long-in-slavery</id><summary type="html">&lt;p&gt;The mood of &lt;a class="reference external" href="http://www.youtube.com/watch?v=dTuLVDa916U"&gt;Too Long In Slavery&lt;/a&gt;
(performed by &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Culture_(band)"&gt;Culture&lt;/a&gt; and found in &lt;em&gt;Greatest Hits - The Frontlne Years&lt;/em&gt;)
matches it's title pretty well
(the vocalist sounds like he's in pain and so is the melody).
The track still sounds is near-playful,
though it has nearly brought me to tears on a few occasions;
it's a powerful delivery of a painful message.
It's my favorite among the group's work.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>top music tracks</title><link href="http://tshepang.net/top-music-tracks" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:top-music-tracks</id><summary type="html">&lt;p&gt;All these are landmarks (i.e. beyond masterpiece level):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Bring Back My Yesterday (Barry White)&lt;/li&gt;
&lt;li&gt;Confusion (Fela Kuti)&lt;/li&gt;
&lt;li&gt;Crying Guitar (The Movers)&lt;/li&gt;
&lt;li&gt;Diamante (Zucchero)&lt;/li&gt;
&lt;li&gt;Django's Castle (Eddie Harris)&lt;/li&gt;
&lt;li&gt;Do You Feel Like We Do (Peter Frampton)&lt;/li&gt;
&lt;li&gt;Gauteng (Miriam Makeba)&lt;/li&gt;
&lt;li&gt;Give Me (Burning Spear)&lt;/li&gt;
&lt;li&gt;Igbe (Fela Kuti)&lt;/li&gt;
&lt;li&gt;Jikijela (Letta Mbuli)&lt;/li&gt;
&lt;li&gt;Lady (Fela Kuti)&lt;/li&gt;
&lt;li&gt;My Love is Free (Double Exposure)&lt;/li&gt;
&lt;li&gt;No Woman, No Cry (Bob Marley)&lt;/li&gt;
&lt;li&gt;Old Marcus Garvey (Burning Spear)&lt;/li&gt;
&lt;li&gt;Tomorrow is Forever (Dolly Parton)&lt;/li&gt;
&lt;li&gt;With or Without You (U2)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This list is far from complete and notably won't include tracks from
Hip-Hop and House for they just don't fit, maybe as a matter of
prejudice, as in, &amp;quot;how could I append KRS-One next to the mighty Fela
Kuti&amp;quot;, or maybe such genres are simply incomparable.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>Toxic</title><link href="http://tshepang.net/toxic" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:toxic</id><summary type="html">&lt;p&gt;I had developed a negative attitude towards Britney Spear's music due
bad quality (though to be fair, I haven't listened to much of her work,
all but the most popular few tracks). But there is one particular gem, &lt;em&gt;Toxic&lt;/em&gt;,
and I was surprised to find that &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Toxic_(song)"&gt;it's critically acclaimed&lt;/a&gt;,
especially since I reduced it to a guilty pleasure.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>Up With Donald Byrd</title><link href="http://tshepang.net/up-with-donald-byrd" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-14:up-with-donald-byrd</id><summary type="html">&lt;p&gt;I thoroughly enjoyed Donarl Byrd's superb album, &amp;quot;Up With Donald Byrd&amp;quot;,
most especially the masterpiece House of the Rising Sun and My Babe. I
have listened to a few the guy's albums and nothing quite comes close,
in fact some are so bad that it's strange it's the same artist.&lt;/p&gt;
&lt;p&gt;Anyways, I went onto the interwebs looking for like-minded people and
found one who &lt;a class="reference external" href="http://www.answers.com/topic/up-with-donald-byrd-1964-album-by-donald-byrd"&gt;disagreed&lt;/a&gt;, calling it forgettable. Either that's a
critic with a more sophisticated taste and much more listening
experience, or she's got twisted taste. I was actually surprised since
I'm even tempted to call this the best Jazz album yet!&lt;/p&gt;
</summary><category term="jazz"></category><category term="music"></category></entry><entry><title>links 2011-01-10</title><link href="http://tshepang.net/links-2011-01-10" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-10:links-2011-01-10</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.edge.org/3rd_culture/paul07/paul07_index.html"&gt;the greatest threat to religion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://commonsenseatheism.com/?p=13688"&gt;a nice collection of links&lt;/a&gt; regarding scientific studies of
religion&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://commonsenseatheism.com/?p=9539"&gt;the single most beneficial thing we can do in order to make the
world better place&lt;/a&gt;, according to Alonzo Fyfe&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lesswrong.com/lw/373/how_to_save_the_world/"&gt;How to Save the World&lt;/a&gt; (&lt;a class="reference external" href="http://commonsenseatheism.com/?p=12297"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;among the most controversial of Alonzo Fyfe's posts (judging by the
huge number of comments), &lt;a class="reference external" href="http://commonsenseatheism.com/?p=9537"&gt;Tivial Hobbies&lt;/a&gt; talks about the
uselessness of things like watching sports and playing video games&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>factors affecting choice of tools</title><link href="http://tshepang.net/factors-affecting-choice-of-tools" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-06:factors-affecting-choice-of-tools</id><summary type="html">&lt;p&gt;&lt;strong&gt;technical&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;speed&lt;/li&gt;
&lt;li&gt;resource-usage&lt;/li&gt;
&lt;li&gt;features&lt;/li&gt;
&lt;li&gt;stability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;non-technical&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ease-of-use&lt;/li&gt;
&lt;li&gt;polish&lt;/li&gt;
&lt;li&gt;standards-compliance&lt;/li&gt;
&lt;li&gt;popularity&lt;/li&gt;
&lt;li&gt;politics&lt;/li&gt;
&lt;li&gt;support&lt;/li&gt;
&lt;li&gt;familiarity&lt;/li&gt;
&lt;li&gt;taste&lt;/li&gt;
&lt;li&gt;monetary cost&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="untagged"></category></entry><entry><title>blog of note: We'll See (Matt Zimmerman)</title><link href="http://tshepang.net/blog-of-note-well-see-matt-zimmerman" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-12-03:blog-of-note-well-see-matt-zimmerman</id><summary type="html">&lt;p&gt;I'm a regular reader of &lt;a class="reference external" href="http://planet.debian.org/"&gt;Planet Debian&lt;/a&gt;, so I frequently bump onto Matt
Zimmerman's blog. This a Debian Developer who also happens to do paid
work on Ubuntu as well (employed by Canonical). He writes clearly and
with a sober and mature tone. It's very interesting when you see a
software developer conversant with non-technical stuff, and able to
write about it so well.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I started with one post with an obviously interesting title, &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/06/12/how-to-decide-what-to-read-and-what-not-to-read/"&gt;How to
decide what to read (and what not to read)?&lt;/a&gt;&amp;quot;. This piqued my
interest also because I've been thinking about &lt;a class="reference external" href="http://tshepang.net/where-i-live-on-the-web"&gt;my own activities on
the web&lt;/a&gt; too. Also, his mention of News closely match mine, other
than that I'm simply (mostly) not interested in traditional big news
(presidents approves blah) and tabloids, and normally get enough of a
dose from co-workers and friends, and mostly face-to-face.&lt;/li&gt;
&lt;li&gt;This led to another, &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/04/06/breadth-and-depth/"&gt;Breadth and depth&lt;/a&gt;&amp;quot;, in which he touches on
the social effects of web-enabled technology. This is a topic that
has been beaten to death of course, but he fortunately keeps his
contribution very brief and fresh, and I like that he doesn't claim
to offer any solutions, but merely exploring them.&lt;/li&gt;
&lt;li&gt;And there was &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2009/05/03/internet-discussion-trends/"&gt;Internet discussion trends: from Usenet to
micro-blogs&lt;/a&gt;&amp;quot;, where he discussed various ways forms of on-line
discussion, which is the first topic of its type I've seen yet.&lt;/li&gt;
&lt;li&gt;He even dabbled with a bit of poetry in &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/12/02/breathing-information/"&gt;Breathing information&lt;/a&gt;&amp;quot;.
Nice attempt.&lt;/li&gt;
&lt;li&gt;He also displays an insightful understanding of what package
management in &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/07/06/weve-packaged-all-of-the-free-software-what-now/"&gt;We've packaged all of the free software...what
now?&lt;/a&gt;&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's a whole bunch of gorgeous-sounding posts that I didn't care to
read yet, and hope to keep the above list updated when I do.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>great customer service</title><link href="http://tshepang.net/great-customer-service" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-12-01:great-customer-service</id><summary type="html">&lt;p&gt;So these guys at &lt;a class="reference external" href="http://maps.google.com/maps?q=-25.776454,28.349731"&gt;BMW Bavarian East Pretoria&lt;/a&gt; (it has since been closed),
a motorbike dealership, got me impressed with their great customer service.
The standard procedure is to lend customers a bike for a few hours to use
during the day, which normally happens when one takes the bike in for service.
My &lt;a class="reference external" href="http://en.wikipedia.org/wiki/BMW_F650CS"&gt;F650CS&lt;/a&gt; was giving me some trouble which actually perplexed them for
more than those few hours... a few weeks actually.&lt;/p&gt;
&lt;p&gt;So why I says they rock:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I wasn't charged for the extra (perhaps dozens) hours of labour.&lt;/li&gt;
&lt;li&gt;I was lent a bike (actually 3, since the troubleshooting went for so
long that they needed to sell 2 of those bikes in the meanwhile).&lt;/li&gt;
&lt;li&gt;Not sure if I should call this negligence, but there seems to be some
deep trust these guys have for their customers, because no one cared
to check if I could ride the variety of bikes they lent me. That's
gorgeous, especially considering that one of the bikes they lent me was
the superhot &lt;a class="reference external" href="http://en.wikipedia.org/wiki/BMW_F800S"&gt;BMW F800S&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course there is also the element of them encouraging loyalty,
but this still goes beyond the normal &amp;quot;customer is king&amp;quot; routine.&lt;/p&gt;
</summary></entry><entry><title>Obama administration not too shabby</title><link href="http://tshepang.net/obama-administration-not-too-shabby" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-23:obama-administration-not-too-shabby</id><summary type="html">&lt;p&gt;Given that I have very little interest in American politics, I find
&lt;a class="reference external" href="http://whatthefuckhasobamadonesofar.com/"&gt;some of the Obama administration's achievements&lt;/a&gt; impressive (with
great help from a refreshing presentation). (&lt;a class="reference external" href="http://commonsenseatheism.com/?p=12294"&gt;via&lt;/a&gt;)&lt;/p&gt;
</summary></entry><entry><title>Igalia rocks!</title><link href="http://tshepang.net/igalia-rocks" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-21:igalia-rocks</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Every person joining us is expected to evolve through the different
stages: from employee to pre-partner and finally to partner, a
co-owner of the company.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.igalia.com/about-us/internal-responsibility"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just one of the things that make &lt;a class="reference external" href="http://www.igalia.com/"&gt;Igalia&lt;/a&gt; a very attractive employer...
just a step away from being &lt;a class="reference external" href="http://www.software.coop/info/coopdev.html/"&gt;a proper worker coop&lt;/a&gt;.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>developer of note: Neil Williams</title><link href="http://tshepang.net/developer-of-note-neil-williams" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-20:developer-of-note-neil-williams</id><summary type="html">&lt;p&gt;For some years now, Neil Williams has been working on Emdebian (embedded
Debian). It's a Debian sub-project where normal Debian packages are
stripped of certain things like documentation and translations, making
it more suitable for space-constrained embedded devices. He's now
started &lt;a class="reference external" href="http://www.linux.codehelp.co.uk/serendipity/index.php?/archives/217-guid.html"&gt;a series of posts&lt;/a&gt; explaining how it works... and it seems an
elegant system actually.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>it's less work building from a VCS than from a tarball</title><link href="http://tshepang.net/its-less-work-building-from-a-vcs-than-from-a-tarball" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-20:its-less-work-building-from-a-vcs-than-from-a-tarball</id><summary type="html">&lt;p&gt;tarball:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;find the website&lt;/li&gt;
&lt;li&gt;find download link&lt;/li&gt;
&lt;li&gt;download the tarball&lt;/li&gt;
&lt;li&gt;navigate to the tarball (using a GUI file browser)&lt;/li&gt;
&lt;li&gt;extract the tarball (using a GUI extractor)&lt;/li&gt;
&lt;li&gt;navigate to the extracted directory (using the shell)&lt;/li&gt;
&lt;li&gt;and finally... &lt;tt class="docutils literal"&gt;$&amp;nbsp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Revision_control"&gt;VCS&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;find the website&lt;/li&gt;
&lt;li&gt;find clone link&lt;/li&gt;
&lt;li&gt;clone the repository&lt;/li&gt;
&lt;li&gt;navigate to the cloned directory (using the shell)&lt;/li&gt;
&lt;li&gt;and finally... &lt;tt class="docutils literal"&gt;$&amp;nbsp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, that's 2 extra steps for going the tarball way.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>when it seems OK to compromise on software freedom</title><link href="http://tshepang.net/when-it-seems-ok-to-compromise-on-software-freedom" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-05:when-it-seems-ok-to-compromise-on-software-freedom</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://stackexchange.com/sites"&gt;Stack Exchange&lt;/a&gt; is a network of websites built to make the internet
better by providing quality Answers to Questions on specific topics. Its
flagship product is &lt;a class="reference external" href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;, which is likely the single most
important programming resource on the web. Part of the reason of this
site's success is the excellent community built around it.&lt;/p&gt;
&lt;p&gt;Among the sites that &lt;a class="reference external" href="http://stackexchange.com/sites"&gt;Stack Exchange&lt;/a&gt; has built is &lt;a class="reference external" href="http://unix.stackexchange.com/"&gt;Unix &amp;amp; Linux&lt;/a&gt;, and
it's stated goal is to be THE place to get answers on non-programming
topics related to Unix and Linux-based systems. Note that this family of
comupter system is highly fragmented; there's literally hundreds of
them, though most can further be classified under few families:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Debian (includes Ubuntu)&lt;/li&gt;
&lt;li&gt;RedHat (includes SuSE)&lt;/li&gt;
&lt;li&gt;BSD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given that there's a lot of similarities between them, to have one
unified place to ask questions about each of them rocks.&lt;/p&gt;
&lt;p&gt;Now that's well and good, until one realises that these StackExchange
sites run on non-FLOSS. Now, consider that there are FLOSS alternatives
to these. Debian folk maintain and participate in an instance of one
such alternative, named &lt;a class="reference external" href="http://shapado.com/"&gt;Shapado&lt;/a&gt;. This instance is a place where one
can ask Debian-related questions, and is in essence a competitor to
StackExchange's Unix &amp;amp; Linux site, and this had me in a seriously
painful dilemma: do I continue using the superior but non-FLOSS service
or the inferior but FLOSS Shapado. The following evaluation makes the
choice real easy:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ask.debian.net/"&gt;Debian Q&amp;amp;A&lt;/a&gt;: FLOSS (+1) —&amp;gt; &lt;strong&gt;total=1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/"&gt;Unix &amp;amp; Linux&lt;/a&gt;: better community (+1), better site experience (+1),
caters to more than just Debian (+1) —&amp;gt; &lt;strong&gt;total=3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="non-FLOSS"></category></entry><entry><title>Tumblr suckage</title><link href="http://tshepang.net/tumblr-suckage" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-02:tumblr-suckage</id><summary type="html">&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;: after an unbearably-long downtime, I decided to make the
switch, this time to &lt;strong&gt;Posterous&lt;/strong&gt; (now-defunct).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;As much as I love Tumblr, I got a few complaints:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;performance for some tasks is really bad; the most annoying one is
the time it takes for the Edit button to appear&lt;/li&gt;
&lt;li&gt;search is real bad; often it doesn't find stuff I know is there;
sometimes I have to re-run the search before seeing results&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pages&lt;/strong&gt;: I can't use Markdown to edit them&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pages&lt;/strong&gt;: I'm not presented with the Edit button at all; I instead
have to do it via the Dashboard, then click Customize, then click
Pages, then scroll and find the page I wanna edit!&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://royal.pingdom.com/2010/12/17/the-most-reliable-and-unreliable-blogging-services-2/"&gt;horrible uptime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm not sure if these problems will be fixed (I've reported one bug,
without any real feedback). The collective of these problems makes me
wanna search for another blog host. The challenge with the move is doing
the laborious internal re-linking over again.&lt;/p&gt;
</summary><category term="blogging"></category></entry><entry><title>abusing the computer 'genius'</title><link href="http://tshepang.net/abusing-the-computer-genius" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-28:abusing-the-computer-genius</id><summary type="html">&lt;p&gt;Here's a part-fictional account of events that are largely my fault:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Friend got a new laptop and I elect to install Debian (or whatever OS
I find suitable at that moment) side-by-side with the pre-installed
Windows.&lt;/li&gt;
&lt;li&gt;I show Friend around since he finds the interface unfamiliar, and I
get a dry mouth explaining the advantages, while trying hard to avoid
Windows bashing. He sort of agrees.&lt;/li&gt;
&lt;li&gt;I upgrade it later on (mainly because I'm hoping the new hotness will
get their wireless networking hardware working).&lt;/li&gt;
&lt;li&gt;The upgrade breaks something else in the process, and I spend hours
fixing it...&lt;/li&gt;
&lt;li&gt;Only to have them spend their computing lives in Windows since it's
more familiar (as well as the fact the software that came with their
cell-phone doesn't run anywhere else).&lt;/li&gt;
&lt;li&gt;We computer 'geniuses' all know that Windows has a nasty habit of
overwriting the boot partition such that an already-installed OS is
no longer bootable, so I gotta come over, to make it bootable again
(and this is made worse by the fact that reinstalls are pretty commom
when Windows gives trouble).&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="untagged"></category></entry><entry><title>Luke's brain</title><link href="http://tshepang.net/lukes-brain" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-20:lukes-brain</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;My brain did not evolve to have accurate intuitions about what is
morally right or wrong or rational. My brain evolved to eat and
fuck.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://commonsenseatheism.com/?p=12106"&gt;In Defense of Radical Value Pluralism&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another gem by the &lt;a class="reference external" href="http://tshepang.net/common-sense-atheism-rocks"&gt;fabulous&lt;/a&gt; Luke Muehlhauser.
The post is a fun read; check it out.&lt;/p&gt;
</summary><category term="ethics"></category><category term="humor"></category><category term="quote"></category></entry><entry><title>great honors for Donald Knuth</title><link href="http://tshepang.net/great-honors-for-donald-knuth" rel="alternate"></link><updated>2013-10-13T14:03:51+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-19:great-honors-for-donald-knuth</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I would say he is man of a stature similar to the stature of
Leonard Euler in mathematics. Such men are not born every
century...&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.softpanorama.org/People/Knuth/index.shtml"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Such praise isn't given everyday.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>wajig 2.0.50 released</title><link href="http://tshepang.net/wajig-2050-released" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-13:wajig-2050-released</id><summary type="html">&lt;p&gt;Not sure, but I think this is &lt;a class="reference external" href="http://lists.debian.org/debian-devel-changes/2010/10/msg00611.html"&gt;my proudest release yet&lt;/a&gt; of wajig so
far. Among other things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I cleaned up the Debian packaging with &lt;a class="reference external" href="http://savetheions.com/2010/01/20/packaging-python-applicationsmodules-for-debian/"&gt;some great help&lt;/a&gt;. I promise
that it was seriously ugly. I guess nobody was motivated enough to
clean it up... including me.&lt;/li&gt;
&lt;li&gt;I added a fresh help system, and cleaned up the documentation
machinery while at it.&lt;/li&gt;
&lt;li&gt;Increased the use of aptitude, where it makes sense.&lt;/li&gt;
&lt;li&gt;Made some commands redundant by introducing better ones.&lt;/li&gt;
&lt;li&gt;Some polishing (consistency fixes).&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="wajig"></category></entry><entry><title>a talk on what software engineering should be</title><link href="http://tshepang.net/a-talk-on-what-software-engineering-should-be" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-01:a-talk-on-what-software-engineering-should-be</id><summary type="html">&lt;p&gt;I really enjoyed &lt;a class="reference external" href="http://confreaks.net/videos/282-lsrc2010-real-software-engineering"&gt;this humorous, eye-opening, and informative talk&lt;/a&gt;
that draws parallels between software and traditional engineering
disciplines. The presenter really did good research to prepare for the
presentation (which he heartily enjoyed), but unfortunately flies too
quick near the end when realizing he's out of time, without properly
explaining what he proposes as &lt;strong&gt;real&lt;/strong&gt; software engineering.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>untrustworthy brains</title><link href="http://tshepang.net/untrustworthy-brains" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-30:untrustworthy-brains</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;The shortness of our lifespans makes us magnify the events we
experience and diminish the ones we have access to only via books.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://etbe.coker.com.au/2008/09/11/islamophobia/#comment-15823"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think this applies even if all these events are limited to personal
experience, where the more recent experiences ones too often overshadow
the older ones... &amp;quot;That was the best sex ever!&amp;quot;.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>my Debian package management setup</title><link href="http://tshepang.net/my-debian-package-management-setup" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-28:my-debian-package-management-setup</id><summary type="html">&lt;p&gt;Much of this is obsolete: I no longer use &lt;tt class="docutils literal"&gt;debmirror&lt;/tt&gt; and no longer
keep the entire binary repository of i386 arch.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;There's a useful tool in Debian named debmirror. It's function is to
create and manage a partial copy of an official Debian repository, and I
use it to create 2 repos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;an entire i386 Debian repo for &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Squeeze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an entire source Debian repo for &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Squeeze&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How this works is that I'd run the following command
(an example for the source repo):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/usr/bin/debmirror
 --verbose
 --progress
 --host=ftp.sun.ac.za
 --passive
 --dist=squeeze
 --root=ftp/debian
 --section=main
 --method=ftp
 --arch=none
 /home/wena/.repo_src
&lt;/pre&gt;
&lt;p&gt;(look at debmirror's manpage to see what all those options mean)&lt;/p&gt;
&lt;p&gt;The result is that I'll be having ~30GB of Debian locally (for a
comparison, see &lt;a class="reference external" href="http://www.debian.org/mirror/size"&gt;total Debian archive size&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;That's a lot of data, most of which I'll never use, but:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I do this as a matter of convenience; I want to be able to install
anything when I'm having a fresh machine, and internet access is not
yet fast and cheap in South Africa.&lt;/li&gt;
&lt;li&gt;I also like to mess around with the packaging system, deleting and
reinstalling packages on a whim, and I don't want to be waiting for
some file to download when I do that kind of tinkering.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, since it's ridiculous to do this every time just to have the most
recent packages (a weekly update is maybe &amp;gt;1GB of data), I've found
another wonderful tool named reprepro. It's purpose is to create a
custom (unofficial) Debian repo. It's a far more advanced tool than
debmirror, and I think it can do what debmirror does (but I don't yet
care to learn how).&lt;/p&gt;
&lt;p&gt;Moving on, here's the relevant entries from my /etc/apt/sources.list file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# local repos (debmirror)&lt;/span&gt;
deb file:/home/wena/.repo_bin sid main
deb-src file:/home/wena/.repo_src sid main

&lt;span class="c"&gt;# local repo (reprepro)&lt;/span&gt;
deb file:/home/wena/.repo_local cache main

&lt;span class="c"&gt;# remote repo&lt;/span&gt;
deb ftp://ftp.sun.ac.za/ftp/debian/ sid main non-free contrib
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, what I do on a semi-regular basis is run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ wajig update &amp;amp;&amp;amp; wajig upgrade
&lt;/pre&gt;
&lt;p&gt;The newly-updated packages are stored in a cache so that a reinstall
doesn't have to fetch from network again. After this I run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.repo_local includedeb cache /var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;This updates the local reprepro repo and after which I can then remove
the cached packages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ wajig clean
&lt;/pre&gt;
&lt;p&gt;I do that because they are now available in my reprepro-managed repo.
That now means that I got a massive mirror managed by debmirror and a
smaller one managed by reprepro, and I have these on an external drive
for in case I want to install Debian anywhere. What else my reprepro
repo has is some other packages like &lt;strong&gt;skype&lt;/strong&gt; and &lt;strong&gt;oracle-xe&lt;/strong&gt;, as
well as an odd packages from &lt;a class="reference external" href="http://wiki.debian.org/DebianExperimental"&gt;Debian Experimental&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Not so simple I guess... but works so well for my needs.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>apt-get vs. aptitude</title><link href="http://tshepang.net/apt-get-vs-aptitude" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-23:apt-get-vs-aptitude</id><summary type="html">&lt;p&gt;Did I mention that &lt;a class="reference external" href="http://tshepang.net/stack-overflow-rocks-hard"&gt;I love Stack Overflow&lt;/a&gt;? It's a Q&amp;amp;A site for
anything that is related to computer programing, and the creators
(luckily) didn't just stop there. They went on to create a bunch of
other sites using the same technology and branding, covering other
topics (and they aggregate &lt;a class="reference external" href="http://stackexchange.com"&gt;the best new content&lt;/a&gt; from those sites).&lt;/p&gt;
&lt;p&gt;Enough with background info. What prompted this post is &lt;a class="reference external" href="http://unix.stackexchange.com/questions/767/what-is-the-real-difference-between-apt-get-and-aptitude-how-about-wajig/935#935"&gt;the answer&lt;/a&gt; to
the question, &amp;quot;&lt;a class="reference external" href="http://unix.stackexchange.com/questions/767/what-is-the-real-difference-between-apt-get-and-aptitude-how-about-wajig"&gt;what's the difference between apt-get and
aptitude?&lt;/a&gt;&amp;quot;. This is from one of their sites, &lt;em&gt;Unix and Linux&lt;/em&gt;, and
the answer is really thorough. Part of the question was &amp;quot;what the heck
is wajig&amp;quot; and I really liked how that part was handled as well. It
serves as a nice reminder of why the heck I'm working on &lt;a class="reference external" href="http://code.google.com/p/wajig/"&gt;wajig&lt;/a&gt; in the
first place... it rocks!&lt;/p&gt;
</summary><category term="Debian"></category><category term="wajig"></category></entry><entry><title>on Anarchism</title><link href="http://tshepang.net/on-anarchism" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-14:on-anarchism</id><summary type="html">&lt;p&gt;There have been many great benefits I got from &lt;a class="reference external" href="http://www.debian.org"&gt;the Debian project&lt;/a&gt;,
but among the most important is my introduction to Anarchism, a radical
political theory that opposes all forms of official hierarchy
(capitalism, communism, religion, etc), arguing that such things tend to
result in oppression.&lt;/p&gt;
&lt;p&gt;How I got access to that is via a package known as &lt;a class="reference external" href="http://packages.debian.org/stable/anarchism"&gt;anarchism&lt;/a&gt;, a set
of documents formally known as &lt;a class="reference external" href="http://anarchism.pageabode.com/afaq/index.html"&gt;An Anarchist FAQ&lt;/a&gt;. It's a very
comprehensive coverage of the theory, and going through it brought both
enlightenment and frustration, for it explained so many things that I
took for granted, while pointing out the causes. The theory is basically
presented as the best possible society humans could ever have.&lt;/p&gt;
&lt;p&gt;As for me, I'm not sure if it's actually true, although I lean more
towards it than alternatives (and I haven't read anything extensive on
competing theories, but intuition/experience tells me that capitalism,
communism, and religion all suck tremendously). I need more study to be
more sure, especially because the objections to Anarchism are heavy.&lt;/p&gt;
&lt;p&gt;To me it's a scarier concept to introduce yourself as an anarchist than
as an atheist or a homosexual, because the implications are greater. In
fact, they are so great, that the word &lt;em&gt;anarchy&lt;/em&gt; itself has been
associated with chaos. That's an expected knee-jerk reaction you'll get
when you punt things like &amp;quot;I reject all forms of official authority,
including all governments!&amp;quot;. But it would be nice if people who shudder
at the concept to spend time with &lt;a class="reference external" href="http://anarchism.pageabode.com/afaq/index.html"&gt;that great document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My attraction to the theory perhaps is due to my radically liberal
tendencies (EG, I don't see anything wrong with fucking my biological
mother, provided it's consensual, and there's no pregnancy). I don't
know where these tendencies originate, considering that I was a
religious nut back in my early teens, scared of the concept of hell and
similar forms of bullshit.&lt;/p&gt;
</summary><category term="politics"></category></entry><entry><title>developer of note: Martyn Russell</title><link href="http://tshepang.net/developer-of-note-martyn-russell" rel="alternate"></link><updated>2013-09-30T23:28:04+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-10:developer-of-note-martyn-russell</id><summary type="html">&lt;p&gt;Martyn Russell is &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;'s release manager,
and being a fan of the project since the early pre-1.0 days,
I have quite familiar with his work.
But what triggered this honor is his work on &lt;a class="reference external" href="http://blogs.gnome.org/mr/2010/09/08/tracker-needle/"&gt;Tracker Needle&lt;/a&gt;
(written in Vala), Tracker's new GUI search tool,
to replace the inadequate Tracker Search Tool (written in C).
I've taken a look, and the design is pretty modern
(check the video he gives in his &lt;a class="reference external" href="http://blogs.gnome.org/mr/2010/09/08/tracker-needle/"&gt;announcement&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;But Martyn has of course done &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/log/?qt=author&amp;amp;q=martyn"&gt;far more&lt;/a&gt; for Tracker, and does a pretty
damn good job managing the release.
One thing he did outside of Tracker that I'm aware of is the
re-design the &lt;a class="reference external" href="http://gtk.org"&gt;http://gtk.org&lt;/a&gt; page, giving it a very modern look (which
it desperately needed).&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>Argument from Beauty</title><link href="http://tshepang.net/argument-from-beauty" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-08-30:argument-from-beauty</id><summary type="html">&lt;p&gt;So there's a bunch of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Existence_of_God"&gt;arguments for the existence of God&lt;/a&gt;, and
learning about them is actually fun for me. I find the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Argument_from_beauty"&gt;Argument from
beauty&lt;/a&gt;, though not the strongest of all, the most seductive. It's ever
so nice when I joke about it, like when I see a super-hot gal (the sort
you'd be glad to eat her shit just to have a taste of her pussy) or
enjoying a wonderful meal (like the one I enjoyed last weekend when
visiting Botswana). I'd throw something like, &amp;quot;How could such a gal have
evolved to this form through blind forces of nature! God-did-it!&amp;quot;.&lt;/p&gt;
</summary><category term="atheism"></category><category term="humor"></category></entry><entry><title>trusting one's feelings</title><link href="http://tshepang.net/trusting-ones-feelings" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-08-20:trusting-ones-feelings</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I never trusted my feelings. I always thought that feelings were the
prejudices and bigotries that I was raised with, and were never to
be given any weight unless I could put a solid foundation of reason
underneath them.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://atheistethicist.blogspot.com/2008/03/reflections-on-rejected-moral-theories.html"&gt;Reflections on Rejected Moral Theories&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="ethics"></category><category term="quote"></category></entry><entry><title>developer of note: Philip van Hoof</title><link href="http://tshepang.net/developer-of-note-philip-van-hoof" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-08-13:developer-of-note-philip-van-hoof</id><summary type="html">&lt;p&gt;There hasn't been anyone who has &lt;a class="reference external" href="http://pvanhoof.be/blog/index.php/category/tracker"&gt;publicly talked about Tracker&lt;/a&gt; as
hard as Phillip van Hoof ever since the project was started a few years
ago. He has recently &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-August/msg00008.html"&gt;outlined the current improvements and future
plans&lt;/a&gt; to make it rock even harder (and of course I understand very
little of it, since there's jargon all over the place, and &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;
actually covers new ground).&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>developer of note: Alexander Reichle-Schmehl</title><link href="http://tshepang.net/developer-of-note-alexander-reichle-schmehl" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-24:developer-of-note-alexander-reichle-schmehl</id><summary type="html">&lt;p&gt;Debian got so many people doing what seem like thankless jobs in an
effort to improve it. One of those guys is Alexander Reichle-Schmehl
(look at my struggling tongue), who has for a number of months been
pushing an initiative to fix a bunch of RC bugs weekly (&lt;a class="reference external" href="http://blog.schmehl.info/2010/07/22#rc-squashing-squeeze-1"&gt;example&lt;/a&gt;).
This developer has been busy &lt;a class="reference external" href="http://blog.schmehl.info/Debian/rc-stats"&gt;keeping track of RC bug counts&lt;/a&gt;,
reducing the need for me to go check myself.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>nice review of 'Perl Best Practices'</title><link href="http://tshepang.net/nice-review-of-perl-best-practices" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-20:nice-review-of-perl-best-practices</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I always punctuate its disclosure with an outraged &amp;quot;preposterous!&amp;quot;.
Around mid-section, the initial refutation unavoidly morphs into a
&amp;quot;hmmm, I can see his point.. but it ain't for me. It just doesn't
jive with my vibes&amp;quot;. By the time I've made it to the end, however,
it is rare indeed that I haven't seen the light, donned the ritual
sackcloth and ashes, sworn to atone for my sins and to walk the
straight and narrow [path] from now on.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.oreillynet.com/cs/catalog/view/cs_msg/79971"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm a sucker for humorous religious allegories.&lt;/p&gt;
</summary><category term="non-Python"></category><category term="quote"></category><category term="humor"></category></entry><entry><title>more on wajig development</title><link href="http://tshepang.net/more-on-wajig-development" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-16:more-on-wajig-development</id><summary type="html">&lt;p&gt;I was &lt;a class="reference external" href="http://tshepang.net/my-first-wajig-contribution"&gt;given commit access&lt;/a&gt; to wajig project, and did a heck of a lot
of clean-ups, and in the process, learning much about unit testing.
I aimed for a comprehensive solution, partly to avoid regressions,
since I intend to do lot of code changes.&lt;/p&gt;
&lt;p&gt;I also looked at converting wajig's GUI &lt;a class="reference external" href="http://developer.gnome.org/gtk2/stable/gtk-migrating-GtkBuilder.html"&gt;from Glade to GtkBuilder&lt;/a&gt;.&lt;/p&gt;
</summary><category term="wajig"></category></entry><entry><title>my first wajig contribution</title><link href="http://tshepang.net/my-first-wajig-contribution" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-08:my-first-wajig-contribution</id><summary type="html">&lt;p&gt;Due to my love for the application &lt;a class="reference external" href="http://code.google.com/p/quodlibet/"&gt;Quod Libet&lt;/a&gt;, I have been
contributing a bit to it. But due the complexity of the code, I looked
elsewhere, and found a favorite tool package management tool, &lt;a class="reference external" href="http://code.google.com/p/wajig/"&gt;wajig&lt;/a&gt;,
and was surprised to find that it's not kept in a VCS. Useful as it is,
it's code looks like a collection of hacks, so I started by offering a
PEP-8 fix.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;a day later&lt;/strong&gt;] Inspired by that offer, the &lt;a class="reference external" href="http://code.google.com/u/113620423708378221129/"&gt;nice guy&lt;/a&gt; that founded
the project created a VCS repo for it, and even offered me &lt;a class="reference external" href="http://code.google.com/p/wajig/people/list"&gt;commit
rights&lt;/a&gt;. I was amazed by the trust.&lt;/p&gt;
</summary><category term="wajig"></category></entry><entry><title>my pet project</title><link href="http://tshepang.net/my-pet-project" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-06-09:my-pet-project</id><summary type="html">&lt;p&gt;I've been working on a personal (unofficial) project for some weeks now
at work whose goal is automated testing of the system I maintain at
work. The system involves interfacing with Oracle, and the UI I used for
that is the retarded (blocky, and ugly UI, resource hog) Oracle SQL
Developer. I couldn't find any real alternatives after a cursory search,
and had to live with this pain for too many months. I decided to write
something in Python to achieve the common tasks of updating and viewing
specific parts of the DB. Having succeeded, I decided to turn the script
into a test suite that would eliminate the laborious and error-prone
process of doing the testing manually, a process which, among other
things, involves tweaking xml files, and using that damned SQL
Developer! I'm not-so-many-hours away from completing this 200+ line
masterpiece of mine, and here's what I used:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python: &lt;a class="reference external" href="http://docs.python.org/py3k/"&gt;3.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modules: &lt;a class="reference external" href="http://docs.python.org/py3k/library/xml.etree.elementtree.html#module-xml.etree.ElementTree"&gt;xml.etree.ElementTree&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/py3k/library/configparser.html#module-configparser"&gt;configparser&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/py3k/library/sys"&gt;sys&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/py3k/library/time"&gt;time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd party module: &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt; (which prompted me to write
&lt;a class="reference external" href="http://tshepang.net/accessing-oracle-db-using-python-in-debian"&gt;instructions&lt;/a&gt; for installing and setting it up)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Python"></category></entry><entry><title>new blogging platform</title><link href="http://tshepang.net/new-blogging-platform" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-06-02:new-blogging-platform</id><summary type="html">&lt;p&gt;Blogger's post editor is so bad that I've been promising myself to move
elsewhere for quite a while. I checked on &lt;a class="reference external" href="http://superuser.com"&gt;Super User&lt;/a&gt; what their
recommendations are and they pointed mostly to Wordpress (which I found
too ugly) but someone there also pointed to &lt;a class="reference external" href="http://tumblr.com"&gt;Tumblr&lt;/a&gt;, which I never
heard of before. It really is more than a blogging platform (which was
all I was actually looking for), and it does look good except for the
fact that I miss the sidebar functionality which allows me to place
things like favorite blogs, favorite posts, etc.&lt;/p&gt;
</summary><category term="blogging"></category></entry><entry><title>developer of note: Aleksander Morgado</title><link href="http://tshepang.net/developer-of-note-aleksander-morgado" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-20:developer-of-note-aleksander-morgado</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; team got this new guy, &lt;a class="reference external" href="http://sigquit.wordpress.com/"&gt;Aleksander Morgado&lt;/a&gt;, &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00006.html"&gt;doing&lt;/a&gt;
&lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00037.html"&gt;fabulous&lt;/a&gt; &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00054.html"&gt;work&lt;/a&gt; &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-April/msg00097.html"&gt;on&lt;/a&gt; Tracker's extraction code.
He does so while also providing thorough info on his activities.&lt;/p&gt;
&lt;p&gt;One thing that prompted me to honor him is his work on adding options to
disable stop words, as well as to enable number indexing,
fixing an old gripe of mine.&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>xfrun4 rocks</title><link href="http://tshepang.net/xfrun4-rocks" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-10:xfrun4-rocks</id><summary type="html">&lt;p&gt;The one desktop environment I live in is GNOME, which also happens to be
my favorite too. It's got quite a lot of things that can be better of
course and one of them is its run dialog. I once bumped into
that run dialog of &lt;a class="reference external" href="http://www.xfce.org/"&gt;Xfce 4&lt;/a&gt; and have used it since I discovered it &lt;a class="reference external" href="http://mail.gnome.org/archives/gnome-list/2007-February/msg00003.html"&gt;years
ago&lt;/a&gt;. What I like about it is, unlike GNOME's, it doesn't auto-complete
using a large list of possible commands (presumably on the shell's PATH)
but rather a smaller list consisting of commands I have actually run
previously. What's more is that it makes those commands persistently
available as history (which GNOME's does as well by the way). As if
that's not enough, it will store only commands that were successfully
launched to avoid storing typos and failed commands in history. These
features makes for a superb piece of software.&lt;/p&gt;
</summary><category term="GNOME"></category><category term="non-GNOME"></category></entry><entry><title>I love the Debian supermarket</title><link href="http://tshepang.net/i-love-the-debian-supermarket" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-05:i-love-the-debian-supermarket</id><summary type="html">&lt;p&gt;I love the fact that whenever someone mentions a piece of software, I
can quickly do a &lt;tt class="docutils literal"&gt;aptitude search &lt;span class="pre"&gt;piece-of-software&lt;/span&gt;&lt;/tt&gt; knowing that
there's a good chance that it's somewhere in the Debian repository. That
means I won't have to get to the website looking for a download link,
which, other than saving time, means I just have to deal with just one
interface as well as the confidence that &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;piece-of-software&lt;/span&gt;&lt;/tt&gt; is
well-integrated with Debian itself, given Debian's exacting quality
standards. Debian really is a gem!&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] The term, &lt;a class="reference external" href="http://kitenet.net/~joey/blog/entry/the_supermarket_thing/"&gt;supermarket&lt;/a&gt;, as used in this context, was
coined by some Debian Developer, although I mean it in a different and
more positive manner.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>Python people vs. Java people</title><link href="http://tshepang.net/python-people-vs-java-people" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-04:python-people-vs-java-people</id><summary type="html">&lt;!--  --&gt;
&lt;p&gt;Now this is one heck of a controversial quote by the best computer
programming blogger in my memory:&lt;/p&gt;
&lt;blockquote&gt;
...when you choose a language, you're also choosing a community. The
programmers you'll be able to hire to work on a Java project won't
be as &lt;a class="reference external" href="http://www.paulgraham.com/pypar.html"&gt;smart&lt;/a&gt; as the ones you could get to work on a project
written in Python.&lt;/blockquote&gt;
</summary><category term="non-Python"></category><category term="Python"></category></entry><entry><title>'Stack Overflow' rocks hard!</title><link href="http://tshepang.net/stack-overflow-rocks-hard" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-22:stack-overflow-rocks-hard</id><summary type="html">&lt;p&gt;I can't believe that I only now discovered &lt;a class="reference external" href="http://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt;. It's an
excellent programming Q&amp;amp;A site which also happens to possess the best
user interface and design I've ever seen on the web (if memory serves
well). [&lt;strong&gt;update&lt;/strong&gt;: this great design is shared by &lt;a class="reference external" href="http://stackexchange.com/sites"&gt;other sites in the
family&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] Within a few minutes of asking &lt;a class="reference external" href="http://stackoverflow.com/q/2690147/321731"&gt;some question&lt;/a&gt;,
I received a number of high-quality answers. It's amazing!&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>developer of note: Michael Biebl</title><link href="http://tshepang.net/developer-of-note-michael-biebl" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-14:developer-of-note-michael-biebl</id><summary type="html">&lt;p&gt;So I really do honor all Debian Developers especially when they are
named &lt;a class="reference external" href="http://qa.debian.org/developer.php?login=biebl&amp;#64;debian.org"&gt;Michael Biebl&lt;/a&gt;. This guy is the lone maintainer of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;
and rsyslog in Debian (among others). Not just that but he is also a
co-maintainer of a large number of GNOME technologies (gnome-session,
dbus, avahi, gnome-power-manager, gvfs, hal, network-manager...).&lt;/p&gt;
&lt;p&gt;I love especially his role as some sorta QA for Tracker (he's done a
terrific job of it — most recently offering &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-April/msg00044.html"&gt;a bunch of patches&lt;/a&gt; to fix
some linking problems in the code). Oh, and I'm not the only one who
noticed — &lt;a class="reference external" href="http://tshepang.net/developer-of-note-josselin-mouette"&gt;the great Josselin Mouette&lt;/a&gt;, &lt;a class="reference external" href="http://np237.livejournal.com/26532.html"&gt;did offer accolades too&lt;/a&gt; for
Michael's other work.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category><category term="Tracker"></category><category term="GNOME"></category></entry><entry><title>a visit to Botswana</title><link href="http://tshepang.net/a-visit-to-botswana" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-13:a-visit-to-botswana</id><summary type="html">&lt;p&gt;This past weekend, I finally went to this neighbouring country of ours,
Botswana. It which was the first time I ever left South Africa. I was
welcomed by wonderful people, and the visit was limited to its largest
city — Gaborone — which is beautiful, sparse, and vast, when compared to
my country's own cities.&lt;/p&gt;
&lt;p&gt;One of its residents got shocked when I argued that South Africa doesn't
have a unifying identity, arguing that the country is too diverse to
have such. Instead she argued that such is country's very strength which
led to her pointing out the following wins:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;diverse (and therefore strong) economy; she stated Botswana is
over-reliant on diamonds&lt;/li&gt;
&lt;li&gt;diverse tourist attractions; Botswana's tourism is nearly
non-existent in comparison&lt;/li&gt;
&lt;li&gt;diverse export market; Botswana is all diamonds, again&lt;/li&gt;
&lt;li&gt;press freedom - my input, which she agreed with&lt;/li&gt;
&lt;li&gt;high foreign investment&lt;/li&gt;
&lt;li&gt;diverse cultures&lt;/li&gt;
&lt;li&gt;high media production standards; Botswana has only one tv channel and
the little exposure I got of it expresses amateurish levels of
production&lt;/li&gt;
&lt;li&gt;passionate people (highlighting freedom fighters that enabled black
rule; highlighting the toyi-toyi culture)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The conversation opened my eyes a little bit, that there's a lot to
appreciate about South Africa. As I talked to more Botswana residents,
and read one critical piece of journalistic writing, Botswana, despite
being far more peaceful and having superior living standards (minimal
crime, kindly people, minimal poverty, far-reaching welfare), has some
serious warts smelly bits: abortion and homosexuality are illegal. I was
shocked by these two, and most especially about the second one. What the
fuck! And that the residents voted for such (the country is apparently
very democratic) proves there's still a lot of work to be done.&lt;/p&gt;
</summary></entry><entry><title>Vox Day's 'omniderigence'</title><link href="http://tshepang.net/vox-days-omniderigence" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-07:vox-days-omniderigence</id><summary type="html">&lt;p&gt;I really enjoyed reading the section titled Omniderigence in &lt;a class="reference external" href="http://voxday.blogspot.com/"&gt;Vox
Day&lt;/a&gt;'s book, 'The Irrational Atheist'. The term, which he coined,
means the use of one's infinite powers which by the way he disagrees
with. As far as I've read, his appears the most sensical description
of Godf I've heard and is a radical departure from what your (stereo)typical
Christian would state.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sidenotes&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This guy is a real good writer and I enjoyed his analogy of his
religious believes and game-design, in another section named 'Gods of
the Machine'.&lt;/li&gt;
&lt;li&gt;He explains the term &lt;a class="reference external" href="http://voxday.blogspot.com/2006/06/mailvox-on-omniderigence.html"&gt;elsewhere&lt;/a&gt; too.&lt;/li&gt;
&lt;li&gt;Check out his &lt;a class="reference external" href="http://commonsenseatheism.com/?p=4476"&gt;debate&lt;/a&gt; with atheist blogger, &lt;a class="reference external" href="http://commonsenseatheism.com/?page_id=3"&gt;Luke Muehlhauser&lt;/a&gt;.
That's the debate that led me to the Vox's book.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="atheism"></category></entry><entry><title>my patches committed</title><link href="http://tshepang.net/my-patches-committed" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-06:my-patches-committed</id><summary type="html">&lt;p&gt;So, two of the &lt;a class="reference external" href="http://tshepang.net/so-much-learned-via-tracker-bugfixing"&gt;patches I created&lt;/a&gt; for &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; have been committed
(commit &lt;a class="reference external" href="http://tshepang.net/so-much-learned-via-tracker-bugfixing"&gt;1&lt;/a&gt;, &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/commit/?id=ade2655a2f9fecf7100d58a8908493b9d71e2273"&gt;2&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;I consumed much info (and time) during the process, which entailed
looking at Git usage (branch, checkout, commit, format-patch, ...)
through &lt;a class="reference external" href="http://pvanhoof.be/blog/"&gt;Philip van Hoof&lt;/a&gt;'s guidance.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Philip van Hoof also &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/commit/?id=c5a15f8231c63488605d799b9670aba01898fde4"&gt;fixed&lt;/a&gt; a hard-to-reproduce bug which was a pain
for me. The fix is a workaround for a &lt;a class="reference external" href="http://www.gtk.org/"&gt;GTK+&lt;/a&gt; bug.&lt;/p&gt;
</summary><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>so much learned via Tracker bugfixing</title><link href="http://tshepang.net/so-much-learned-via-tracker-bugfixing" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-02:so-much-learned-via-tracker-bugfixing</id><summary type="html">&lt;p&gt;It's been maybe over a year since I've submitted a patch to any FLOSS
project and have done so &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614608"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614609"&gt;times&lt;/a&gt; &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614610"&gt;today&lt;/a&gt;, all for &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;,
perhaps my most favorite of all pieces of code.&lt;/p&gt;
&lt;p&gt;This started with me nagging &lt;a class="reference external" href="http://blogs.gnome.org/mr/"&gt;Martyn Russell&lt;/a&gt;, Release Manager for
Tracker, about the suckage which was exposed by my usage of &lt;a class="reference external" href="http://projects.gnome.org/tracker/images/screenshots/screenshot-tracker-preferences.png"&gt;Tracker's
preferences GUI&lt;/a&gt;. He proceeded to encourage me to write a patch, which
I did. Later on &lt;a class="reference external" href="http://gimpfoo.de/"&gt;Michael Natterer&lt;/a&gt; of GIMP fame guided me on some UI
polish work.&lt;/p&gt;
&lt;p&gt;I consumed much info (and time) during the process, which entailed
looking at the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.gnome.org/gtk2/stable/"&gt;GTK+ API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tracker's configuration internals.&lt;/li&gt;
&lt;li&gt;1st look at &lt;a class="reference external" href="http://live.gnome.org/Vala"&gt;Vala&lt;/a&gt;, the language with which the preferences GUI is
written.&lt;/li&gt;
&lt;li&gt;Tinkering with &lt;a class="reference external" href="http://glade.gnome.org/"&gt;Glade&lt;/a&gt;, a RAD tool for quick GUI development, which
makes things so much easier, especially considering that GTK+ isn't
so straightforward.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>debate: Mike Licona vs Richard Carrier</title><link href="http://tshepang.net/debate-mike-licona-vs-richard-carrier" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-03-23:debate-mike-licona-vs-richard-carrier</id><summary type="html">&lt;p&gt;I recently listened to a 2.5 hour-long &lt;a class="reference external" href="http://namb.edgeboss.net/download/namb/audio_files/apologetics_debates/debate-licona_carrier.mp3"&gt;debate&lt;/a&gt; between two scholars,
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Richard_Carrier"&gt;Richard Carrier&lt;/a&gt; and &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Mike_Licona"&gt;Mike Licona&lt;/a&gt;, which alerted me to the fact that
Jesus' Resurrection is regarded, at least to Christian apologists, to be
very central to the Christian faith (here's &lt;a class="reference external" href="http://agnosticpopularfront.blogspot.com/2004/04/carrier-vs-licona-in-los-angeles-ca.html"&gt;an unsatisfactory
review&lt;/a&gt;). I became far more impressed with Richard's performance than
Mike's:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mike was the only one who displayed some arrogance (a silly joke here
and a chuckle there, unsuccessfully forcing his opponent to use the
word delusion instead of hallucination, etc.).&lt;/li&gt;
&lt;li&gt;Richard was more convincing (and the knowledge he displayed of this
topic is mind-numbing).&lt;/li&gt;
&lt;li&gt;He was more clear with his arguments.&lt;/li&gt;
&lt;li&gt;He was seemingly more prepared (his opponent probably thought he was
going to be a walkover).&lt;/li&gt;
&lt;li&gt;Mike was a bit embarassing at times when mentioning The Passion of
Christ, especially the time when he was praising Jesus (I cringed a
bit there), and Richard, by the way, ignored references to that
movie.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on these points, I vote for Richard as the winner, with the
disclaimer that the latter part of the debate was getting too technical
for me to follow thoroughly.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;sidenotes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;See &lt;a class="reference external" href="http://commonsenseatheism.com/?page_id=3"&gt;Luke Muehlhauser&lt;/a&gt;'s &lt;a class="reference external" href="http://commonsenseatheism.com/?p=30"&gt;well-argued take&lt;/a&gt; on the issue of the
Resurrection.&lt;/li&gt;
&lt;li&gt;Luke's blog, &lt;a class="reference external" href="http://commonsenseatheism.com"&gt;Common Sense Atheism&lt;/a&gt; (&lt;a class="reference external" href="http://tshepang.net/common-sense-atheism-rocks"&gt;praise&lt;/a&gt;), apparently has &lt;a class="reference external" href="http://commonsenseatheism.com/?p=50"&gt;the
largest collection of links to atheist vs theist debates&lt;/a&gt; and is
therefore a great resource.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="atheism"></category></entry><entry><title>'Common Sense Atheism' rocks!</title><link href="http://tshepang.net/common-sense-atheism-rocks" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-01-08:common-sense-atheism-rocks</id><summary type="html">&lt;p&gt;I've read dozens of posts by &lt;a class="reference external" href="http://commonsenseatheism.com/?p=12"&gt;Luke Muehlhauser&lt;/a&gt; at his &lt;a class="reference external" href="http://commonsenseatheism.com"&gt;Common Sense
Atheism&lt;/a&gt; site, among the best blogs I've read ever, which also happens
to be the first and only atheism blog I regularly read. The guy
regularly manages to enthrall me with his thorough and very broad
outlook on the topic, managing to put words where I'd fail (or even
sub-topics I wouldn't expect anyone would write about), his intelligence
(EG when debating some real smart theists), the courage of promoting
some &lt;a class="reference external" href="http://commonsenseatheism.com/?p=1924"&gt;off-beat ideas&lt;/a&gt;, not to mention the quality of much of the
commentary he receives from readers. What makes these even more
impressive is that the guy is in the 1st half of his twenties.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] My favorite posts are too many, so here's his own links
to &lt;a class="reference external" href="http://commonsenseatheism.com/?p=6086"&gt;what he deems most useful&lt;/a&gt;. He has also received serious praise
from his other readers (check the comments &lt;a class="reference external" href="http://commonsenseatheism.com/?p=1174"&gt;here&lt;/a&gt;)&lt;/p&gt;
</summary><category term="atheism"></category></entry><entry><title>my deconversion</title><link href="http://tshepang.net/my-deconversion" rel="alternate"></link><updated>2013-10-16T23:37:22+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-12-22:my-deconversion</id><summary type="html">&lt;p&gt;One of the top atheism bloggers today, &lt;a class="reference external" href="http://commonsenseatheism.com/?page_id=3"&gt;Luke Muehlhauser&lt;/a&gt;, posted a
&lt;a class="reference external" href="http://commonsenseatheism.com/?p=4545"&gt;gorgeous snippet&lt;/a&gt; by a Christian who happens to be unhappy with the
contents of the Bible, a story which is scarily similar to mine.&lt;/p&gt;
&lt;p&gt;Often people ask me when I became atheist, and I can't answer them
with a date since it was more of a process, and reading the Bible (the
entire thing) was among the earliest steps towards that end... the God
I imagined couldn't have allowed things as &lt;a class="reference external" href="http://commonsenseatheism.com/?p=21"&gt;horrendous&lt;/a&gt; as portrayed
in the Old Testament. I kept praying, asking God to help me keep my
faith, but no one answered :(&lt;/p&gt;
</summary><category term="atheism"></category></entry><entry><title>tainted Teresa</title><link href="http://tshepang.net/tainted-teresa" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-09-24:tainted-teresa</id><summary type="html">&lt;p&gt;While I was thinking of the topic I covered in &lt;a class="reference external" href="http://tshepang.net/noble-dreams"&gt;noble dreams&lt;/a&gt;,
Mother Teresa appeared in my mind due the imagery of nobility that she
possesses. I decided to go check out &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Mother_Teresa"&gt;her story&lt;/a&gt; for inspiration,
and came back disappointed and even shocked at much of her (alleged)
shortcomings.&lt;/p&gt;
&lt;p&gt;Nevertheless, I was captivated by her words:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[our mission is to take care of] the hungry, the naked, the
homeless, the crippled, the blind, the lepers, all those people who
feel unwanted, unloved, uncared for throughout society, people that
have become a burden to the society and are shunned by everyone.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Mother_Teresa#Missionaries_of_Charity"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="ethics"></category><category term="quote"></category></entry><entry><title>noble dreams</title><link href="http://tshepang.net/noble-dreams" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-09-17:noble-dreams</id><summary type="html">&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;: I am not running a business anymore (I gave up trying), and
the major dream mentioned here died with it. So am keeping this here for
its historical value... it's also not bad writing.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I was having a discussion with a colleague over chat software, asking
her about her major dreams. After some deliberations, and after
revealing my own dream of helping a million people, I was touched when
she stated she wanted to open a clinic offering free services as well as
a place to help unemployed mothers. I immediately wished I was rich
enough to grant her the dream.&lt;/p&gt;
&lt;p&gt;One reason I asked this question is I'm actually interested in what's in
other people's minds and am often looking for inspiration. Her dream
reminds of a fantasy I once had, like if I had a billion Rands (divide
by ~8 to get US$), what I'd do is build a hospital and fund it for years
on end. That's largely because SA public hospitals generally stink, both
literally and figuratively. And while on that topic, I was recently
discussing with a friend that there were other issues that escalated the
problem before we even talk of insufficient funding: efficiency and
corruption.&lt;/p&gt;
&lt;p&gt;While still on the dreaming side of things, someone mentioned that a
dream that truly drives a person is normally ego-driven. Reminds me of a
great dream of becoming a DD (Debian Developer) which &lt;a class="reference external" href="http://tshepang.net/unrealized-dreams"&gt;kinda died&lt;/a&gt;. An
acquaintance also has an ego-driven dream of owning a private medical
lab. He did however admitted that it was a negotiable dream, and that
qualifies it as a fantasy.&lt;/p&gt;
&lt;p&gt;While still on medical things, there's yet another acquaintance whose
dream it is to build a clinic of some sort, but I actually forgot the
details. What's interesting however is that when I asked specific
questions like how big it is and some such, she couldn't answer, stating
not having visualised it that far. I have learnt the importance of
visualising a dream thoroughly because that solidifies it pretty well,
helping it get further away from the fantasy category.&lt;/p&gt;
&lt;p&gt;Another friend also touched me when he mentioned one dream of setting up
a soup kitchen for homeless people. Noble stuff that.&lt;/p&gt;
&lt;p&gt;Dreams are great because focusing on them help reduce the pain of
hardship. They can be as simple as &amp;quot;the salary will help me pay that
debt, and maintain my lifestyle too&amp;quot;, and those are worthwhile dreams
too, at least enough to have millions of displeased workers wake up
every morning to get to work. I've also met quite a number of people
whose main dream is retirement. It used to be my driving passion and
motivator in building my business, but I'm now more driven by what I'll
do with the ample time I'll have at my disposal after that moment, and
even more than that, am driven my the million lives dream (helping a
million people), most especially the ways in which I'll make that
happen: starting worker co-operatives, free IT training, FLOSS
(Free/Libre an Open Source Software) development funding...&lt;/p&gt;
&lt;p&gt;Actually noble dreams, the &amp;quot;I want to help improve the world&amp;quot; sort, are
my favorites and I always get excited when someone mentions such, not
those of &amp;quot;I want to have this house and that car&amp;quot;. I probably am
dishonest with myself, but as much as I drool at the sight and thought
of a Bentley Continental GT, pumping the retail cost of that beauty into
feeding a 100 hungry kids for a month is more my thing. I do of course
have non-noble dreams: travelling Africa and the world for fun,
acquiring a decent entertainment system and a serious gaming PC (am I a
sucker for hardware-pushing high-end games!), visit international film
festivals (am I a sucker for movies!), and even produce some short
movies, preferably animated, preferably with FLOSS (I am a
politically-charged wannabe!).&lt;/p&gt;
&lt;p&gt;A friend of mine, a sports sucker, wants to sponsor one kid to go
professional in that field. Having loved to have had such an opportunity
as a kid, he wants to ensure some deserving kid doesn't meet the same
fate (and end up in career s/he dislikes). I know at least two other
highly-gifted people who didn't further their sporting careers due to
lack of support (likely financial). That's painful actually and
shouldn't happen to anyone. Another friend of mine wants to open a
dancing facility to help get kids off the streets. I'm not sure if
that's a negotiable dream or not (it didn't sound like a priority item,
neither did the sports sponsorship thing by the way) but we are to find
out in due time...&lt;/p&gt;
&lt;p&gt;A brother of mine, a gifted and multi-talented (composer, producer,
arranger, mixer, vocalist, sound engineer, writer) musician, wants to
help groom and promote a number of small-time artists. That would really
help in an industry where talent isn't enough to propel one further.
Also, this is in an industry where too many lacking that talent are
propelled forward regardless.&lt;/p&gt;
</summary></entry><entry><title>there had better not be life out there!</title><link href="http://tshepang.net/there-had-better-not-be-life-out-there" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-09-17:there-had-better-not-be-life-out-there</id><summary type="html">&lt;p&gt;I thoroughly enjoyed re-reading &lt;a class="reference external" href="http://www.nickbostrom.com/extraterrestrial.pdf"&gt;an essay&lt;/a&gt; on why we better hope we
don't discover extra-terrestrial life. It's 8 pages of superb writing
and is pretty thorough (check how he explains the myriad possibilities,
and how he challenges even those), and nearly as exciting as the 1st
time I read Richard Feynman's &amp;quot;&lt;a class="reference external" href="http://www.nanoparticles.org/pdf/Feynman.pdf"&gt;There's Plenty of Room At the
Bottom&lt;/a&gt;&amp;quot;. I consider this essential reading for any enquiring mind.&lt;/p&gt;
</summary><category term="future-tech"></category></entry><entry><title>unrealized dreams</title><link href="http://tshepang.net/unrealized-dreams" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-09-17:unrealized-dreams</id><summary type="html">&lt;p&gt;My biggest dream for a long while was becoming a DD (Debian Developer),
but why am I not pursuing that? Let me just say laziness and lack of
motivation, or even lack of focus. There's so many things I want to be
technically proficient at and it's tough to choose one (Python coding,
Debian system admin, GTK+, &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;, Xorg). And there's distractions
all over the place.&lt;/p&gt;
&lt;p&gt;Whether I'm going ahead with this is still unresolved so the dream ain't
nearly dead, but the dead dream is that of becoming an academic in some
field. As with FLOSS there's many interesting fields to choose from
(mathematics, electronics, computer science, physics) but I ain't going
any of these routes, most likely because I don't enjoy formal education,
disliking the pressures involved. Hating stress, I would rather pursue
these on my own as I'm doing with FLOSS. Or maybe I'm just a chicken,
afraid of committing! I mean I didn't even finish my university degree
due to similar excuses I mention above. Ah well...&lt;/p&gt;
</summary></entry><entry><title>Illadelph Halflife</title><link href="http://tshepang.net/illadelph-halflife" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-07-27:illadelph-halflife</id><summary type="html">&lt;p&gt;This is undoubtedly the best album by &lt;a class="reference external" href="http://en.wikipedia.org/wiki/The_Roots"&gt;The Roots&lt;/a&gt;, and includes
timeless acts like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Section&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wot They Do&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Respond/React&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Push Up Ya Lighter&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;No Alibi&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ital (The Universal Side)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Listening to &lt;em&gt;Section&lt;/em&gt; is actually what prompted me to write this post,
for I loved it so much that I wondered if &lt;em&gt;Next Movement&lt;/em&gt; (from their
later [Things Fall Apart album][]), which I have for a long time
regarded as the best hip-hop track ever, deserves it's position at the
top of the group's work, and therefore removing it from the list of
&lt;a class="reference external" href="http://tshepang.net/hip-hop-greats"&gt;hip-hop landmarks&lt;/a&gt;.&lt;/p&gt;
</summary><category term="music"></category></entry><entry><title>Python, Perl, and now Java</title><link href="http://tshepang.net/python-perl-and-now-java" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-05-05:python-perl-and-now-java</id><summary type="html">&lt;p&gt;I'm grateful that there's so much I'm learning at &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my new job&lt;/a&gt;, stuff I
wouldn't really learn on my own, like Perl (this one out of curiosity,
especially because it's a major competitor of my favorite, Python).&lt;/p&gt;
&lt;p&gt;I write this post in response to the fact that now I will be learning
Java, what I secretly swore I'd stay away from, not because it's bad,
but because it's hard to find anyone favouring it in my world (Debian,
GNOME, Python), a world that proclaim it to be a disgusting pile of
shit. Anyways let's see how the ride will pan out.&lt;/p&gt;
&lt;p&gt;As for Perl, I found its string-handling capabilities exceedingly
powerful but its syntax ugly and over-varied — too much of a free-form
language. That's bad for someone used to the gracious elegance of mighty
Python. If I could stay away from it, I would!&lt;/p&gt;
</summary><category term="non-Python"></category><category term="Python"></category></entry><entry><title>the mighty Mitch Sala</title><link href="http://tshepang.net/the-mighty-mitch-sala" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-02-13:the-mighty-mitch-sala</id><summary type="html">&lt;p&gt;If ever you admire someone excessively to a point of nearly letting out
a tear, you tend to get worried, perhaps due to pride, that you may be
too obsessed. This was a case when Mitch Sala, an impossibly-successful
Australian businessman, who undertook a job to inspire more people to be
successful in Amway. He came through to South Africa and made a powerful
presentation, &amp;quot;and I even got to shake his hand!&amp;quot;&lt;/p&gt;
</summary></entry><entry><title>discarding Scribes for Geany</title><link href="http://tshepang.net/discarding-scribes-for-geany" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-01-23:discarding-scribes-for-geany</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="http://tshepang.net/scribes-satisfies-some-more"&gt;version of Scribes in development&lt;/a&gt; didn't prove too satisfactory
after a while (black background which I didn't care to investigate how
to revert to normal, among whatever other trouble I don't remember) and
there was me also unloving the idea of switching text editors, so
decided to get &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;stuck with Geany&lt;/a&gt;, and am not complaining much. It's
been a year-and-a-half of pleasure and pain and it was well worth it.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>anarchism rocks?</title><link href="http://tshepang.net/anarchism-rocks" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-12-23:anarchism-rocks</id><summary type="html">&lt;p&gt;I was innocently doing some FLOSS reading when I bumped on a real
gorgeous description on why anarchy is the &lt;a class="reference external" href="http://loupgaroublond.blogspot.com/2008/12/open-source-and-anarchism.html?showComment=1229842200000#c4468517513122259751"&gt;best possible society ever
imagined&lt;/a&gt;.&lt;/p&gt;
</summary><category term="politics"></category></entry><entry><title>developer of note: Manoj Srivastava</title><link href="http://tshepang.net/developer-of-note-manoj-srivastava" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-12-19:developer-of-note-manoj-srivastava</id><summary type="html">&lt;p&gt;Manoj Srivastava has for a number of years been Project Secretary,
a very key role in Debian, a role where the incumbent
runs project voting. What prompted this post is &lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00275.html"&gt;his recent
resignation&lt;/a&gt;, which was encouraged by hostility towards the handling of
the recent controversial ballot. As evidenced by the &lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00285.html"&gt;various&lt;/a&gt;
&lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00292.html"&gt;supporters&lt;/a&gt; and my own experience, he happens to be among the wisest
of all DD's. He is also among the most senior of all,
having been involved since 1995.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>reprepro saved my live</title><link href="http://tshepang.net/reprepro-saved-my-live" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-12-12:reprepro-saved-my-live</id><summary type="html">&lt;p&gt;Much of this is obsolete: I no longer build my own Debian packages.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;That's a joke title, but &lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;that fabulous tool&lt;/a&gt; really did help me a
lot. When doing package builds, all I need to run is the following
after a build:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rm *udeb
&lt;span class="nv"&gt;$ &lt;/span&gt;reprepro --basedir ~/.repo_directory includedeb sid *deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first command removes debian-installer packages which I don't need,
the second takes the remaining packages and adds them into the
reprepro-managed Debian repository while also making them available in
the Packages file, and the third updates the system's apt database in
order to pick up the changes. Also, if I want to get rid of something
from the repo, all I do is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro --basedir ~/.repo_directory removesrc sid glibc
&lt;/pre&gt;
&lt;p&gt;I don't know why anyone would love to remove glibc binary packages, but
it's that simple.&lt;/p&gt;
&lt;p&gt;Achieving this used to be painful before I discovered reprepro, for I
did the whole thing manually, which was not scalable since old packages
were sitting rotting in the repo, making it grow beyond 30GB (it now is
about 10GB). This also meant that I ran 'apt-ftparchive packages' on the
entire .debs each time I wanted an updated Packages file, and that was
dozens of minutes of heavy I/O. This painful life has been going on for
a number of months, and am stupid that I didn't search harder for a
better solution.&lt;/p&gt;
&lt;p&gt;Before doing things this way, I was making use of the nifty &lt;a class="reference external" href="http://aptoncd.sourceforge.net/"&gt;APTonCD&lt;/a&gt;,
but it started to become unusable due to excessive memory consumption
after some system updates. It's not clear where the bug lies, nor do I
know if it's a known problem, which I didn't report because I was using
Ubuntu's package, a much improved and re-written 0.1.98, as opposed to
Debian's 'bug-free' 0.1 (though I later discovered the bug to exist when
running the package in Ubuntu 8.10 too).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/my-debian-package-management-setup"&gt;an update on how I do things now&lt;/a&gt;&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>GNOME killer app</title><link href="http://tshepang.net/gnome-killer-app" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-26:gnome-killer-app</id><summary type="html">&lt;p&gt;GNOME system monitor applet it is.&lt;/p&gt;
&lt;p&gt;Many times when I'm thinking of using a different desktop suite, I know
that I'm not gon have an equal of GNOME's system monitor applet. In
Debian, this applet defaults to displaying CPU usage but can be set to
display more, including memory and hard disk usage. This is among the
things I add to the panel on every fresh install (for I always am
curious what's up with my system). Given how useful it is, I now wonder
why Debian doesn't add it on the panel by default, especially that many
new users won't even be aware it exists in the first place.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Clicking on that applet launches a more comprehensive system monitor
which has 4 tabs (notebooks in GTK+ speak):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a recently-added one that displays high-level system info (processor
model, RAM capacity) which was a much-needed equivalent of Windows'
own utility&lt;/li&gt;
&lt;li&gt;one that shows mounted filesystems (pretty handy really)&lt;/li&gt;
&lt;li&gt;one that displays live CPU, RAM, and network usage info, which
recently (perhaps GNOME 2.22 released March this year) received a
major facelift&lt;/li&gt;
&lt;li&gt;and last and least, the one that got a process monitor that feels
like a painfully stripped-down top (from procps)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="GNOME"></category></entry><entry><title>Scribes satisfies some more</title><link href="http://tshepang.net/scribes-satisfies-some-more" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-26:scribes-satisfies-some-more</id><summary type="html">&lt;p&gt;I'm currently running development version of Scribes (from bzr repo) and
it got fixes for two very annoying bugs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;On opening a non-UTF8 file you'd get a message asking you to open it
via the app's file-selector, an uncomfortably long way around it; the
version from bzr offers a choice of the encoding and then we live
happily ever after.&lt;/li&gt;
&lt;li&gt;A worse problem that occurred when opening the file described above
is that on closing the error dialogue, all other open Scribes windows
would also close.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All what this means is that Scribes remains installed on my machine(s).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;sidenote&lt;/strong&gt;: Code-folding is still absent although I won't need to use
it since &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;Geany&lt;/a&gt; does a nice job already.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>1 more machine, 2 less</title><link href="http://tshepang.net/1-more-machine-2-less" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-13:1-more-machine-2-less</id><summary type="html">&lt;p&gt;Since I've departed from previous job, I've lost access to &lt;a class="reference external" href="http://tshepang.net/my-machines"&gt;two machines&lt;/a&gt;,
but more than made up for it by acquiring an Acer Travelmate 6592,
a feature-rich laptop complete with wireless connectivity (802.11a/b/g),
Bluetooth, card readers, fingerprint scanner, webcam, Firewire,
and even age-old DB9 serial port, while also not being short
on specs (Intel T7500 processor, 2GB DDR2, 250GB HDD).
Even better, unlike those two machines, I also get to take it home.&lt;/p&gt;
</summary><category term="hardware"></category></entry><entry><title>Ubuntu 8.10 impressions</title><link href="http://tshepang.net/ubuntu-810-impressions" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-13:ubuntu-810-impressions</id><summary type="html">&lt;p&gt;I haven't ran Ubuntu since 7.04 and gave 8.10 a try recently, primarily
for doing wireless web connection at new job, and also that our sysadmin
showed it to me in action with its NetworkManager 0.7 glory in action
and had the installer handy. As I've come to expect from Ubuntu, the
defaults artwork just looks gorgeous and with an especially stunning
desktop background. It was also the first time I actually got to
experience the 3D desktop effects that people have been making noise
about these past several months (I did try this before, on Debian, but
it was a mess with me having to go see README.Debian thing and still not
managing, while in Ubuntu's case, it was mere clicks away which I found
through the handy Ubuntu user manual, which is easily accessible on the
GNOME panel, and that's what Debian desktop needs).&lt;/p&gt;
&lt;p&gt;Me became happy with Firefox which remembered the previously-visited
paths (via the back-button) on session-restore, a feature I often miss
when working with Epiphany.&lt;/p&gt;
&lt;p&gt;Some warts I've seen so far:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The installer's insistence on running the whole desktop before
installation sucks because it really prolongs installation, and made
worse by a lack of a visible alternative option.&lt;/li&gt;
&lt;li&gt;The feature I once praised in debian-installer, which informs one of
the limits whithin which one may resize existing hard drive
partitions, is absent in Ubuntu's installer. The graphical
partitioner does however looks real slick.&lt;/li&gt;
&lt;li&gt;Does not remember running apps when session is restarted.&lt;/li&gt;
&lt;li&gt;And I've already experienced 2 system freezes after running some
updates, and the sort where I have to force machine reset.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="non-Debian"></category></entry><entry><title>farewell at old job</title><link href="http://tshepang.net/farewell-at-old-job" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-07:farewell-at-old-job</id><summary type="html">&lt;p&gt;I was yesterday honored with a farewell party at my company, at which I
worked as integration technician (opto-electro-mechanical engineering
industry) for nearly five years. And there was even chocolates for me to
take home with, while having people throwing accolades at me like I was
sort of useful... I really should be thankful for the accomodation (and
monies) I was granted and am excited for &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;the next challenge&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>my 1st Python tool</title><link href="http://tshepang.net/my-1st-python-tool" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-07:my-1st-python-tool</id><summary type="html">&lt;p&gt;A senior of mine at my current job has asked me to write a tool to
convert from &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Universal_File_Format"&gt;UFF format&lt;/a&gt; to csv for easy spreadsheet processing,
producing results that proved most beneficial to me (the path towards
code mastery). The tool is less than 200 lines of Python code, and I
even got a peek at the necessary changes to have it run on Python 3 (and
successfully doing so), as well as experiencing the relatively
unchallenging problems of getting it to run on Windows XP (it was
developed on Debian). Of course I would not have bothered had the
requirement not been getting it to run on that most popular of end-user
OSes. But Python's cross-platform nature makes it easy, and their work
on getting the supporting suite (installer, IDE, Python shell) easy to
install and run on Windows deserves serious respect.&lt;/p&gt;
&lt;p&gt;By the way I haven't so far learned the importance/use of classes so the
entire thing is in functions. And the code is also extremely slow (and
even slower on WinXP) and only does basic checks for the validity of the
source file to be processed so will loudly crash on corrupted files.
Other than that, the tool is pretty robust and made my 'client' real
happy, considering the previous tool was really broken by design (a pain
to work with, being muddled with severe limitations) and also relied on
Matlab being installed.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>favorite laptop</title><link href="http://tshepang.net/favorite-laptop" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-10-18:favorite-laptop</id><summary type="html">&lt;p&gt;The laptop that &lt;a class="reference external" href="http://tshepang.net/my-machines"&gt;I previously mentioned&lt;/a&gt; is named Compaq/HP nx7010 and
is the most favorite I've ever used (despite that it's only the second
laptop I've ever used heavily). I suspect I like it mostly because of
the feel of the keyboard, and its 1.7GHz Pentium M is really more than
adequate for the modest tasks I throw at it; and its only set-back is
the placement of the 3 USB ports - at the back. It's a pity that I'll
have to leave it behind since &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;I'm changing jobs&lt;/a&gt;. I also use an external
USB mouse, which also enhances the experience. [&lt;a class="reference external" href="http://tshepang.net/1-more-machine-2-less"&gt;update&lt;/a&gt;]&lt;/p&gt;
</summary><category term="hardware"></category></entry><entry><title>me got meself a coding job</title><link href="http://tshepang.net/me-got-meself-a-coding-job" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-10-12:me-got-meself-a-coding-job</id><summary type="html">&lt;p&gt;I had one of the most exciting moments in my life when I got offered a
job at a &lt;a class="reference external" href="http://www.tauspace.com"&gt;software development company&lt;/a&gt; (the title is Analyst: Software
Engineering). I don't even know what my planned-for tasks are, and I was
all the more surprised because I think I didn't do well at the
interview. Great news is I didn't expect a coding job so soon,
especially given I don't have previous professional exposure.&lt;/p&gt;
&lt;p&gt;I am an electronic technician (lesser than an engineer) by trade and am
pretty unhappy in my current job (testing, calibration, and
fault-finding of gyro-stabilised airborne surveillance/observation
systems). That's partly because I don't really get challenged since I'm
on a production line. I do strongly doubt I'd be job-hunting was I in
development/engineering.&lt;/p&gt;
&lt;p&gt;Best of all however is I'll be working on software, a dream job really,
considering I love computers and all, and specifically the software part
of it. Electronics is fine too, but the last time I really got close to
it was back in school, and I'm here talking of design, not &amp;quot;testing,
calibration...&amp;quot;.&lt;/p&gt;
&lt;p&gt;How lucky can one get!&lt;/p&gt;
</summary><category term="luck"></category></entry><entry><title>8.10 looks good</title><link href="http://tshepang.net/810-looks-good" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-10-03:810-looks-good</id><summary type="html">&lt;p&gt;Ubuntu 8.10 Beta has been released and, if &lt;a class="reference external" href="https://lists.ubuntu.com/archives/ubuntu-announce/2008-October/000114.html"&gt;the annoucement&lt;/a&gt; is to be
relied upon, things look good.&lt;/p&gt;
&lt;p&gt;What stands out above all else for me is 'guest sessions' which allows
users who don't have login credentials access to the system. It's
interesting that such a thing has been non-existent (or at least I don't
know how to set it up) in the distros I've used so far, and really is
useful, EG when you just wanna play some music from a machine. Many a
time I get glad when easily getting into a Microsoft system even though
that compromises security, a problem easily fixed in this release's
inclusion of easy encryption of user folders, which I suppose should
hide confidential data from prying eyes.&lt;/p&gt;
&lt;p&gt;That's not to say I'm gon be running an Ubuntu system anytime soon,
especially given that I'm rather happy here (okay, sometimes; I mean how
long am I going to wait for GNOME 2.24 to reach Sid) in Debian-land of
course, and can only wait for those features.&lt;/p&gt;
</summary><category term="non-Debian"></category><category term="GNOME"></category></entry><entry><title>enjoying net connection at home, finally</title><link href="http://tshepang.net/enjoying-net-connection-at-home-finally" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-28:enjoying-net-connection-at-home-finally</id><summary type="html">&lt;p&gt;After suffering with being forced to access the net on Windows XP &lt;a class="reference external" href="http://tshepang.net/net-connection-at-home-finally"&gt;for
over 2 weeks&lt;/a&gt;, I'm glad things turned out as I envisioned for I managed
to get my device working on Debian &lt;a class="reference external" href="http://mybroadband.co.za/vb/showthread.php/129619-Neotel-working-on-Linux!"&gt;with a lot of help&lt;/a&gt;. Here's what
went into my /etc/wvdial.conf:&lt;/p&gt;
&lt;!-- code-block: ini

[Dialer Defaults]
Phone = #777
Username = phone_number@neotel.co.za
Password = 1234
Stupid Mode = 1
Dial Command = ATDT

[Dialer neotel]
Modem = /dev/ttyUSB0
Baud = 460800
Modem Type = Analog Modem
Stupid Mode = 1 --&gt;
&lt;p&gt;I had to run &lt;tt class="docutils literal"&gt;sudo modprobe usbserial vendor=0x1d09 product=0x4000&lt;/tt&gt;
and then &lt;tt class="docutils literal"&gt;sudo wvdial neotel&lt;/tt&gt; afterwards and then I lived happily for
long...&lt;/p&gt;
&lt;p&gt;Now why is XP so uncomfortable? I'm used to many of the conveniences of
Debian that are absent in XP or I'm not motivated to find replacements for
stuff like workspaces, copy-text-on-highlight, Epiphany, Quod Libet,
debmirror, Nautilus, ...&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>my machines</title><link href="http://tshepang.net/my-machines" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-26:my-machines</id><summary type="html">&lt;p&gt;I have, since my first machine in 2004, owned 2 other complete systems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a Dell Inspiron desktop Core 2 Duo (Conroe) system boasting 2GB RAM
and 160GB HDD&lt;/li&gt;
&lt;li&gt;a power-hungry and underperfoming Pentium 4 Prescott system
(3.06GHz/1GB RAM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I currently primarily use the old P4 and it's still pretty decent at
2.66GHz and 0.5GB of RAM. It also sports a DVD-Writer and 250GB HDD, all
SATA. The other systems are used by those close to me for one reason or
another.&lt;/p&gt;
&lt;p&gt;The Dell Inspiron is my most recent machine. It got 3-year warranty on
it (which was quite a surprise) so I'm not touching its insides. This
system currenly dual-boots with Windows XP which a relative of mine uses
for music production, a task he claims FLOSS can't satisfactorily
fulfill.&lt;/p&gt;
&lt;p&gt;I should note the other systems I use at work:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An HP Core 2 Duo Conroe 1.86GHz/1GB RAM desktop, my primary workhorse
for building Debian, which dual-boots with Windows XP since it
actually is a shared machine for those I work with in the area (about
a dozen people), and of course a bit over-powered for what is claimed
to be an 'email-checking' and 'printing' machine. I just manage to
find time in-between these email/printing sessions to have it do the
grunt-work.&lt;/li&gt;
&lt;li&gt;a recently-acquired Pentium M 1.7GHz/500MB RAM HP/Compaq laptop which
provides quite decent performance too and a claimed battery life of
2+ hrs. This system also dual-boots with Windows XP since nearly all
that we need at work uses it. It's also the system where I do
software/programming study and miscellaneous reading on since it's
the only system at work I have exclusive access to.
[&lt;a class="reference external" href="http://tshepang.net/favorite-laptop"&gt;expansion/update&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've neglected to mention the other 2 systems I'm not interested in,
which I use at work for some work tasks, both Windows-based (and going
as far back as Windows 98!), and both under-powered but pretty
well-suited to their specific tasks (except that I still have to use
micro-floppy diskettes), and also uniteresting because they aren't
running my favorite operating system, Debian.&lt;/p&gt;
&lt;p&gt;That's 6 systems in total all running Debian, 3 of which dual-boot with
Windows XP, 1 dual-booting with Windows Vista (the Core 2 laptop), and 2
(including my primary system, mt first) purely Debian. Of these, the
only one with internet access is the desktop HP system at work actually,
mainly because web-access in SA isn't nearly as affordable as I'd like.&lt;/p&gt;
</summary><category term="hardware"></category></entry><entry><title>only the processor survives</title><link href="http://tshepang.net/only-the-processor-survives" rel="alternate"></link><updated>2013-06-09T12:23:05+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-26:only-the-processor-survives</id><summary type="html">&lt;p&gt;I only recently realized that my oldest computer system, the first I
ever bought, has all been renewed, bar the processor, an old-style P4
(Northwood) purchased July 2004.&lt;/p&gt;
&lt;p&gt;The original 80GB HDD, which I loved due to high reliability despite
serious punishment (I did so much experimenting with it including
multiple OS installations) until it failed earlier this year.&lt;/p&gt;
&lt;p&gt;The motherboard failed several months ago (difficult problems involving
USB connectivity and lack of sound, all intermittent, all resulting in
emotional pain).&lt;/p&gt;
&lt;p&gt;The SONY DVD-Writer which I loved due running reliably for years until
it failed earlier this year. I also lost the power supply which kept
resetting when, say for example I was inserting an optical disk and the
HDD was doing much seeking (both of which must have induced unberable
power spikes the PSU), an obvious sign of deterioration, and great
source of emotional pain too.&lt;/p&gt;
&lt;p&gt;The replacement included a case as well, so yes, even the case ain't
original.&lt;/p&gt;
&lt;p&gt;Additionally, I was initially all PATA (with those fucking annoying IDE
cables) and am all SATA now (luckily the replacement motherboard got 2
SATA ports, which is all I needed since I only got 1 optical drive and 1
HDD).&lt;/p&gt;
</summary><category term="hardware"></category></entry><entry><title>net connection at home, finally</title><link href="http://tshepang.net/net-connection-at-home-finally" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-16:net-connection-at-home-finally</id><summary type="html">&lt;p&gt;I got &lt;a class="reference external" href="http://www.neotel.co.za/"&gt;internet connection&lt;/a&gt; at home on September 12th (access at work
has been terminated). It's a 10GB/month connection that goes for R600
(around $80). Not too cheap but it's the cheapest (per MB) in the
country though, as far as I know.&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>being friendly towards customers</title><link href="http://tshepang.net/being-friendly-towards-customers" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-07-16:being-friendly-towards-customers</id><summary type="html">&lt;p&gt;I just a read &lt;a class="reference external" href="http://www.joelonsoftware.com/articles/fog0000000052.html"&gt;a very interesting post&lt;/a&gt; on how to gain market share,
and what prompted me to post is the following snippet which states the
advantages of being friendly towards customers:&lt;/p&gt;
&lt;blockquote&gt;
...It reminds me of independent booksellers, who said &amp;quot;why should I
make it comfortable for people to read books in my store? I want
them to buy the books!&amp;quot; And then one day Barnes and Nobles puts
&lt;em&gt;couches&lt;/em&gt; and &lt;em&gt;cafes&lt;/em&gt; in the stores and practically &lt;em&gt;begged&lt;/em&gt; people
to read books in their store without buying them. Now you've got all
these customers sitting in their stores for &lt;em&gt;hours&lt;/em&gt; at a time,
mittengrabben all the books with their filthy hands, and the
probability that they find something they want to buy is linearly
proportional to the amount of time they spend in the store, and even
the dinkiest Barnes and Nobles superstore in Iowa City rakes in
hundreds of dollars a &lt;em&gt;minute&lt;/em&gt; while the independent booksellers are
going out of business. Honey, Shakespeare and Company on Manhattan's
Upper West Side did &lt;em&gt;not&lt;/em&gt; close because Barnes and Nobles had
cheaper prices, it closed because Barnes and Nobles had &lt;em&gt;more human
beings in the building&lt;/em&gt;.&lt;/blockquote&gt;
&lt;p&gt;I used to frequent some local book/magazine franchise whose merchandise
I liked but just couldn't afford.
That made the experience uncomfortable, the risk of being told to leave.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>nuclear power needs greater exploitation?</title><link href="http://tshepang.net/nuclear-power-needs-greater-exploitation" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-07-13:nuclear-power-needs-greater-exploitation</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;So hybrid cars are just one piece of the bigger solution because the
problem is huge. Spewing billions of tons of carbon, plus 20,000
tons of thorium and uranium, plus thousands of tons of mercury and
arsenic into the air and our lungs is just stupid. It is especially
wrong for people to fear nuclear power whose worst accident was
Chernobyl with 50 dead and 4000 made very ill when coal kills more
than that in about an hour.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.softmachines.org/wordpress/?p=268#comment-18443"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another person who believes that harnessing the power of the atom
is the way to go to help avert the global energy crisis.
I am compelled to agree, though the issue is a complex one.&lt;/p&gt;
</summary><category term="quote"></category></entry><entry><title>developer of note: Andreas Barth</title><link href="http://tshepang.net/developer-of-note-andreas-barth" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-06-10:developer-of-note-andreas-barth</id><summary type="html">&lt;p&gt;Andreas Barth is about as a great a Debian release manager as Steve
Langasek, and though he recently stated &lt;a class="reference external" href="http://lists.debian.org/debian-devel-announce/2008/05/msg00000.html"&gt;the wish to reduce time on
release management&lt;/a&gt;, he just did a &lt;a class="reference external" href="http://lists.debian.org/debian-hppa/2008/06/msg00022.html"&gt;thorough analysis on the status of
the hppa port&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>more Tracker goodness</title><link href="http://tshepang.net/more-tracker-goodness" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-03-04:more-tracker-goodness</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;'s applet has recently received a revamp which, when clicked,
launches Tracker Search Tool instead of displaying the search box.
That's a minor detail considering &lt;a class="reference external" href="http://jamiemcc.livejournal.com/11308.html"&gt;the other work&lt;/a&gt; included in the 2
recent releases, most especially the option to auto-pause the daemon
when X events (mouse movement, keyboard presses) are taking place, a
feature which helps with system responsiveness. This shit rocks,
absolutely!&lt;/p&gt;
</summary><category term="Tracker"></category></entry><entry><title>WTC twin towers and the BBC documentary</title><link href="http://tshepang.net/wtc-twin-towers-and-the-bbc-documentary" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-02-05:wtc-twin-towers-and-the-bbc-documentary</id><summary type="html">&lt;p&gt;I normally dislike documentaries which tend to be dumbed-down,
over-emphasizing certain concepts, and worse still, treated with
over-dramatic music and other cinematic touches like re-enactments and
camera play. That's why Part 1 of Imagination: A Short History of Tall
Buildings, happens to be quite a relief, since it turns to be of mild
presentation with excellent use of music, apart from also being a very
effective piece in its primary purpose of providing information. It
actually brings again to life my love for high-rises which, in my
memory, really began when I saw a tremendously gorgeous picture of the
Manhattan skyline, with the twin towers at the center, an image I found
in World Book Encyclopedia back in 1995. That image made me fall in love
with those twin towers, which to me were the most interesting structures
in all of New York, such that I still don't understand why I hear that
many didn't like the structures, the reason for which I still have to
find out.&lt;/p&gt;
</summary></entry><entry><title>Tracker goodness</title><link href="http://tshepang.net/tracker-goodness" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-02-01:tracker-goodness</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; hasn't been around as long as Beagle has but seems more
advanced, possessing various utilities like the applet which can be used
to launch all Tracker GUI utilities (Tracker Search Tool, Tracker
Preferences, and Tracker Statistics), displaying the daemon (trackerd)
status, providing the functionality of pausing the Tracker daemon, as
well as providing a (convenient) search dialogue [&lt;a class="reference external" href="http://tshepang.net/more-tracker-goodness"&gt;update&lt;/a&gt;]. I wonder
if Beagle has lovely tools like this, but it's main advantage is that it
supports far more data formats that Tracker does, while it still is
hungry for memory (version 0.3.2).&lt;/p&gt;
&lt;p&gt;One particular thing that encouraged this post however is Tracker
Statistics, when I discovered that it actually is self-updating. This
change, which I apparently missed, was committed October last year, and
got me really impressed. Now if only all those advanced options were
less buggy...&lt;/p&gt;
&lt;p&gt;While I'm at it I might as well mention how much I love the new Tracker
Preferences feature which makes it restart/reindex user's data depending
on what preferences were changed. That's gorgeous. Now if only it
performed such restarting/reindex faster than it often does (especially
when it is indexing), since one often has to wait 'forever' for such to
happen.&lt;/p&gt;
</summary><category term="Tracker"></category></entry><entry><title>games in Debian</title><link href="http://tshepang.net/games-in-debian" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-12-03:games-in-debian</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://packages.debian.org/sid/blobwars"&gt;Blob Wars&lt;/a&gt;, which resembles Mario, has become a serious hit with my
9-year-old brother and a number of friends, which makes me happy since
it could very well become their GNU/Linux killer app. I came across it
while looking for some Debian games on the request of that brother, who
was then responsible for spreading its fame.&lt;/p&gt;
&lt;p&gt;Also, &lt;a class="reference external" href="http://packages.debian.org/sid/ceferino"&gt;Ceferino&lt;/a&gt;, a more favorite of mine, seems to also be catching up
with Blob Wars with that same game-lover crew.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>developer of note: Alexander Larsson</title><link href="http://tshepang.net/developer-of-note-alexander-larsson" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-11-09:developer-of-note-alexander-larsson</id><summary type="html">&lt;p&gt;I could not keep away from admiring the tremendous amount of work she
does, most recently &lt;a class="reference external" href="http://mail.gnome.org/archives/desktop-devel-list/2007-September/msg00401.html"&gt;GVFS and GIO&lt;/a&gt; (both of which have just been
&lt;a class="reference external" href="http://mail.gnome.org/archives/gnome-announce-list/2007-November/msg00006.html"&gt;released&lt;/a&gt;), and previously, GtkPrint.&lt;/p&gt;
</summary><category term="developer-of-note"></category><category term="GNOME"></category></entry><entry><title>Quod Libet and arrogance</title><link href="http://tshepang.net/quod-libet-and-arrogance" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-08-19:quod-libet-and-arrogance</id><summary type="html">&lt;p&gt;I've just seen, for the first time in memory, a concept of arrogant
design stated &lt;a class="reference external" href="http://mystilleef.blogspot.com/2006/12/031-coming-soon-to-distro-near-you.html#c4991460165173246170"&gt;publicly&lt;/a&gt;,
a concept whose awareness previously existed only in my mind.
This concept was brought up by my experiences with &lt;a class="reference external" href="http://code.google.com/p/quodlibet/"&gt;Quod Libet&lt;/a&gt;,
my favorite audio player.
It unfortunately doesn't conform to some common standards:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I can't open a song directly from a file manager (Nautilus) requiring
me to open the application itself first, as if it's the standard
operating environment, yet it's folder view is less than perfect, in
that it doesn't automatically update the contents if changed
externally.&lt;/li&gt;
&lt;li&gt;It doesn't use well-known shortcuts like B for previous track and N
for next track, and invents its own, and if there's not enough
already.&lt;/li&gt;
&lt;li&gt;It does not allow me to drag a folder containing tracks, meaning I
have to use its own interface to open all tracks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As regards the first link here, someone else also stated that Scribes'
design is arrogant too, though I don't think so. Scribes is just
excellent and I don't see the need for another editor, except if it had
code 'folding' and started-up faster than the current Scribes' 10
seconds. [&lt;strong&gt;update&lt;/strong&gt;: such &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;a replacement&lt;/a&gt; was eventually discovered!]&lt;/p&gt;
</summary><category term="untagged"></category></entry><entry><title>Anarchism and the GPL</title><link href="http://tshepang.net/anarchism-and-the-gpl" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-08-16:anarchism-and-the-gpl</id><summary type="html">&lt;p&gt;I was reading some old Debian posts where there was an argument brewing
regarding the existence of anarchy within Debian. A notable point raised
was that the existence of the GPL, the leading FLOSS licence, was
impossible because a licence's existence requires laws to exist. The
argument was that, since anarchy is against law (due to the idea that
law is designed to defend the elites and oppress the majority), then
there can't be free software.&lt;/p&gt;
&lt;p&gt;What's notable about the argument is that it's a pretty dumb. Now since
anarchy ain't mainstream, it seems okay to use the current system to
enforce some form of anarchy by law (use what little you have). GPL
creator himself states that free software (subset of FLOSS) existed in
MIT without requiring licences and then states that it's companies which
refused open access to code, forcing GPL creator (Richard Stallman) to
start a project to develop a truly free Operating System. In an
anarchistic society, there certainly seems to be no motivation to
develop non-FLOSS, but in today's rogue society, there's plenty.&lt;/p&gt;
</summary><category term="politics"></category><category term="Anarchism"></category></entry><entry><title>one less angel</title><link href="http://tshepang.net/one-less-angel" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-08-07:one-less-angel</id><summary type="html">&lt;p&gt;There are not that many people I know personally who are angels, and one
of those died recently as a result of a car and truck collision. The
other occupants in the car, all three of them, did not survive either.
The tragedy is more notable because the guy, Yandisa Mfokazi, was among
my greatest friends ever. This is the guy whose family treated me like
royalty on a &lt;a class="reference external" href="http://tshepang.net/a-visit-to-eastern-cape"&gt;recent visit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of all personal losses I have ever experienced, this is the greatest.&lt;/p&gt;
</summary></entry><entry><title>Tracker 0.6.0</title><link href="http://tshepang.net/tracker-060" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-07-25:tracker-060</id><summary type="html">&lt;p&gt;6 months have passed since the &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2007-January/msg00249.html"&gt;previous Tracker release&lt;/a&gt; and it's real
great to have &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2007-July/msg00297.html"&gt;another fresh one&lt;/a&gt;. During development, its GUI
interface (TST) has went through two revamps, each being an improvement
on the previous one. This implies that those who have only ever used
that January's release have missed a TST which had categories (All
Files, Documents, Images, ...) which were presented as tabs, which
shouldn't matter anyways since the current interface, which uses a
sidebar instead, rocks like hell. Another highlight is the inclusion of
tracker-preferences UI which allows for easy configuration.&lt;/p&gt;
</summary><category term="Tracker"></category></entry><entry><title>swarm theory</title><link href="http://tshepang.net/swarm-theory" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-07-09:swarm-theory</id><summary type="html">&lt;p&gt;It's interesting that &lt;a class="reference external" href="http://anarchism.pageabode.com/afaq/secIcon.html"&gt;the article&lt;/a&gt; that documents swarm behaviour
confirms the philosophy that I've held for a few years now that states
that &amp;quot;human society is too complex to comprehend&amp;quot;. It's also interesting
that the article's conclusion is pretty compatible with a [society
imagined by anarchists][].&lt;/p&gt;
</summary></entry><entry><title>developer of note: Steve Langasek</title><link href="http://tshepang.net/developer-of-note-steve-langasek" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-06-11:developer-of-note-steve-langasek</id><summary type="html">&lt;p&gt;Steve Langasek has been Debian release manager for over two years and
always managed to impress me with his technical knowledge of Debian
packaging as well as relentless effort into getting this, the Debian
system, into a releasable operating system. He is the definitive Debian
watchdog, for I often pay attention when it's his turn to talk on
mailing lists, and he also happens to be among the most powerful of all
DD's (for it's said that Debian release managers tend to be more
powerful than Debian project leaders). Grandmaster!&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>Anarchism and teen sexuality</title><link href="http://tshepang.net/anarchism-and-teen-sexuality" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-06-01:anarchism-and-teen-sexuality</id><summary type="html">&lt;p&gt;There's a well-researched document named The Anarchist FAQ (AFAQ)
included in Debian which I spent some time reading. This wasn't a
first-time effort by the way, for the doc is very large. What prompted
the post is the very radical idea contained therein that parents should
encourage their teens to engage in sexual activity, defending such a
position by pointing to evidence that much social decay owes to sexual
taboos. It's really amazing what I read and I haven't been intrigued so
much by a philosophical theory in such a long time. Oh, and by the way,
anarchism is an extremely attractive theory, though I have very many
questions still. I'll keep studying to understand more.&lt;/p&gt;
</summary><category term="politics"></category><category term="Anarchism"></category></entry><entry><title>Nanotech and Open Source</title><link href="http://tshepang.net/nanotech-and-open-source" rel="alternate"></link><updated>2013-06-09T12:23:08+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-05-18:nanotech-and-open-source</id><summary type="html">&lt;p&gt;I was fascinated to find that Christine Peterson of Nanotech fame
&lt;a class="reference external" href="http://www.foresight.org/about/Peterson.html"&gt;coined&lt;/a&gt; the term Open Source (more or less, a business-friendly name
for Free/Libre software, leading to a common compromise of calling the
entire thing FLOSS for Free/Libre/Open Source Software). I remember Eric
Drexler, possibly the greatest force in that most anticipated of
technologies, mentioning something about FLOSS but I didn't know that he
was so closely-invoved as to personally interact with Bruce Perens, one
of the key FLOSS representatives.&lt;/p&gt;
</summary><category term="future-tech"></category></entry><entry><title>Debian and Linux</title><link href="http://tshepang.net/debian-and-linux" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-05-17:debian-and-linux</id><summary type="html">&lt;p&gt;There is a Debian &lt;a class="reference external" href="http://wiki.debian.org/DebianHistory?action=AttachFile&amp;amp;do=get&amp;amp;target=debconf4_history_roundtable.txt"&gt;history discussion&lt;/a&gt; among Debian old-timers where
a point was raised that &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Ian_Murdock"&gt;Ian Murdock&lt;/a&gt;, Debian founder,
successfully transferred project leadership to someone else, a fact that
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Bdale_Garbee"&gt;Bdale Garbee&lt;/a&gt; stated to not yet have taken place with Linux, the
poster child of FLOSS. It's also interesting to see Murdock praise
successive leadership as superior to his.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>a visit to Eastern Cape</title><link href="http://tshepang.net/a-visit-to-eastern-cape" rel="alternate"></link><updated>2013-06-09T12:23:09+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-05-07:a-visit-to-eastern-cape</id><summary type="html">&lt;p&gt;I enjoyed the beautiful countryside of Nyosini, a small (a few hundred
households?) rural village nearby a buzzing Mount Frere, a town set atop
a hill of the same name. This &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Eastern_Cape"&gt;Eastern Cape&lt;/a&gt; village is the home of a
friend of mine and the visit happened to be an excuse to see the
province for the first time in my life, and the highlight was the
amazing hospitality granted by the home we stayed during most of the
visit, and the closeness of family I experienced here is unmatched in
memory. Notable and positive mention ought be granted to 3 characters
(Lwazi, Bongo, Siya) for reasons I'm too lazy to mention, much like I
won't mention yet 3 more characters. [&lt;a class="reference external" href="http://tshepang.net/another-visit-to-eastern-cape"&gt;another visit&lt;/a&gt;]&lt;/p&gt;
</summary></entry><entry><title>developer of note: Aurelien Jarno</title><link href="http://tshepang.net/developer-of-note-aurelien-jarno" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-05-07:developer-of-note-aurelien-jarno</id><summary type="html">&lt;p&gt;In celebration of the beginning of this exercise, I recognize Aurelien
Jarno as a very notable developer. This is due to his tireless efforts
as the number one GLibC co-maintainer in Debian since several months (if
the package's debian changelog is to be relied upon). Also, GLibC,
together with GCC and Linux, ought to be regarded as the most important
packages of any GNU/Linux system.&lt;/p&gt;
</summary><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>Scribes; building GNOME 2.16 with Debian</title><link href="http://tshepang.net/scribes-building-gnome-216-with-debian" rel="alternate"></link><updated>2013-06-09T12:23:06+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-04-17:scribes-building-gnome-216-with-debian</id><summary type="html">&lt;p&gt;In order to minimize bandwidth usage, I have recently restricted myself
to building a local repository consisting only of source packages as
opposed to the previous times when I only did binary package downloads.
This was helped by my recently-acquired skill of building Debian
packages from source, most often just 3 simple commands:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;build-dep&lt;/span&gt; nautilus&lt;/tt&gt; (retrieves nautilus' build
dependencies)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; source &lt;span class="pre"&gt;--build&lt;/span&gt; nautilus&lt;/tt&gt; (downloads nautilus' source
into current directory and builds a Debian binary package out of it)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sudo dpkg &lt;span class="pre"&gt;--install&lt;/span&gt; *deb&lt;/tt&gt; (installs the .deb files stated on the
command line onto the system)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've been practicing the above procedure on several packages, including
monsters like Linux, GLibC and OpenOffice.org, and it worked pretty
well.&lt;/p&gt;
&lt;p&gt;I did the same for GNOME 2.16/2.18 packages (Debian GNOME maintainers
haven't completed the job of migrating to 2.18 yet) available in
Debian's &lt;a class="reference external" href="http://packages.debian.org/experimental/"&gt;Experimental repository&lt;/a&gt;. This effort was initially targetted
at building 2.16 version of python-gnome and 2.10 version of python-gtk2
in order to try to build Scribes, after a previous failure. But then,
since I had much GNOME infrastructure (libgtk2, libbonono, libgnomevfs2,
...) already built, I proceeded on building some of my favorites as well
(nautilus, gnome-terminal, gedit, etc.), and, even though I only had ~3
hours of sleep, I woke up a happy being.&lt;/p&gt;
&lt;p&gt;I almost forgot to mention that Scribes managed to run properly, though
I didn't have enough time to check it out properly. It sure looks good
and am looking forward to it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[a day later]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Although I managed to get &lt;a class="reference external" href="http://scribes.sourceforge.net/index.html"&gt;Scribes&lt;/a&gt; to hang at least once, here's the
more positive facts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I really do love the auto-save feature&lt;/li&gt;
&lt;li&gt;the interface is real clean, providing a fresh departure from the
stately (and beloved) &lt;a class="reference external" href="http://www.gnome.org/projects/gedit/"&gt;gedit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;it's got word-suggestion by default&lt;/li&gt;
&lt;li&gt;there's some other nifty nice features like various editing
capabilities which are far more powerful than gedit provides&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Debian"></category><category term="GNOME"></category></entry><entry><title>1st usage of RSS feeds</title><link href="http://tshepang.net/1st-usage-of-rss-feeds" rel="alternate"></link><updated>2013-06-09T12:23:07+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-04-16:1st-usage-of-rss-feeds</id><summary type="html">&lt;p&gt;Browsing &lt;a class="reference external" href="http://planet.debian.org"&gt;Debian Planet&lt;/a&gt; today led me to the usage of Google Reader.
I've been ignoring this technology because I was too lazy to figure it out,
but Google Reader makes it so easy it does not require me to think. Is kool.&lt;/p&gt;
</summary><category term="Debian"></category></entry><entry><title>1st FLOSS patch contribution</title><link href="http://tshepang.net/1st-floss-patch-contribution" rel="alternate"></link><updated>2013-09-29T18:46:48+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-04-03:1st-floss-patch-contribution</id><summary type="html">&lt;p&gt;Back in January 2007, I sent a patch that slightly improved the README
file found in the root directory of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;, an exciting project that
is meant to be a data indexer (like &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Google_Desktop"&gt;Google Desktop&lt;/a&gt;) and much more.
This is what I consider the first ever FLOSS contribution I ever made. I
went on to make some minor code patches which also taught me a few
things, like &lt;a class="reference external" href="http://developer.gnome.org/gtk2/stable/"&gt;GTK+&lt;/a&gt; and &lt;a class="reference external" href="http://developer.gnome.org/glib/stable/"&gt;GLib API&lt;/a&gt;.&lt;/p&gt;
</summary><category term="GNOME"></category><category term="Tracker"></category></entry></feed>