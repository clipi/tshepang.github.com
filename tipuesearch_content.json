{
    "pages": [
        {
            "tags": "pages", 
            "loc": "http://tshepang.net/about-me.html", 
            "title": "about me", 
            "text": "\nTshepang Lekhonkhobe\ntshepang@gmail.com\nGauteng province, South Africa\n\nI do software development for a living and as a hobby\n(examples). My favorite ecosystem (and language) is that of\nPython, and my OS of choice is Debian.\nI watch perhaps too many movies, and I spend perhaps too much time\non the web. I also love music, as well as engaging conversation.\n\nThe sources for this blog can be found on Bitbucket.\n"
        }, 
        {
            "tags": "pages", 
            "loc": "http://tshepang.net/key-posts.html", 
            "title": "key posts", 
            "text": "general\n\ntop sites\nwhere I live on the web\n\nsoftware\n\nproject-of-note series\ndeveloper-of-note series\nfavorite tools\n\nmusic\n\ntop tracks\ntop musicians\nhip-hop greats\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/favorite-floss", 
            "title": "favorite FLOSS", 
            "text": "For a piece of FLOSS (free/libre and open source software) to be here,\nit has to both be personally useful and I have to like it a lot:\nbackup: rdiff-backup\ndesktop: GNOME\ndevelopment: Python, Emacs, git-cola\nmisc utilities: grep, Sudo, reprepro, Lsof, less, Meld,\nUptimed, top, Tracker, Ex Falso, wajig, GNOME system monitor applet,\nxfrun4, coreutils (wc, tail), LinkChecker, Iotop, man,\nOpenSSH, vnstat\nspreadsheet: gnumeric\nterminal emulator: GNOME Terminal\nvirtualisation: VirtualBox\nversion control system: Mercurial\nweb browser: Chrome/Chromium\nnon-FLOSS: Disqus, Gmail, Stack Exchange, Bitbucket\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/about-developer-of-note-series", 
            "title": "about 'developer of note' series", 
            "text": "I respect a lot of software developers, but many of those are not\ngoing to have an entry in this series, and not because they are lesser\nin my eyes.\nHere's the criteria I use to regard someone as developer of the\nnote:\n\nI need a news item that would trigger a post.\nThing is, if you write about someone,\nyou actually need to have some content (duh!),\nand saying \"Guide van Rossum rocks for creating Python, and am grateful!\"\nis simply not enough, hence a need for a trigger.\nIn fact, I used to call this series developer of the moment,\nbut at some point felt that the new name is more fitting,\nespecially since a few of these honorable developers actually generated\nsome new triggers along the way.\nThe more obvious requirement is that the developer need to have done\nsome thing that I truly appreciate.\nAt times, I fail to put into words just how much.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/blogging-with-pelican", 
            "title": "blogging with Pelican", 
            "text": "notes:\n\nI have a separate post on what I love about static website generators.\nThis post was first published on 2012-05-20,\nwhich is before I started using liquidluck, a competing tool.\nAnd then I moved back 2013-09-29 due to development inactivity\nof liquidluck.\n\nPelican is a static blog generator;\nit converts marked-up text files to html\n(Pelican supports Markdown and reStructuredText).\nThe resulting site is complete with an index (Archives view),\nTags, Categories, and Pages (for non-bloggy stuff like a CV or About Me file).\nAs for my blog, its tree structure looks like this:\n\nbuild/...\npages/{about-me.rst, key-posts.rst}\nposts/{arts/, computing/, misc/}\nCNAME\nfabfile.py\nnew-post.py\nREADME.rst\nsettings.py\n\n\nThe build directory is where the output of the build process is\nstored.\nThe pages directory is for any content that isn't blog posts.\nThe posts directory is where the large chunk of content lives,\nthe blog posts themselves.\nEach of the four directories in there represent a Category, for example:\nif you place some file in arts/,\nthe post will be marked as falling under arts Category.\nI host my blog on GitHub, using a service the call GitHub Pages.\nCNAME is a file required by that service in the case where I want\nto use a domain other than tshepang.github.io.\nIt's content is tshepang.net.\nfabfile.py contains the build instructions, all for convenience\nso that I only need to run 2 commands, one for the build, and another\nfor GitHub upload. However, I mostly just run one command that does\nboth.\nThe settings.py file contains Pelican configuration.\nIt should be somewhat mostly self-explanatory, but for those things that\naren't so obvious, do consult the documentation.\nREADME.rst has some basic instructions, as well as repository license.\n\nNow as for the post itself, you need metadata to go with it.\nThis is stuff like title, date, and tags.\nIt can be tedious to create all such mundate stuff, especially the date.\nThat's why I wrote a script that generates that file and populates it\nwith the given metadata:\n\n$ python new-post.py 'my blogging setup' misc --tags blogging\n\nThis is the metadata, and also the beginning of the file:\n\nmy blogging setup\n=================\n\n:date: 2012-04-12\n:tags: blogging\n\nThe script also opens the file in my favorite editor,\nso I can start adding content.\nWhen I'm done with the changes,\nI ensure I'm in the root directory of my blog, commit\n(hg commit --message 'new post') and run:\n\n$ fab\n\nThat's a fabric command that uses the instructions found in fabfile.py.\nIt builds the site, and then pushes it to GitHub Pages.\nIt also pushes the sources to Bitbucket.\nWithin a minute, the blog will be updated.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/favorite-buildings", 
            "title": "favorite buildings", 
            "text": "\nBurj Khalifa:\ntallest building on earth\nbeautiful, iconic design\n\n\nPetronas Towers:\nthird tallest buildings on earth\nstunning design\n\n\nWillis Tower (was Sears Tower)\nlong-time tallest building (a wonder of my teenage years, and beyond)\nicon of Chicago skyline\n\n\n\n\nThe WTC Twin Towers would be here if they were still standing. At the\ntime of their destruction, I admired more than any other buildings on\nthe planet. Together with Statue of Liberty, they were they greatest\nstructures in all of New York City.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/favorite-pelican-themes", 
            "title": "favorite Pelican themes", 
            "text": "I don't like the default Pelican theme, notmyidea:\n\nIt is decent, but the post metadata feels cramped where its placed.\nThe is no visible link to tags, never-mind a tag cloud (which is handy).\nI just don't like the general look.\n\nSo, I had a look at the others:\n\nElegant\nThat it is the least static-like of all themes I've seen yet, this is\nthe most innovative one I've seen yet. One of my favorite features the\nsearch feature, which got me excited.\nIt has some issues though (to be fixed at some point):\n\nignores Twitter setting\nFeeds not supported\n\nIt's also not the prettiest of themes, but it will have to do, at\nleast for now.\n\n\ngum\nI was impressed enough that I was strongly considering settling for\nthis one, despite the following issues:\n\nno Tags on individual Posts\nno Categories on individual Posts\n\nBut, it doesn't display bullets. I expect this was just an oversight.\n\n\nmonospace\n\n[win] simple and elegant design\n[win] displays pages as a list, all but the newest one in the view\n[win] me loving the Archives view\nCategories are not shown in a prominent place (e.g. menu bar)\nno Tags on individual Posts\nno Categories on individual Posts\nignores Twitter setting\nPost titles are capitalised (minor issue)\n\n\n\nJust Read\n\n[win] elegant and simple design (my favorite of all)\n[win] displays pages as a list, all but the newest one in the view\nCategories are 2nd-class citizens: they aren't shown on the index page\nbullets are done wrong: the bullet-ed text is not indented\non post view, there is no distinction between Tags and Categories\ntoo much border space on code snippets (pre tag?)\nbackground for code snippets is not distinctive\n\n\n\ntuxlite_tbs\n\n[win] clean and simple design: nice menu-bar and sidebars\ntags aren't shown along-aside posts\n\n\n\nMockingbird\n\n[win] very nice and clean design\ndate on Archives looks like shit\nbackground for code snippets is not distinctive\nCategories only visible on individual Posts\nignores Twitter setting\ndoes not support Disqus\n\n\n\nneat\n\n[win] the look is different; it feels calm\n\nArchives view is not ideal, though it's not in a prominent location\n\nCategories are not shown in a prominent place (e.g. on menu bar)\n\nwhen custom fields are\nnot specified, they are handled in a naive manner:\n\n\n\n\n\nChunk\n\n[win] a trendy look\noversized text, especially blog title\nbackground for code snippets is not distinctive\nArchives look like shit\nignores Twitter setting\n\n\n\nBootstrap 2\n\n[win] the Menu bar is unbeatable\nthe general look is too busy:\nthe Categories and Tags on the right must go\nwho wants snippets on posts\nshowing Category and Tag on main views\n\n\nseparate tag cloud page missing\nline length too long\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/superstar-projects-and-associated-implementation-languages", 
            "title": "superstar projects, and associated implementation languages", 
            "text": "\nC\n\nGCC\nGNOME\nPHP\nLinux\nCPython\n\n\n\nC++\n\nBlender\nFirefox\nKDE\nOpenOffice.org/Libreoffice\n\n\n\nC#\n\nStack Overflow (non-FLOSS)\n\n\n\nJava\n\nEclipse\n\n\n\nPython\n\nYoutube (non-FLOSS)\nDropbox (non-FLOSS)\nDisqus (non-FLOSS)\nDjango\nMercurial\n\n\n\nPHP\n\nFacebook (non-FLOSS)\nWikipedia\nWordpress\n\n\n\nRuby\n\nRuby on Rails\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/ideal-static-blog-generator", 
            "title": "ideal static blog generator", 
            "text": "Anything not listed below is either stuff I take for granted or simply\nmissed:\n\nreStructuredText support is mandatory, and so is being written in\nPython (I is a fanboy).\n3 alternatives for the main page:\nThe latest post should be displayed in its entirety, and the rest\ndisplayed in an Archive view below it (so one can quickly search\nall post Titles without leaving that page).\nIt should be an About Page.\nIt should present Archive View.\n\n\nCategories should be determined by directory into which a post is\nplaced if not explicitly specified (in file metadata section).\nAbility to determine post date from file mtime.\nPost Date should never be placed at the bottom of a Post.\nAn option to have clean urls (i.e. trailing .html removed).\nDate-based directory structure should not be mandatory (unlike with\nTinkerer).\nInline literals and literal blocks (for code) should be\ndistinguished by background colour; using different fonts is not\ngood enough.\nTags (and maybe Categories) should be displayed on each post.\nA feed icon that is visible from the main page (and maybe Category\npages).\nBlogofile has a strange requirement of having post headers be YAML\nformat. Maybe there's a good reason, but I want my generator to\nnot require anything special in file contents.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-valgrind", 
            "title": "project of note: Valgrind", 
            "text": "I have, since using Valgrind (and reading a bit of its documentation)\nsome years ago, developed much respect for it. It is quite an advanced\ntool, and though its primary use is detecting memory leaks, I am here\ngoing to explore its other functionality... calculating the cost of\neach line of code in the CPU. This is useful when tuning programs for\nperformance.\nFollowing is example code; it accepts 2 arguments, a filename and\ncontent it will write to that file:\n#include <string.h>\n#include <errno.h>\n#include <stdio.h>\n#include <fcntl.h>\n#include <unistd.h>\n\nint\nmain (int argc, char **argv)\n{\n    char path[0xFF];\n    char content[0xFF];\n    int fd;\n    ssize_t written;\n\n    if (argc < 3) {\n        fprintf (stderr, \"usage: %s <filename> <content>\\n\", argv[0]);\n        return 1;\n    }\n\n    strcpy (path, argv[1]);\n    sprintf (content, \"%s\\n\", argv[2]);\n\n    fd = creat (path, S_IRWXU);\n    if (fd == -1) {\n        fprintf (stderr, \"open error: %s ('%s')\\n\", strerror (errno), path);\n        return 1;\n    }\n\n    written = write (fd, content, strlen (content));\n    if (written == -1) {\n        fprintf (stderr, \"write error: %s ('%s')\\n\", strerror (errno), path);\n        return 1;\n    }\n    return 0;\n}\n\nBuild command (using GCC 4.8.1):\n\ngcc -Wall -pedantic -g play.c -o play\n\nSystem details:\n\n$ uname --all\nLinux thome 3.11-trunk-amd64 #1 SMP Debian 3.11-1~exp1 (2013-09-12) x86_64 GNU/Linux\n$ sudo lshw -class processor\n*-cpu\n     description: CPU\n     product: Intel(R) Core(TM) i5-2410M CPU @ 2.30GHz\n     vendor: Intel Corp.\n     physical id: 4\n     bus info: cpu@0\n     version: Intel(R) Core(TM) i5-2410M CPU @ 2.30GHz\n     serial: To Be Filled By O.E.M.\n     slot: CPU 1\n     size: 2300MHz\n     capacity: 4GHz\n     width: 64 bits\n     clock: 100MHz\n     capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr\n     pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts\n     acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp\n     constant_tsc arch_perfmon pebs bts rep_good nopl xtopology\n     nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor\n     ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2\n     x2apic popcnt tsc_deadline_timer xsave avx lahf_lm ida arat epb\n     xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid\n     aes cpufreq\n     configuration: cores=2 enabledcores=1 threads=2\n\nRunning the resulting binary with Callgrind:\n\n$ valgrind --tool=callgrind --callgrind-out-file=out ./play filename\nfilecontent\n==5308== Callgrind, a call-graph generating cache profiler\n==5308== Copyright (C) 2002-2012, and GNU GPL'd, by Josef Weidendorfer\net al.\n==5308== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright\ninfo\n==5308== Command: ./play filename filecontent\n==5308==\n==5308== For interactive control, run 'callgrind_control -h'.\n==5308==\n==5308== Events    : Ir\n==5308== Collected : 107520\n==5308==\n==5308== I   refs:      107,520\n$ cat filename\nfilecontent\n\nAnd finally, seeing closely the cost of each function call, where\nIr stands for Instruction cache reads, which you can read as\nnumber of CPU instructions. I have used tree=calling option so\nthat I can see the cost of all operations called by a parent (marked\nwith a *)\n\n$ callgrind_annotate --tree=calling out play.c\n--------------------------------------------------------------------------------\nProfile data file 'out' (creator: callgrind-3.8.1)\n--------------------------------------------------------------------------------\nI1 cache:\nD1 cache:\nLL cache:\nTimerange: Basic block 0 - 22326\nTrigger: Program termination\nProfiled target:  ./play filename filecontent (PID 5308, part 1)\nEvents recorded:  Ir\nEvents shown:     Ir\nEvent sort order: Ir\nThresholds:       99\nInclude dirs:\nUser annotated:   play.c\nAuto-annotation:  off\n\n--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n107,520  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\nIr  file:function\n--------------------------------------------------------------------------------\n\n24,113  *  /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:do_lookup_x [/lib/x86_64-linux-gnu/ld-2.17.so]\n1,053  >   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-misc.c:_dl_name_match_p (25x) [/lib/x86_64-linux-gnu/ld-2.17.so]\n13,423  >   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:check_match.9345 (88x) [/lib/x86_64-linux-gnu/ld-2.17.so]\n\n18,264  *  /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:_dl_lookup_symbol_x [/lib/x86_64-linux-gnu/ld-2.17.so]\n38,589  >   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:do_lookup_x (94x) [/lib/x86_64-linux-gnu/ld-2.17.so]\n\n15,836  *  /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object\n13  >   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/memmove.c:memcpy@GLIBC_2.2.5 (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n81  >   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcmp.S:strcasecmp (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n6  >   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcmp.S:strncasecmp (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n7  >   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/memset.S:memset (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n51,501  >   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:_dl_lookup_symbol_x (86x) [/lib/x86_64-linux-gnu/ld-2.17.so]\n18  >   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/../memcpy.S:memcpy (1x) [/lib/x86_64-linux-gnu/ld-2.17.so]\n67  >   /build/eglibc-TepTGA/eglibc-2.17/time/../sysdeps/unix/sysv/linux/x86_64/time.c:time (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n67  >   /build/eglibc-TepTGA/eglibc-2.17/time/../sysdeps/unix/sysv/linux/x86_64/gettimeofday.c:gettimeofday (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n6  >   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strnlen.S:strnlen (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]\n[snip; to be continued]\n\nI have trimmed the output to bring focus to the most interesting\noutput of all, which is the total cost for each line of my code:\n\n[continued]\n--------------------------------------------------------------------------------\n-- User-annotated source: play.c\n--------------------------------------------------------------------------------\nIr\n\n.  #include <string.h>\n.  #include <errno.h>\n.  #include <stdio.h>\n.  #include <fcntl.h>\n.  #include <unistd.h>\n.\n.  int\n.  main (int argc, char **argv)\n5  {\n.      char path[0xFF];\n.      char content[0xFF];\n.      int fd;\n.      ssize_t written;\n.\n2      if (argc < 3) {\n.     fprintf (stderr, \"usage: %s <filename> <content>\\n\", argv[0]);\n.     return 1;\n.      }\n.\n7      strcpy (path, argv[1]);\n21  => /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:__strcpy_sse2_unaligned (1x)\n799  => /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)\n8      sprintf (content, \"%s\\n\", argv[2]);\n1,188  => /build/eglibc-TepTGA/eglibc-2.17/stdio-common/sprintf.c:sprintf (1x)\n805  => /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)\n.\n5      fd = creat (path, S_IRWXU);\n766  => /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)\n7  => /build/eglibc-TepTGA/eglibc-2.17/io/../sysdeps/unix/syscall-template.S:creat (1x)\n2      if (fd == -1) {\n.     fprintf (stderr, \"open error: %s ('%s')\\n\", strerror (errno), path);\n.     return 1;\n.      }\n.\n10      written = write (fd, content, strlen (content));\n7  => /build/eglibc-TepTGA/eglibc-2.17/io/../sysdeps/unix/syscall-template.S:write (1x)\n14  => /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strlen-sse2-pminub.S:__strlen_sse2_pminub (1x)\n1,567  => /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)\n2      if (written == -1) {\n.     fprintf (stderr, \"write error: %s ('%s')\\n\", strerror (errno), path);\n.     return 1;\n.      }\n1      return 0;\n2  }\n\n--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n0  percentage of events annotated\n\nAs an aside, note that the indentation is messed up a bit.\n---\nSince I normally work at too high a level to care about CPU\ninstructions cycles at this detail, I found the exercise eye-opening.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/projects-with-excellent-documentation", 
            "title": "projects with excellent documentation", 
            "text": "Here is a list of projects whose documentation I found to be\nhighly-detailed and well-written.\n\nbig\n\nThe introductory tutorial of GNU Emacs (looks a lot better when\nrun from within Emacs), is written in a very gentle and careful way;\nit's among the best tutorials I've seen.  Same applies to the Emacs\nmanual, which I'm tempted to call the best I've read yet. It\nreally, really goes into painstaking detail, and seems to have been\nwritten by professional technical writers.\nCPython - I used to appreciate this more before I got closely\ninvolved, noticing warts here and there, and therefore taking it for\ngranted.\nsqlite3 - quite extensive, especially for an embeddable DBMS\n\n\n\nsmall\n\nSuds - multiple, well-written examples\nrdiff-backup usage examples - much smaller than the others listed\nhere, but nevertheless deserves mention because it's both gentle and\nthorough\n\nAs a sidenote, I've heard great things about Django's, but haven't\nreally looked yet.\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/person-of-interest-season-2-episode-16", 
            "title": "Person of Interest - Season 2 Episode 16", 
            "text": "I am a big fan of the series, Person of Interest. There is much to\ncelebrate, among which is the wonderful portrayal of the brilliant\ncreator of the machine that (illegally) looks for patterns in society\nso as to predict, with high certainty, the people will be involved in\nviolent crimes, either as victims or perpetrators.\nThe series' normal formula is that our heroic, bespectacled hero would\nmention the details of the new person, and his very capable sidekick,\na former assassin, would go follow this person, to try avert the\nimpending crime. In the 16th episode of the 2nd season, however, this\nformula isn't followed (by the camera). Instead we follow the person\nwho would be victim, and our heroes only appear midway through, like\nthey were secondary characters. It's beautiful.\nI love it when such breaks from normal routine occur, especially when\nthey are as well-made. Not to say this is the best episode of this\nseries so far (I can think of a few which were superior), nor was this\nthe first time such a break from normal routine occur (there were some\nin the earlier episodes of the season), but it felt fresh enough to be\nworth a mention in this blog of mine. What added to the excitement is\nthat it was the first time in the series that a so-called Relevant [1]\ncrime prevention was showed.\n\n\n\n[1]This means relevant to (U.S.) national security. This is as\nopposed to the sort solved by our heroes, which only involve\ncivil cases.\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/mentioning-alternatives-on-a-prominent-place", 
            "title": "mentioning alternatives on a prominent place", 
            "text": "It's an honorable thing to mention alternative and/or competing\ntechnologies on a project website.  It's even more interesting when\nthis is done on a promiment page. Here's a few of those who do it:\n\nLinux Target Image Builder (LTIB)\nLiferea\nvnStat\nLinkChecker (linked from main page)\nGittip (project README file)\nvcs (a top-level section in the official documentation)\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/packaging-my-first-qt-app", 
            "title": "packaging my first Qt app", 
            "text": "Someone asked me to try get some KDE package into Debian. I estimated\nthat it would take me around 10 hours to get it into good enough shape\nbefore asking some Debian Developer to upload it for me. Here goes\nsome rough estimates:\n\nhour 1: Find documentation on the subject; I got three after a\nquick search:\nUbuntu Packaging Guide\nCreate Ubuntu DEB package from a Qt application (marked as\ndeprecated, probably in favor of the official guide above)\nDebian Packaging Tutorial (from Debian package,\npackaging-tutorial)\n\n\nhour 2-3: Reading the Debian Packaging Tutorial which led me to\nreading dpkg-source manpage, using dh_make to create a\ndebian/ skeleton, and modifying the contents of that directory.\nhour 4-6: Struggling to kill the lintian complaint,\nbinary-without-manpage. I went as far as reading the source code\n(Perl) that performs the check, but that didn't help much. I could\nhave saved hours by looking at the Debian New Maintainers' Guide\nearlier. I also added export LDFLAGS=-Wl,-z,relro to\ndebian/rules file to kill hardening-no-relro lintian\nwarning.\nhour 7-8: Determine what dependencies would be needed by building from\na clean chroot (pbuilder). This was with the help of Debian New\nMaintainers' Guide, again.\nhour 9-10: Reading Debian wiki page on Hardening let me\nsimplify my packaging further... removing the need to specify\nhardening flags explicitly (commit). I also uploaded the package\nto mentors.debian.net, with the help of DebianMentorsFaq.\n\nThe resulting package now lives at\nhttps://bitbucket.org/tshepang/ksig/src. The changes I made, the\nactual packaging work, are in this directory.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/letta-mbulu-vs-miriam-makeba", 
            "title": "Letta Mbulu vs. Miriam Makeba", 
            "text": "I've been wondering for years which of these two music legends is\nsuperior.\nMiriam Makeba:\n\n3 masterpieces (Gauteng; A Luta Continua; Welela)\n5 excellent works (Mam Ndiyalila; Meet Me At the River; Goodbye\nPoverty; Jolinkomo; Olili)\n\nLetta Mbulu:\n\n1 landmark (Jikijela)\n3 masterpieces (Not Yet Uhuru; Nomathemba; Zimkile)\n6 excellent works (Music In the Air; Ndi-Phendule; Buza;\nI Need Your Love; Maru a pula; Kube)\n\nMy simple point system gives Makeba 11 points and Mbuli gets a\nwhooping 15. That's a scary number since it would mean she's superior\nto Salif Keita and just a point below Burning Spear! This I should\nrevisit!\n[sidenote] Oh, and I'm sure there's a lot of Miriam's work that I\nhaven't trawled through. Either that or Miriam Makeba is, though\nexcellent, is overrated, since I suspect she becomes a common answer to\nthe question \"who's the greatest female South African musician?\". That's\nthe answer that I also once had until I savoured much of Letta Mbulu's\nwork and walked away amazed.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-musicians", 
            "title": "top musicians", 
            "text": "The best musicians in history,\ncreated with the help of a simple point system.\n\nFela Kuti, 27\nBurning Spear, 18\nLetta Mbulu, 15\nSalif Keita, 14\nBob Marley, 13\nFugees, 12\nMiriam Makeba, 11\nThe Roots, 10\n\n\nFor quite a while, this list of grandmasters consisted of just three\nmusicians (Fela Kuti, Bob Marley, and Burning Spear); I was only\nsurprised that the later entrants, Salif Keita and Letta Mbulu beat\nmighty Bob, and that was based on just my thinking without actually\nmaking a list of tracks. Intuition isn't always reliable.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/from-pelican-to-liquidluck", 
            "title": "from Pelican to liquidluck", 
            "text": "notes:\n\nThis post was first published on 2012-07-05,\nwhich is shortly after I started using liquidluck.\nI have a separate post on what I love about static website generators.\n\n\nwhy Pelican rocks\n\nIt has categories\n(unlike nikola)\nPost metadata:\nif Date is not specified, file mtime is used (unlike blogofile)\nif Category is not specified, parent directory name is used\n(unlike blogofile)\ntitles are allowed to have any character (unlike blogofile)\nthere is an option to provide clean urls... remove trailing .html\n\n\nDoes not force one into having ugly date-based filesystem structure\n(unlike tinkerer)\n\n\n\nwhy Pelican rocks not\nThe default theme simply didn't fit my tastes,\nand the other themes weren't so satisfactory.\nI spent way too long fiddling with them, and just couldn't be happy.\n\n\nwhy liquidluck\nSo I have moved to liquidluck,\nand am hoping I will not be 'forced' to move again.\nIt's way too much work, and it took multiple messages between me and\nthe developer of this sleek new static site generator just to get it\nto behave the way I like it.\nI had to override stuff that's done by the software, by using this script,\nwhich helped give it the advantages that Pelican has over the\nother generators I mentioned, while also solving the one problem Pelican\nhas.. lack of a good-enough theme.\nThis was achieved with the help of that very helpful and responsive developer.\n\n\nissues\n\nThere is no visible way, at least for the default theme, to subscribe\nto RSS feeds of individual Categories.\n\nThe text is a bit blurry/faint with the default theme,\nand none of the other ones are close to good-enough for my liking,\nall but the promising one named responsive.\nIt got 2 issues so far (see live demo):\n\nDate is displayed at the bottom of a post...\nwhy make user scroll that far before presenting such a key piece of info.\nThere is no link anywhere allowing to visit Home.\n\n\nBackground color for <code> text is too unusual,\nand results in an ugly look.\nIt does not fit with the general general theme, so should be grey really,\nwhich would match with that of <pre> text.\nI fixed it myself with the following patch:\n\ndiff --git a/liquidluck/_themes/default/static/style.css b/liquidluck/_themes/default/static/style.css\nindex e90de80..94fa7e8 100644\n--- a/liquidluck/_themes/default/static/style.css\n+++ b/liquidluck/_themes/default/static/style.css\n@@ -112,7 +112,7 @@ pre {\n     border-radius: 3px;\n }\n code, tt {\n-    background-color: #fee9cc;\n+    background-color: #eee;\n     color: rgba(0, 0, 0, 0.75);\n     padding: 1px 3px;\n     font-size: 12px;\n\n\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-08-09", 
            "title": "links 2013-08-09", 
            "text": "\nsome of the challenges of maintaining a popular FLOSS project (via)\ngreat summary of current status of Gittip\nwhat it would take to build a general purpose search engine\nlots of impressive activity around Libreoffice\nHow A Web Design Goes Straight To Hell - nice humor\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-sphinx", 
            "title": "project of note: Sphinx", 
            "text": "Sphinx is a tool that is used to generate documentation from\nreStructuredText markup language, and is mainly used in the Python\necosystem. I honor it much for it is a really powerful system, and I\nhave come to appreciate it a lot recently, with my work on documentation\nof software that falls under the Pylons project.\nIt is a pity that the markup is not as simple as that of the more\npopular Markdown, but maybe that was out of necessity, since it is\nfar more advanced: it was initially built as a replacement for the\ntools that build CPython documentation, which is quite extensive and\nneeds lots of rails.\n\nAs an example of that power, have a look at these changes I made for\npyramid_tutorials. In that commit, the feature I used allows you to\ninclude code snippets directly from files, instead of doing the\ncopy-paste dance, avoiding duplication and rot. This feature is known as\nliteralinclude.\nAnother feature I recently worked with in the recent past with is\nintersphinx_mapping. What it does it allow one to generate\nreferences in reST as if those reference were local. For example, if\nyou wanted to generate a link to the CPython open() built-in\nfunction, you would need only specify it as :func:open.  This is\nas opposed to finding the actual link and specifying it normally.\nOne other feature I discovered (but haven't used yet) is Info field\nlists feature. To see it in action, visit this link, and then\nlook at its markup. It's gorgeous!\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/tools-i-use-all-the-time", 
            "title": "tools I use all the time", 
            "text": "Following are tools I use all the time, but am not necessarily loving.\nFor those I like a lot, see this list.\n\nDebian: my primary OS, and also my favorite\nEmacs: general text editor\nVim: it happens to be installed on a lot of systems at work, but I\nonly rarely use it on my workstation\nGNOME: primary Desktop Environment\ngnome-panel\ngnome-search-tool\ngnome-system-monitor\nnautilus\nfile-roller\n\n\nLiferea: would not be using this had it not been for Google Reader\nshutdown, but am glad they did cuz I like the tool, ugly and unkool\nas it is\nEvince: I would love to get a PDF reader with better navigation\nQuod Libet: audio player\nThunderbird: I prefer Evolution, but it gave me some issues I don't remember\nGNU toolchain (GCC, make, GLibC, ...)\nVLC: ugly interface, solid application\nGit: do I have a choice?\nMercurial: my favorite\nGoogle Chrome: I occasionally drop into Firefox when I\nexperience issues\nMeld: the most excellent diff tool I've used yet\ngit-cola: why me loves it\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-07-17", 
            "title": "links 2013-07-17", 
            "text": "\nwhy Python 3\nmy first Bitbucket follower\nOpen Products is an excellent essay by the admirable Chad\nWhitacre, Gittip founder\nimpressive Libreoffice clean-up work\nMoney and Open Source - an insightful opinion piece\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/major-projects-using-mercurial", 
            "title": "major projects using Mercurial", 
            "text": "Mercurial is the only version control system that I actually like, and\nI do celebrate each time I see a project use it. So, here I list the\nmost notable projects I am aware of that do, which also gives me hope\nthat it isn't being suffocated too much by Git:\n\nFirefox, on top 3 of all desktop web browsers (number of users)\nCPython, on top 10 of all programming languages\nMercurial, 2nd only to Git in terms of DVCS popularity, though\nmaybe lagging by 2 orders of magnitude :(\nOpenJDK, the top open source implementation of the Java platform\nSphinx, documentation generator used in most Python projects\nPyPy, likely the most exciting development in the entire Python\necosystem\nStack Exchange (proprietary), a family of Q&A sites which are,\nin my opinion, the best yet\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2013-07-09", 
            "title": "links 2013-07-09", 
            "text": "\nI was surprised to find that most sex workers enjoy their trade;\nit's a refreshing perspective, but as made clear by the post itself,\nthere isn't sufficient scientific research to confirm it.\nConsensus failure looks like worthy criticism of consensus\ndecision-making in large groups.\ngreat explanation of the concept of Confirmation Bias\n(honorable mention)\ngreat advice on which Charities to give to\nwhoever said anything involving bowel humor can't be beautiful is\nwrong; here is proof\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-tracks-fela-kuti", 
            "title": "top tracks: Fela Kuti", 
            "text": "\n3 landmarks\n\nLady (Shakara - 1972)\nConfusion (Confusion - 1975)\nIgbe (Na Shit) (Gentleman - 1973)\n\n\n\n3 masterpieces\n\nNo Agreement (No Agreement - 1977)\nShakara (Shakara - 1972)\nGentleman (Gentleman - 1973)\n\n\n\n12 excellent works\n\nEgbe Mi O (Fela's London Scene - 1970)\nFefe Naa Efe (Gentleman - 1973)\nWho No Know Go Know (Everything Scatter - 1975)\nJust Like That (Beast of No Nation - 1989)\nPansa Pansa (Underground System - 1992)\nEko Ile (Afrodisiac - 1973)\nAlu Jon Jonki Jon (Afrodisiac - 1973)\nBlack Man's Cry (Live! - 1971)\nWater No Get Enemy (Expensive Shit - 1975)\nZombie (Zombie - 1978)\nTeacher Don't Teach Me Nonsense (Teacher Don't Teach Me Nonsense\n-1986)\nIkoyi Mentality Versus Mushin Mentality (Why Black Man Dey Suffer\n-1971)\n\n\n\nhonorable mention\n\n\nWhy Black Man Dey Suffer (Why Black Man Dey Suffer - 1971):\nNot in the above lists because it gets spoiled by the vocals about halfway\nthrough. The instruments are incredible, and almost the only saving\ngrace of the song, but they start to sound repetitive several minutes\nin. The beginning parts of the song, including its vocals, would earn\nthis one a msterpiece had the rest been kept at that level.\n\n\n\nTrouble Sleep Yanga Wake Am (Roforofo Fight - 1972)\n\n\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/where-i-live-on-the-web", 
            "title": "where I live on the web", 
            "text": "I spend perhaps too much of my time online, and these are among the\ngreatest culprits:\nplanets: Debian, GNOME, Python\nPython: python-dev, GitHub\nStack Exchange: Stack Exchange sites (my profile)\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/floss-pipedreams", 
            "title": "FLOSS pipedreams", 
            "text": "Within FLOSS, I do have preferences (e.g. Python over Perl),\nbut this post is about my preferences over proprietary alternatives.\n3D content creation:\nBlender should be mainstream... used in blockbusters\ndesktop:\nGNOME should replace Mac OS X as THE desktop experience,\nand then steal the market\nCRM/ERP:\nTryton (or OpenERP) should steal SAP's market share\nimage manipulation:\nGIMP should acquire feature-parity with Photoshop, and then steal the market\nDBMS:\nPostgreSQL should acquire feature-parity with Oracle,\nand then steal the market\nOperating system:\nDebian should be THE reference platform for various user types\n(large corporations, audio/video professionals, software developers,\ngamers, etc.), taking the market away from OS X and Windows\nscientific computing:\nNumPy and pandas should acquire feature-parity with MATLAB,\nand then steal the market\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-06-01", 
            "title": "links 2013-06-01", 
            "text": "\na detailed look at the shortcomings of GitHub Pull Requests workflow\nit is sad seeing projects using Git, instead of Mercurial; it's\nsadder still seeing them move from Mercurial to Git; I am\nscared that my favorite VCS is becoming less and less relevant\nUsing Sphinx to Write Technical Books - nice guide\nHTML history\nintro to computer video\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/top-sites", 
            "title": "top sites", 
            "text": "atheist writing: Pharyngula\nLinux-related news: LWN\nrationality: Less Wrong\nsoftware development: Stack Overflow\nHTML5: diveintohtml5\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/god-of-war-trilogy", 
            "title": "'God of War' trilogy", 
            "text": "The last time I played any of the 3 games from the God of War\ntrilogy was nearly 2 years ago, but the experience still lives vividly\nin my mind; they offered among the greatest gaming experiences I ever\nhad. I haven't played any of the other 4 games in the series.\nI have known about the first game for years, before playing it, and it\nwas among the top of my wishlist. The appeal was simply the imagery of\nthe angry lead character (Kratos), the giants he was portrayed to\nbattle, the setting (ancient Greek mythology), as well as the title.\nWhen I finally managed to get my hands on the games (about 2 years\nago), they did not disappoint. The epic feel of it all, the character\ndesign (the best ever that covers ancient Greek mythology), and (as\nregards God of War III) impressive realism, makes for a fantastic\nseries. Sadly, this trilogy is only available for PlayStation (2 & 3).\nMy favorite characters:\n\nHercules (demigod, son of Zeus), who appears in the 3rd game of the\ntrilogy, is a mini-giant with an massive muscle structure and an\ninteresting attitude, not to mention armed with some awesomely\nlarge and powerful weapons, that the playable character (Kratos)\nluckily gets to play with. The moment where this Hercules character\nappears is among my most favorite battle scenes in the whole\ntrilogy.\nHades (God of the Underworld), who we also only get to fight in the\n3rd game of the trilogy, is another great design, and his\nunderworld the best environment of the whole trilogy. His\nassortment of weapons is also quite impressive, but the battle\ninvolving him, though quite good, could be more epic.\nThe Centaur General (human-horse being) were quite a presence. Not\nonly were they rather tough to beat, but they were also the most\ncharming characters in the whole trilogy. One wishes they had a\ngreater screen time. Note that there were other Centaurs in the\ntrilogy, but these particular ones were most interesting, and their\nslaying most... beautiful. They appear first time in the 3rd game\nin the trilogy.\nPoseidon (God of the Sea), is an interesting one. His represents\nthe most complex (and hardest) fight sequence in the entire\ntrilogy, it it also happens on the third installment of this fine\ntrilogy. It's not exactly my favorite, but his character has a\ncertain level of charm, and the final kill is particularly brutal.\nKratos, the protagonist, was most impressive in the first game, but\nhe was getting less interesting later on and the novelty of his\nanger was wearing off. He was also getting petty at times, and too\nbloodthirsty to be convincing. Regardless, he is a work of superb\ncharacter design, and this well-enhanced by the pale color and red\nstripes on his skin, as well as a body that makes him look like pure\nlethal.\nStone Talos are a one-of-a-kind character... muscular stone\nstatues that come to life to incur damage on our protagonist.\n\nAwesome as it is, the series does have weaknesses:\n\nThere is one notable bad work of character design, which is\nAres, the original god of war (a title Kratos took from him after\ndefeating him). He is totally uninresting (and clumsy), and the battle\nin which the two fight is the worst in the trilogy.\nOne other horrible character was the goat-snake-lion combo\ncharacter. It was probably a first in gaming history, but it was a\nreal stupid idea.\nThere were also some particilarly hard stages to pass, where I had\nto ask for help from a friend to proceed to the next level. I hate\nstuff like that... I normally pick the easiest difficulty level in\ngames, for I hate to struggle for too long.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-barry-warsaw", 
            "title": "developer of note: Barry Warsaw", 
            "text": "This guy, both an official Ubuntu developer and a core CPython\ndeveloper, is a great example of a FLOSS collaborator. He is always\npolite on mailing list discussions, kindly and patiently helps foster\ncollaboration between Debian and Ubuntu (there's been some\nconflicts between the two camps).  This is on top of his superb\ntechnical efforts demonstrated by his highly-detailed guides on\nvarious things, like upgrading various Python projects to run on\nPython 3 (example 1, example 2, example 3).\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-nick-coghlan", 
            "title": "developer of note: Nick Coghlan", 
            "text": "This is easily among the most active of all core CPython developers.\nHis productivity is ridiculous, and I seriously wonder how he manages\nto do all he does, especially since he does it in his free time. He\nalso tends to be quite stern, which is extra kool since he does it\nwhile displaying great depth of knowledge and maturity.  Also,\nhis great work has been officially recognized by the Python Software\nFoundation.\nThe first work that prompted this recognition as developer of note\nis the proposal, PEP 413. The idea is that the Python standard\nlibrary (stdlib) should release at a quicker rate than the Python\nlanguage itself.  This is a nice balance between two camps: those\nfavoring stability over quicker availability of features, and those\nfavoring the opposite.  The PEP (Python Enhancement Proposal) is quite\nthorough, and is partly in opposition to the earlier PEP 407, which\nproposes that all of CPython (the language and its stdlib) should\nrelease faster.  Nick Coghlan outlines the disadvantages with that\napproach in PEP 413 as well.\nAnother PEP he is working on is PEP 432. Titled Simplifying the\nCPython startup sequence, it's a highly detailed proposal to\nre-organise some of CPython code to ease maintenance. His deep\nknowledge on the project's internals is also exposed.\nNick also builds and maintains a collection of notes known simply as\nNick Coghlan's Python Notes. There is much wisdom there (complete\nwith high quality clear writing), favorite of which is the just-updated\nIncremental Plans to Improve Python Packaging, a thorough write-up\non the history, current state, and future plans regarding the story of\npackaging (and installation) in the Python ecosystem.  He also happens\nto be a great champion in pushing for progress on that front.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/i-nid-tu-rilex", 
            "title": "I nid tu rilex", 
            "text": "\n\nI have an unrealistic expectation of myself. I fail to meet that\nexpectation. This makes me feel guilty and stressed.\n\u2014from an excellent article by Russ Allbery, a Debian Developer\n\nI need to take this advice seriously... I need to relax a bit.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-current-plans-for-wajig", 
            "title": "my current plans for wajig", 
            "text": "Some stuff I might work on in future:\n\nI want to start using argcomplete at some point, a more dynamic\nshell completion tool, replacing the current hand-rolled solution.\nI find shell programming hard, and argcomplete, which is inspired by\noptcomplete is a brilliant workaround.\nSomeone asked me to restore gjig, the GUI tool that I removed from\nwajig some releases ago. This will be an opportunity to learn\nGTK+ again. I did a bit of it, even contributing patches (Tracker\nproject), but was never quite confident. It's very likely that I\nwon't work on this... too much work.\n\nBut ultimately, I would love for the standard Debian packaging tools\nto get the the point where they make wajig irrelvant. After all, wajig\nwas created to be a wrapper that helps ease the mess.\n\nHere's the work I did in the past working on wajig, have a look at\nits tag. Off the top of my head:\n\nimproved, simplied packaging\nport to Python 3\nport to argparse (from getopt), which also meant proper handling of\nsubcommands\nincreased usage of python-apt, instead of hand-crafted (and ugly)\ncode\na few feature additions\n(lots of) modernising the code\n(lots of) cleaning up\n\nAnd over 800 commits later, I am glad.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/shutilwhich-rocks", 
            "title": "shutil.which() rocks", 
            "text": "Unix/Linux systems have a simple (but useful) tool named which,\nwhose main purpose is to indicate where in the filesystem a particular\nexecutable is installed. This functionality was added in Python 3.3,\nand though simple, I was looking forward to its availability in\nDebian, just so I could replace wajig's own equivalent functionality,\nwhich only checked for file presence, and was hard-coded and therefore\ninflexible. shutil.which(), OTOH, looks for the given executable name\nin user's PATH and is more thorough, since it also checks if the\nexecutable name points to something that is actually executable.  So,\nmaking use of this new function resulted in more robust code, as well\nas a lot cleaner.\nAs a sidenote, this functionality was first proposed in 2001!\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/enter-the-wu-tang-36-chambers", 
            "title": "Enter the Wu-Tang (36 Chambers)", 
            "text": "I very much enjoyed listening to this album, which also happens to be\nthe first by the group, Wu-Tang Clan. My favorite tracks:\n\ntrack 04: Wu-Tang: 7th Chamber; also redone (track 12)\ntrack 09: Method Man - me loving the playfulness; also redone (track 13)\ntrack 07: Wu-Tang Clan Ain't Nuthing ta Fuck Wit - some more playfulness\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/job-of-qa", 
            "title": "job of QA", 
            "text": "\n\n... the job of QA is to determine whether things are working as\nintended, not to decide what the intentions should be.\n\u2014part of a thread on Fedora's main development mailing list\n\nThe author goes on to give some solid advice which is applicable to\npretty much every notable project out there:\n\nIt is not possible, however you organize such a project, for\neveryone to have a voice in everything. It is not possible to\nsubject every decision to some kind of public review process. It\nis a statistical certainty that things you disagree with are going\nto happen. This is something you need to reconcile yourself to.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/koolest-projekts", 
            "title": "koolest projekts", 
            "text": "These are what I find to be the most exciting projects, today:\n\nPyPy\nIt's been alive for over 10 years, but it's still generally\nconsidered among the most exciting of all Python projects.\n\nDiscourse (project_of_note)\n\nsystemd (project-of-note)\nThis one has since been announced in April 2010, but I still do\nfind it kool. It is sad that it still receives so much unlove from\nso many people, much of which isn't constructive. I am hoping it\ndisplaces both it's main competitors, sysvinit and upstart, at some\npoint.\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-05-11", 
            "title": "links 2013-05-11", 
            "text": "\nMy first GitHub follower; at this time, he is following 140\nothers, so maybe I not so specialness.\nPython interpreter finally gets tab completion by default;\nto see wide use, this will have to wait for 3.4 release,\nwhich will only arrive early 2014.\nI submitted my first bug report for Emacs,\nperhaps my first ever to a pure GNU project;\nI say this because GNOME claims to be one, but it's really only by name.\nExcellent guide on improving Python performance;\nit's written with PyPy in mind, but has excellent generic advice.\nI enjoyed this podcast where Jeff Atwood talks about his new\nproject, Discourse.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-discourse", 
            "title": "project of note: Discourse", 
            "text": "The announcement by project lead, Jeff Atwood, sold me. This is one\nrather incredible guy, a game changer of sorts, most notable for\nhelping create what is likely the most important programming resource\non the web. So whenever he goes and creates something else, I\nnaturally do pay attention, and this Discourse thing looks amazing,\nfrom by limited usage so far.\nI am just jealous that it's written in Ruby, and not Python. I am also\njealous that the main service runs on Ubuntu, and not Debian.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/me-loving-auto-fill-mode-emacs", 
            "title": "me loving Auto Fill Mode (Emacs)", 
            "text": "For the past 2 weeks or so, I have been learning Emacs, something I've\nbeen meaning to do for years now. I decided to do it seriously (not\nskip a day, sometimes hours at a time), and am really liking it. It's\na very well-designed application with a great amount of polish, far\nmore than anything I've seen yet (I've used Vim, Geany, Scribes, and\nEclipse).  It also helps that the documentation is so\nwell-written.\nSo far, my single most favorite feature is Auto Fill Mode, which\nallows you to keep typing without caring about line breaks, for they\nget automatically get applied for you. Am very sure that this feature\nexists elsewhere, but I actually never used it.\nRelated to that is the fill-paragraph command, which is invoked via\nthe Alt+q shortcut (M-q) in Emacs speak. What it does is reformat the\nparagraph as if it was typed while in Auto Fill Mode. Is gorgeous!\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/how-many-by-busta-rhymes", 
            "title": "'How Many' by Busta Rhymes", 
            "text": "Busta Rhymes has a mixtape named Cut Master C With Busta Rhymes,\nand in there is a version of How Many Mics from the album, The Score\n(simply titled How Many).\nBusta Rhymes is among the most highly-skilled of all rappers, ever,\nbut hardly ever performs in supreme tracks,\nso was excited to listen to his take on one of the best hip-hop tracks ever\n(from the best ever hip-hop album).\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/python-pipedreams", 
            "title": "Python pipedreams", 
            "text": "None of these is likely to happen at all.\nIt's even safe to use the word never with a great amount of certainty;\nbut I wanted to document them anyway, if for no other reason than rescue\nthem from the exclusiveness of my mind:\n\nremove f.readlines();\nlist(f) is a clearer and more general replacement (source).\nrm os.system, os.popen* and relatives;\nwe already have the subprocess module\nrid of all forms of string formatting,\nother than Advanced String Formatting;\ndo it everywhere, including the logging module\nchange module names to be PEP-compliant, everywhere\nremove lambda; it's not Pythonic, and just feels like a wart;\nit also does a good job of making Python code less readable\nchange def keyword to func; it's more descriptive\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-04-25", 
            "title": "links 2013-04-25", 
            "text": "\nApple is a scary company\nthis is one incredible web designer (via)\nnice and detailed post about Pyramid's powerful View configuration\nmy dream laptop\nhow to evaluate competing technologies for use\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-debian-installer", 
            "title": "project of note: Debian Installer", 
            "text": "I've recently looked at Ubuntu's 10.04 and 10.10 installers, and they\nare quite nifty tools, so fresh and gorgeous, and so easy to use that\nnobody would dare say \"I can't install Linux!\". And then I recently\nre-installed my Debian system and I don't really see how much harder it\nis to use than Ubuntu's (except that it's far uglier, so I guess that\nalso makes it intimidating).\nWhat triggered this post is the following titbit:\n\nd-i [Debian Installer] is the very first thing many of our users\nsee, and has a huge range of uses, from simple desktop installs to\nmassive corporate deployments; it's unspeakably important that it\nworks well, and it's a testament to its design that it's been able\nto trundle along without actually very much serious refactoring for\nthe best part of five years now.\n\u2014an interview of Colin Watson\n\nIn addition, this tool (or rather, a set of tools) also happens to be\nrock-solid tool, and its great reliability gets admiration from me on\neach install (and I've done dozens, with not one instance of data loss).\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/the-not-grateful", 
            "title": "the not grateful", 
            "text": "\n\nUnfortunately, my experience has been that most people gloss over the\nphilosophical arguments in favour of open source,\nand focus instead on the price,\nviewing open source as a cheap way to fill a software stack.\n\u2014Personal funding, and the culture of open source\n\nThis is sad, but the author should have probably used the term Free software,\ninstead of open source... politics vs. convenience.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-music-videos", 
            "title": "top music videos", 
            "text": "Excellence in the track concerned contributes to the magnificence\nof its video. I'm a fan of nearly all the following tracks:\n\nNext Movement (The Roots)\nThe odd positions that our stars take and the overall beauty of it\nmakes it an eternal favourite of mine,\nnot to mention fact that the track is among my hip-hop favourites.\nThe simplicity of the video contributes and so is the fact it\nremains entertaining despite that it's shot in just one room,\nwhich is the kind of inventiveness I admire in art.\nThat Thing (Lauryn Hill)\nFlawlessly merges the views of two eras on one screen.\nGot Till It's Gone (Janet Jackson)\nGreat direction and cinematography as well as the casting makes\nthis an eternal masterpiece.\nStranger in Moscow (Michael Jackson; Director - Nick Brandt)\nAmong the best camerawork and editing with magnificent slow-motion\nscenes.. towards perfection.\nThe Sixth Sense (Common)\nExcellently capturing an unexplained event which looks like some\nsort of chaos, causing looks of despair and wonder among the\ncharacters conecerned, some catching it on tv,\nsome near the event... powerful.\nEverything is Everything (Lauryn Hill)\nGreat VFX showcasing NYC as a turntable are hard to beat.\nHey Ya (OutKast)\nThe high energy the video invokes, the appeal of seeing\na member of OutKast perform, and the VFX makes for an\nexciting experience.\nRespiration (Mos Def & Talib Kweli feat. Common)\nBeautiful images of them great rappers strutting their style enhanced\nshot by the black and style camerawork with some wonderful busy city\nimages.\nEgumnandini (Doc Shebeleza)\nFew videos were aver able to capture the township party scene with\nsuch energy and believability. The cinematography is quite good too.\nWho We Be (DMX)\nI usually like DMX's music videos because of their craftsmanship and the\nmessages they portray -- staying away from the annoying booty-shows\nthat so many succesful other rappers employ. This one is armed with\nsome excellent editing, some good visual effects, and some real-life\nfootage all put in the mix.\nLove of My Life (Erykah Badu)\nErykah Badu's perfomance, as is the case in her videos, draws\none's attention, despite a huge anti-climactic slow-down in\nthe middle of the song.\nAll 'n my Grill (Missy Elliot)\nThis could have been higher in the ratings had its mighty New York\nsettings -- with the dark lighting and that famous yellow-taxi\nscenery -- not been interrupted by the boring dancing that Missy\nlikes so much in her videos.\nFeel It Boy (Beenie Man ft. Janet Jackson; Dir: Dave Meyers)\nGorgeous, mellow, and digitally-manipulated envionment which offers rare\nwarmth. It boasts perhaps the largest collection of gorgeous gals of any\nmusic video I've seen. Jackson doesn't look comfortable though, with\nunnatural poses.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/notes-on-desirism", 
            "title": "notes on desirism", 
            "text": "Stuff I scribbled down after listening to the first Season of a\nnow-defunct series on applied ethics,\nall an attempt to make sense of it all:\n\nmorality:\na subset of a theory of values\nit deals with:\nobligation\nprohibition\npermission\n\n\n\n\nvalue: concerned with reasons for action\ndesires:\nthe only reasons for action that exist\nall value is ultimately based on desires\n\n\nall intentional actions are grounded on believes and desires\nbelieves are motivationally inert\nwhat good people do:\npromote desires that tend to fulfill other desires\ninhibit desires that tend to thwart other desires\n\n\nwhat tools to use:\nuse praise to promote good desires\nuse condemnation to inhibit bad desires\n\n\nthere are two forms of desires:\ndesires-as-means\ndesires-as-ends (the type that actually matters)\n\n\nshortcuts:\nthe only desires relevant to the discussion are malleable desires\nthe only actions relevant to the discussion are intentional actions\n\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-m-cross-environment", 
            "title": "project of note: M cross environment", 
            "text": "I spend several hours researching how to build a Qt app (written in C++)\non Debian for users who will run it on Windows.\nI also wanted it be just one binary at the end so that deployment is just\na matter of copying and running the one executable.\nThis means I needed to statically-compile the app,\nand the sad news is that I first needed to build Qt itself statically.\nIf I had actually known of M cross environment (MXE), I would have\nshaved nearly all of those 'wasted' hours. I am very grateful to the\ndevelopers, especially because building Qt was mainly a matter of\ninstalling a few build dependencies and running make qt. An hour\nor two later, I had newly cross-compiled Qt waiting for my use. It was\nalso pleasant that the app, in a form of a .exe file, just worked on\nWindows 7.\nHaving a look around, the build system actually looks elegant, and is a\nlot simpler than the scary mess that is JHBuild.\n\nI have published two guides on Stack Overflow on how this works,\none for Qt 4 and another for Qt 5.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/am-joining-gittip", 
            "title": "am joining Gittip", 
            "text": "In Why I'm signing up for Gittip, a core CPython commiter, Brett\nCannon, mentions a great reason to reward FLOSS contributors\nfinancially:\n\n... a way for the community to thank someone's family for letting\nthem share their loved one with open source.  For instance, tips\nfor me would be a way of thanking my wife for letting me spend the\nhours I do contributing to Python in my various ways by letting me\ntreat my wife to a night out so neither of us has to cook.\nHe inspired me to actually go find a bit more about this Gittip\nthing, after which I decided to participate as well.\nIn terms of money, I previously fooled around with flattr too, but\nstopped along the way for some reason (after a few months), so will\nsee how long this one relationship lasts.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/looking-at-liquidluck-themes", 
            "title": "looking at liquidluck themes", 
            "text": "Following are demos of all liquidluck themes I could find,\nall running this source,\nbut each slightly modified to change theme name (settings.py).\n\nmoment (the default theme; demo)\n\nresponsive (demo)\n\nreveal (demo)\n\nthegrey (demo)\n\nlovelymod (demo)\n\ncb3f20 (demo)\n\nchiang (demo):\n\nI get a blank page\n\nWhen building, it fails with:\n\n[E 130413 20:53:48 base:42] 'None' has no attribute 'strftime'\n\n\n\n\nicbu (demo):\n\nWhen building, I get 2 of these messages:\n\n[E 130413 23:40:19 base:42] 'dict object' has no attribute 'package'\n\n\n\n\noctopress (demo):\n\nWhen building, I get 4 of these messages:\n\n[E 130413 23:33:53 base:42] list index out of range\n\n\n\n\nbootstrap: broken\n\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/a-nicer-sounding-word-than-propaganda", 
            "title": "a nicer-sounding word than 'propaganda'", 
            "text": "\n\n...O'Reilly meme-engineers a nice euphemism -- \"meme-engineering\" -- to\ndescribe what has previously been known as \"propaganda.\"\n\u2014source\n\nThis is a reaction to Tim O'Reilly's definition of that nicer-sounding term,\nwhich goes thus:\n\nJust as gene engineering allows us to artificially shape genes,\nmeme-engineering lets us organize and shape ideas so that they\ncan be transmitted more effectively,\nand have the desired effect once they are transmitted.\nAll this could be out-of-context, but I didn't care to check for myself.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2013-04-12", 
            "title": "links 2013-04-12", 
            "text": "\na nice post on why static blog generation rocks;\nmuch better (and more detailed) than mine\nthe fallacy of fast growth\nbeing hardcore; nice humor\nembracing an ever-changing language\nloving the clean design of this page;\nmost of all, I love the code/pre tag rendering.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/me-likes-subprocessdevnull", 
            "title": "me likes subprocess.DEVNULL", 
            "text": "If you want to run an external process from within Python, and are not\ninterested in the error that process may emit, there are a few ways,\nand I will demonstrate this by opening a Python shell in a directory\nthat isn't version-controlled by Mercurial:\n\nSo, we don't want to see this ugliness:\n\n>>> from subprocess import call\n>>> call('hg status'.split())\nabort: no repository found in '/home/tshepang/projects/pyramid' (.hg not found)!\n255\n\n\nSo, here's the simplest solution:\n\n>>> import os\n>>> from subprocess import call\n>>> call('hg status'.split(), stderr=open(os.devnull))\n255\n\nProblem: it leaves the file descriptor open... not good.\n\nWe fix:\n\n>>> import os\n>>> from subprocess import call\n>>> DEVNULL = open(os.devnull)\n>>> call('hg status'.split(), stderr=DEVNULL)\n255\n>>> DEVNULL.close()\n\nMuch better, much uglier. (example usage)\n\nSomething better:\n\n>>> import os\n>>> from subprocess import call\n>>> with open(os.devnull) as DEVNULL:\n...     call('hg status'.split(), stderr=DEVNULL)\n255\n\nLooks much nicer, and is more convenient,\nunless we wanted to do something similar multiple times,\nin which case the previous example would be preferable.\n\nBest solution:\n\n>>> import os\n>>> from subprocess import call, DEVNULL\n>>> call('hg status'.split(), stderr=DEVNULL)\n255\n\n\n\nThis small and wonderful feature is new as of Python 3.3.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/a-bit-of-poetry", 
            "title": "a bit of poetry", 
            "text": "\n\nThere will always be justifications that a war is needed because\nof this oppressor or that incursion or this unforgivable action.\n\u2014source\n\nI thought that was well-put. English can be a beautiful language.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/companies-i-deeply-appreciate", 
            "title": "companies I deeply appreciate", 
            "text": "\nRed Hat contributes more to FLOSS than any other company,\nemploying hundreds of developers to work full-time on it.\nGoogle\nRuns the Summer of Code program, which pays hundreds of\nstudents to work full-time for a few months on FLOSS projects of\ntheir choosing.\nProvides Gmail for gratis, which I use as my primary web address.\nFunds the development of Chromium,\na very credible alternative to the world's major web browsers,\nand my personal favorite. It's also FLOSS.\nFunds most of the development of Android, which is quickly\nbecoming the dominant platform for high-end phones, and also\nhappens to be mostly FLOSS (though I hate the closed development).\n\n\nThe Stack Exchange family of sites attempt to provide the best Q&A\nfor a wide array of topics. They have succeeded specifically in one\ntopic, programming, in a form of Stack Overflow.\nAtlassian offers Bitbucket,\na gratis hosting service for public software projects;\nthis is a great thing, but not special since there are others offering\nthe same, most notably GitHub.\nWhat makes it special is that it also offers gratis hosting\nfor unlimited private repositories.\nI have over a dozen such repositories and each time I create one,\nI feel like the world is a wonderful place... I am grateful.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/what-me-loves-about-static-website-generation", 
            "title": "what me loves about static website generation", 
            "text": "There's a ridiculous amount of power and flexiblity in having all the\nblog sources locally:\n\nOne can use text editor of choice, which is a big help,\ngiven the quality of web-based editors in general.\nWhat this implies is that I can now put the blog in a VCS.\nThis acts as some sort of backup too,\nsince I place my sources on a remote server. [1]\nThis also means that I can do a heck of a lot of edits without being\nconnected to the web, or deeper changes like playing search-replace\nthrough the entire blog.\n\n\ncons\n\nThe complexity of the setup is going to scare many people away.\nIt can take a lot of time to setup;\nFor me, this was made worse by having a lot of posts, as well as\nbeing rather particular about the look and functionality of the output.\n\n\n\n\n[1]I used to run a command like wget --mirror http://tshepang.net\nonce in a while, just in case!\n\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-04-05", 
            "title": "links 2013-04-05", 
            "text": "\nI don't care much for C#, but this 'negative' book review\nby a luminary in the .NET community is worthy.\na video on the awesome Disqus commenting system\nLibreOffice progress is quite impressive.\npros of text over video\ngoing from simple to complex in teaching/learning programming\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-postgresql", 
            "title": "project of note: PostgreSQL", 
            "text": "Among those rather quite (in terms of controversy) but highly-respectable\nprojects, it appears there really isn't any FLOSS DBMS system that compares.\nIt even bills itself the most advanced open source database on\nits main page.\nI've had great honors for the project for years now,\nbut what prompted this post is its 2013-04-04 Security Release FAQ\n(via), a highly-detailed and thorough explanation regarding an important\nsecurity issue affecting a few of its releases.\nReading this, one gets the idea that it's some serious developers running\nthe project, and I deeply appreciate.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/me-loving-the-kiln-harmony-concept", 
            "title": "me loving the Kiln Harmony concept", 
            "text": "I tend to work a lot with both Git and Mercurial,\nand to ease the pain of forgetting which I'm using at a given moment,\nI created a setup I described on another post.\nAn even better solution is having all this sorted out on the server side,\nso that it doesn't matter which of the two I'm using.\nThis comes in a form of a product named Kiln Harmony,\nwhich also turns out to be a complex beast behind-the-scenes.\nWould be kool to see a FLOSS implementation of this.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-armin-rigo", 
            "title": "developer of note: Armin Rigo", 
            "text": "Co-founder and lead developer of arguably the most exciting project in the\nentire Python ecosystem, PyPy.\nHe is also credited with doing the bulk of the work in building its\nlegendary RPython translation framework.\n---\nWhat inspired this post is the incredible honor given by the great\nRaymond Hettinger in one of his PyCon US 2013 talks,\nwhere he deems him \"probably the smartest person I have ever met\".\nGiven that there isn't a shortage of brilliance in the Python community,\nthat's some serious kudos.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-vinay-sajip", 
            "title": "developer of note: Vinay Sajip", 
            "text": "Vinay Sajip is the maintainer of logging, a Python logging\nlibrary/module, available in the standard library. What prompted this\npost is his tireless improvements, not just to the software itself, but\nalso the documentation surrounding it (example). It's all the more\nimpressive that he continuously blogs about various ways to use the\nmodule, and maintains a bunch of nuggets on advanced usage.\nOne early event, which is likely the first\ntime I noticed him, is the time when he rebutted some apparently\ninaccurate claims against the module, at which he responded in a\nhighly-detailed post, the sort that lent credence to the module. This\ninspired me to give it a try, and it's not that hard.\nThere's one other project he works on, sarge, which is like\nsubprocess on steroids. Have a look at why he created it.\nLately, he is working on distlib,\na library which implements low-level functions that relate to\npackaging and distribution of Python software.\nThis excites me a lot since it's a key piece in the latest attempt\nat fixing Python packaging once and for all.\nOn top of all this, he is very active on Stack Overflow,\nhaving answered hundreds of questions there. Amazing!\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-03-24", 
            "title": "links 2013-03-24", 
            "text": "\ngreat IRC humor\nnice CSS white-space explanation\nan interesting chart on the pain beginners may feel when trying to use\nPython for particular tasks\nwriting a solid feed reader is not a joke (via)\nI got deeply excited as I read about\na nice scheme of manual package management,\none of the many LFS hints. I am looking forward to\nthe challenge (which may result in me ditching Debian for home use).\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-03-14", 
            "title": "links 2013-03-14", 
            "text": "\neach feature release of Python comes with a great amount of changes,\nbut I was particularly impressed by those of 3.2;\nthe latest such release isn't too shabby either\nthe all-important factor of success in business... luck\none interesting way of measuring Python 3 adoption is download numbers:\n0.8 million out of a total of 2 million\nanother sad case of Ubuntu diverging from GNOME...\nOnline Accounts (via);\nas the author of that quality post says, they may have good reasons for this;\nbut to on the surface, it just looks bad\na detailed defense on the choice of technology for Stack Exchange chat\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/on-growing-up", 
            "title": "on growing up", 
            "text": "\n\nMartijn Faassen used to ask us \"how fast is PyPy\" so we decided to\nname an option enabling all optimizations \"--faassen\". Then\n\"--no-faassen\" was naturally added too. Later we decided to grow up\nand renamed it to \"-O2\", and now \"-Ojit\".\n\u2014a summary of 10 years of PyPy history\n\nAmazing energy and intellectual prowess the project participants possess,\nand a very respectable project at that.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/six-shooter-2005", 
            "title": "Six Shooter (2005)", 
            "text": "This 27 minute short is worthy mainly due to the loud and fascinating\nyoung guy sitting next to the lead character on a train trip. He happens\nto be the most insensitive character I have seen anywhere (if my poor\nmemory serves me well), and is funny at times. The ending is strange\nthough, and I guess deliberately pointless.\nI was inspired to watch this due the director, who later on made the\nweird and wonderful Seven Psychopaths.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/easing-switching-between-git-and-mercurial", 
            "title": "easing switching between Git and Mercurial", 
            "text": "For a long time I've been meaning to write a script that eases switching\nbetween the only VCS systems I use, Mercurial and Git. Each chance I\nget, I use Mercurial (e.g. personal stuff), and use Git when I don't\nhave much of a choice (e.g. FLOSS and work). That is, I use both quite a\nlot, and too often I find myself running commands for one while on\nanother's repository.\nI then decided to ease the pain my creating a script which checks which\nVCS system I'm on, and displays the relevant command.\nHere are the relevant aliases:\nalias vb='$(python ~/projects/utils/vcs.py --branch)'\nalias vd='$(python ~/projects/utils/vcs.py --diff)'\nalias vl='$(python ~/projects/utils/vcs.py --log)'\nalias vp='$(python ~/projects/utils/vcs.py --push)'\nalias vs='$(python ~/projects/utils/vcs.py --status)'\nalias vu='$(python ~/projects/utils/vcs.py --pull)'\nalias vc='$(python ~/projects/utils/vcs.py --commit)'\nalias vo='$(python ~/projects/utils/vcs.py --checkout)'\nalias vr='$(python ~/projects/utils/vcs.py --revert)'\n\nDisplaying the output instead of running them directly from the script\ngives me the flexibility of adding to the command, for example:\n# committing\nvc 'describe the change'\n# checking history of a file\nvl README\n\nThis makes my life so much easier, since I no longer have to care where\nI'm at, at least for the most common of commands. I am pleased with self.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/great-praise-for-the-rpython-translation-toolchain", 
            "title": "great praise for the RPython translation toolchain", 
            "text": "\n\nI am a curmudgeon and I find most new developments in software to be\nthoroughly uninteresting. RPython is different. It's the most\ninteresting thing I've seen in well over a decade.\n\u2014Fast Enough VMs in Fast Enough Time\n\nThe highly-detailed article is about the adventures of building\na language VM using the RPython toolchain.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/nice-review-of-fedora-18", 
            "title": "nice review of Fedora 18", 
            "text": "I really enjoyed reading this review of the experience of installing\nFedora 18 and first use. Other than being well-written, I like the fact\nthat he gives points to each pro and con. I also liked this bit of\nopinion, which I totally agree with:\n\nLogging in. Being told there are updates. Holy crap \u2013 218 updates \u2013\nfor a release that\u2019s a day old. Does the word \u2018release\u2019 mean\nanything anymore? -5. Seriously, freeze that crap for a few days,\nonly real security issues or facepalm bugs.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-jeff-forcier", 
            "title": "developer of note: Jeff Forcier", 
            "text": "The strength of character that Jeff 'bitprophet' Forcier possesses is\nadmirable. He is the lead developer of fabric, the most popular\ndeployment tool written in Python. I honor him here due to how he\nhandled the issues with paramiko, the library that fabric uses\nheavily. He had to make tough decisions, like embedding that library in\nfabric source (due to various issues), and even forking it. All of this\nof course involved a lot of work and discussing, and thankfully at the\nend, the original 'owner' of that indispensable piece of software\nrelented and transferred it to this bitprophet character. This means\nJeff now runs 2 of the most important tools in all of the Python\nworld... more of the gory details.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2013-01-02", 
            "title": "links 2013-01-02", 
            "text": "\nGo language looks good for web apps:\ncomparison with Python\nevaluation after writing some important apps\ncombines elegance of Python with speed of C/C++\n\n\nThe Python import system can be a scary beast.\nI appreciate this summary of the differences between upstream\nkernel and one included in Debian; would be nice to get more of this,\nand also on other major software included in Debian\nThe highest-voted answer I ever gave on Stack Exchange.\nbenefits of systemd according to an Arch Linux developer; one\nthing I appreciate is that this was written by someone other than\nsystemd project leader, a controversial figure\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/misconceptions-i-had", 
            "title": "misconceptions I had", 
            "text": "From one of the most important articles on Wikipedia:\n\nthe most surprising one is that microwaves do not work by emitting\nwaves at resonance frequency of water; they work using some other\nmethod\nthe Great Wall of China is not visible from space (unaided)\nseasons are not caused by the Earth being closer to the Sun in the\nsummer than in the winter\nwe are not born with all brain cells we will ever have; this is a\nrecent discovery (2000s)\nFrankenstein was actually the name of the creator of the monster, not\nthe monster itself\nThomas Edison did not invent the light bulb\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-tracks-fugees", 
            "title": "top tracks: Fugees", 
            "text": "\n4 masterpieces\n\nHow Many Mics\nFu-Gee-La\nThe Mask\nCowboys\n\n\n\n4 excellent works\n\nReady Or Not\nZealots\nThe Beast\nManifest\n\nAll these are in one album, The Score, the best hip-hop album ever\nmade.\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-tracks-the-roots", 
            "title": "top tracks: The Roots", 
            "text": "\n1 masterpiece\n\nIn the Music [Game Theory]\n\n\n\n8 excellent works\n\nThe Lesson - Part III (It's Over Now) [Come Alive]\nDistortion to Static [Do You Want More?!!!??!]\nDon't Feel Right [Game Theory]\nRespond/React [Illadelph Halflife]\nSection [Illadelph Halflife]\nWot They Do [Illadelph Halflife]\nNext Movement [Things Fall Apart]\nPush Up Ya Lighta [Illadelph Halflife]\n\nThis is my most favorite of all hip-hop groups. The intensely-talented\nBlack Thought, its lead vocalist, is my most favorite of all hip-hop\nartists.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2012-12-19", 
            "title": "links 2012-12-19", 
            "text": "\nThis guy presents 2 incredible ideas; one has been running for\nyears (humans translating text that's hard to read by machines, while\nauthenticating themselves as humans - reCAPTCHA), and another that\nis brand new, known as Duolingo.\nSbhonyonyo the ugly mermaid - this is habsolutely (sic) hilarious!\non the supremacy of Japanese toilets; whoever said toilet humor\ncan't be smart and hilarious at the same time\nConnoisseur - poking fun at the definition of the word\nBored With the Internet - very relevant cartoon, except it applies\nto my love for movies, whereby, while watching, am already thinking\nwhat I will write in my review; sometimes I think I am a loser\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/errors-resulting-from-setting-named-pipes-to-be-non-blocking", 
            "title": "errors resulting from setting named pipes to be non-blocking", 
            "text": "Using C, I have been writing to named pipes in a non-blocking\nway and have been getting a whole bunch of EAGAIN errors.\nI have spent way too long on the web trying to find out why,\nand bumped onto this excellent answer.\nLooking at the manpage, I see that this would give the same value as\nEWOULDBLOCK, which is a far more meaningful name in this case.\nThis is what will display those errors:\nif (write(fd, buffer, strlen(buffer)) == -1)\n    fprintf (stderr, \"error writing to file '%s': %s (errno %d)\",\n             path, strerror(errno), fd);\n}\n\nAnd here is how to avoid them:\nif ((write(fd, buffer, strlen(buffer)) == -1) && (errno != EWOULDBLOCK)) {\n    fprintf( stderr, \"error writing to file '%s': %s (errno %d)\",\n             path, strerror(errno), fd);\n}\n\nTo avoid this kind of confusion, I just wish these two\nvariables did not refer to the same errno value.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-11-18", 
            "title": "links 2012-11-18", 
            "text": "\nChallenges for Linux networking; sad to read of these shortcomings\nrefusal to accept a reasonable, popular, and easy-to-implement request,\nan option to never turn off the screen\ngreat praise for Qt and its docs; me was led to it when\nresearching a cross-platform (Linux and Windows) GUI toolkit\nI found using gaming to explain version control unbeatable; that is\nthe great appeal of Git Magic\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/what-i-do-after-debian-installation", 
            "title": "what I do after Debian installation", 
            "text": "I think anyone who has never done any OS install before can install\nDebian with any issue at all, provided they will not be doing any\npartitioning. It is that easy.\nAs for me, I do a lot more installations than the average person, so I\nsemi-automate the setup process with the help of this script:\n#!/bin/bash\n\n# some convenience\nshopt -s expand_aliases\nsource ~/nna/conf/bash_aliases\n\n# config files\nsudo cp ~/nna/conf/sources.list /etc/apt\nsudo cp ~/nna/conf/sudoers /etc\n\n# APT\nsudo apt-get update\nsudo apt-get --allow-unauthenticated upgrade\nsudo apt-get --allow-unauthenticated dist-upgrade\nsudo apt-get --allow-unauthenticated install devscripts debhelper build-essential python3-apt gpm\n\n# wajig\n(cd ~/src/wajig && iiwajig)\nibase && inondebian && itracker && icpython && ipurge\n\n# for Tracker\nsudo sh -c \"echo 'fs.inotify.max_user_watches=100000' >> /etc/sysctl.conf\"\n\n# so I can share via a webserver, or easily access from browser\nsudo ln -s ~/.custom_repo /var/www/custom_repo\n\nContents of Debian repository list file:\n$ cat /etc/apt/sources.list\ndeb file:/home/wena/.custom_repo tshepang main\ndeb http://debian.mirror.ac.za/debian wheezy main contrib non-free\n\nThe tshepang codename refers to my custom repository, the one\nmanaged by reprepro.\nContents of sudo setup file:\n$ sudo cat /etc/sudoers\nDefaults env_reset\nDefaults mail_badpass\nDefaults secure_path=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nroot     ALL=(ALL) ALL\n%sudo    ALL=(ALL) ALL\nDefaults !tty_tickets\nDefaults timestamp_timeout=100\n\nThe one change from default sudo setup is so that each bash session\ncan inherit sudo powers from another. It's one case where I trade\nsecurity for convenience. Another such case is increasing the\nask-for-password timeout to 100 minutes, instead of the default 15\nminutes.\nAnd then these aliases, which point to scripts that install some\npackages:\n\nibase: basic stuff I got to have, stuff like the components I use\nfor my desktop apps, some CLI tools, and some documentation\ninondebian: packages that aren't part of Debian, e.g. stuff from\nexternal repositories, or nonm-free stuff from Debian repos\nitracker: I always run the git version of Tracker, so these\ntools help me build it\nipurge: stuff that was installed as Recommends dependencies of\nthe above (e.g. gnome-bluetooth) or during Debian installation\n(e.g. vim), but that I won't use\n\nThe symbolic links is so that those I share a network with (LAN) can\nhave easy web browser access to some stuff on my machine.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-lennart-poettering", 
            "title": "developer of note: Lennart Poettering", 
            "text": "Lennart is among the most visible/vocal developers in the GNOME\ncommunity, collecting admirers and detracters along the way since he\ndoes not appear afraid of voicing controversial thoughts, or even\nexpress arrogance.\nI first heard of him through a project that was to revolutionise Unix\naudio, PulseAudio. Using it was not really the best of experiences\n(I don't yet need any of its advanced features,\nand it consumed too many CPU cybles),\nbut it may well have just been the way Debian configured it at the time.\nLater on, he started work on an init system that was to replace\nexisiting ones on Linux-based systems, known as systemd. This is\namong a few FLOSS projects that did genuinely excite me, and for years I\nwas waiting for it to be Debian default. Sadly, too many issues were\nraised, including the refusal of Lennart to support non-Linux systems,\nas well as having 'too many features',\nway beyond being just a traditional init system, worrying many.\nRegardless of the controversy, the fact that Lennart was able to shake\nup the FLOSS world with two major projects like this makes him among the\ngreat developers on the planet. He also really put a lot of effort\nin his projects, portraying great talent while at, as well managing to market\nhis projects very well, at least in my eyes.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-10-23", 
            "title": "links 2012-10-23", 
            "text": "\nI did not expect this question of mine to be loved so much. In\nfact, I thought it would see some resistance, due to so many\nPython-related threading/multiprocessing questions on Stack Overflow,\nsuch that it might be closed as a duplicate.\nThis blog post makes me wanna contribute to LibreOffice, which is\nmade even more appealing by fact that I'm using the language a lot\nat work.\nIt is a sad fact that for large Python codebases, the pain of porting\nto Python 3 is quite high. Here's an example for Twisted.\nI am a fan of argparse, but this specific CLI parsing library\ntakes an interesting direction.\ngreat web app design advice\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-09-28", 
            "title": "links 2012-09-28", 
            "text": "\nA look at the high fragmentation of programming languages\na sad case where management is warry of quality code\nWhat happens after loading the Linux kernel image into RAM\nDevelopment process for putting hardware support in Linux-based\nsystems\nWhy choose N9 (Meego) over anything Android and iPhone (and why\nnot)\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-git-cola", 
            "title": "project of note: git-cola", 
            "text": "A colleague has since introduced the tool for me, and I use it whenever\nI want to do separate commits for uncommited changes, to avoid having to\ndo the unkool git add <filename> && git commit dance. I also use it\nwhen I want to commit various hunks separately, and the tool makes that\ntask real easy.\nI was recently impressed by its equivalent functionality for the git\n--amend option. If you click on the Amend Last Commit radio\nbutton, it actually displays the commit message of that previous commit.\nI was surprised to see it, especially since on clicking that option, I\nquickly ran to the command-line to copy that commit message, only to see\nthe message waiting for me, ready to be edited away.\nAnother feature I really like is that if you attempt to commit something\nwithout staging it first, instead of just complaining, if offers to\nstage and commit all in one click. Nice.\nThese functionalities are real simple, but they really make for a\npleasant user experience.\n\nWhen I checked its Debian PTS page, I got surprised by the glaring lack\nof bug reports, as well as a small number of Debian releases. I found it\nsad when I visited it's popcon page (which is linked from that PTS\npage), and got surprised by the low number of installations it has by\nDebian users.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-michael-meeks", 
            "title": "developer of note: Michael Meeks", 
            "text": "Being the most visible LibreOffice (and formerly, OpenOffice.org)\ndeveloper for a few years now, he is also a tireless communicator and\norganiser. The switch from OpenOffice.org to LibreOffice was not exactly\na smooth, but this guy kept showing a positive attitude throughout. In\nthe latest of his longer-form blog posts (he normally writes tiny\nupdates), he exposes the great progress that LibreOffice has had. This\nis not the most glamorous of software projects, but it certainly is\namong the most important in the world of FLOSS, and it's kool to have\npeople like this keeping it going.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/me-got-meself-another-coding-job", 
            "title": "me got meself another coding job", 
            "text": "Some years ago, I was totally excited by having my first job working on\nsoftware. I am very grateful for the chance the owner, who interviewed\nme for the position, took on me. I learned an incredible amount of\nstuff, though I didn't enjoy much of it (had to do lots of Java among\nother ugly things).\nSome months ago, a friend enticed me to the idea of doing something\nelse, giving me contacts for some company building software and\nelectronics products for the mining industry. So I wasn't actually\nlooking for work, but I was glad of the opportunity since I was sort of\nstagnating, and it really looked like this new company did some more fun\nstuff, and I got the vibe that I'd really get challenged.\nIt's been 3 months now, and my guess was right. I keep getting surprised\nby the levels of smart I encounter regurlarly. These are the sorts of\npeople I simply can't match with my lesser brain, but I'm glad to work\nwith, since I learn so much.\nThe systems we build are embedded, so I spend most of my time working\nwith C and C++, and it tends to be a serious challenge, given that\nthere's a lot less hand-holding with those than with my favorite,\nPython.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-07-22", 
            "title": "links 2012-07-22", 
            "text": "\nGreat points on the limitations of Planet Python, my main source\nof news on Python-related stuff.\nPeople tend to oppose radical change and then later on admit that\nchange wasn't that bad; in this one case, an apology was even\ngiven.\nA great explanation to the question Does Python pass by\nreference or pass by value?\nAm working on giving a product of ours ability to speak Socket CAN,\nand I really appreciate its official documentation on it, which\nis quite well-written and thorough (but assumes prior knowledge of\nworking sockets); one more reason to be grateful of the Linux kernel\nproject.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/matplotlib-rocks", 
            "title": "matplotlib rocks", 
            "text": "Have a look at this code:\nfrom matplotlib import pyplot import random\n\nx_axis = range(10)\npyplot.plot(x_axis, random.sample(range(10), 10))\npyplot.plot(x_axis, random.sample(range(10), 10))\npyplot.show()\n\n\nYou will notice that there's 2 graphs drawn over the same axis, nothing\nspecial. What I really loved about matplotlib is that I did not need to\nspecify what colors to use for any of the graphs (as I did\npreviously). The colors were chosen automatically. It was helpful\nespecially in my case because I needed a way to specify an arbitrary\nnumber of graphs. Without this magical feature, the code would be a lot\nuglier.\nHere's goes:\nfrom matplotlib import pyplot import argparse import random\n\nparser = argparse.ArgumentParser()\nparser.add_argument('number_of_graphs', type=int)\nargs = parser.parse_args()\n\nx_axis = range(10)\nfor n in range(args.number_of_graphs):\n   pyplot.plot(x_axis, random.sample(range(10), 10), label=str(n))\npyplot.legend()\npyplot.show()\n\nIf I provide 3 as command line argument, I get his:\n\nThis feature left me pleasantly surprised.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/debian-7-will-release-with-wajig-273", 
            "title": "Debian 7 will release with wajig 2.7.3", 
            "text": "I once claimed that Debian 7 (Wheezy) will release with version 2.7 of\nwajig, but soon after, I noticed that an exception occurs if you run a\ncommand like wajig new if one of the newly-available packages was\navailable for the configured foreign architecture, but not for the\nnative one (bug 679969). To fix that, I released 2.7.1, but I\nsubmitted a dirty tarball for upload, so had to resubmit, ending up\nreleasing 2.7.2. Later on, someone noticed that a certain subcommand\nwasn't recognized, and I released 2.7.3 which fixes the issue.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/valve-appears-anarchistic", 
            "title": "Valve appears anarchistic", 
            "text": "While reading how this legendary game creator is run (or at least\nused to be), I was pretty much reminded that's kinda how an\nanarchistic business would be run. I was pleasantly surprised to later\nencounter a section named The Workers Control the Means of\nProduction on the same article. Kool stuff. [via]\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/zero-punctuation-rocks", 
            "title": "Zero Punctuation rocks", 
            "text": "I recently discovered an incredibly entertaining and scathing game reviewer,\nZero Punctuation.\nNone of the reviews I've seen so far are any shallow,\nand there's even solid social commentary.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2012-07-07", 
            "title": "links 2012-07-07", 
            "text": "\nsome women get their pussies mutilated for some shitty reasons!\nLuke Muehlhauser on feminism - superb writing\nthe futility of theist vs. atheist debate\nI really enjoyed the humor in the humorous Threw It On the Ground\nmusic video; even the music is nice\nme not sure I would qualify for a job at Netflix, due its highly\ndemanding culture would be extra kool if more large companies\nadopted something similar\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-26-and-27", 
            "title": "wajig 2.6 and 2.7", 
            "text": "Version 2.6 of wajig has changes so small that I did not bother writing\nabout its release, but was nevertheless very important because the\nbash-completion now works a lot better than before,\nthanks to Reuben Thomas.\nI also stopped wajig from accepting UPPERCASE subcommands,\nsince a few people on the mailing list expressed dislike,\nand that includes project founder.\nVersion 2.7, the version that will be in the next stable release of\nDebian [update], Wheezy (Debian 7), fixes two bugs, one of which I\nsort of intentionally broke in order to fix some issues with the\n--simulate and/or --teaching options.\nSomeone did complain about this which was good since it's a good\nindicator that someone actually cared about the feature.\nThat motivated me to fix it,\nand I ensured that the fix was in before Debian 7 freeze.\nThis work is my greatest contribution for this upcoming Debian\nrelease.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/sorting-dictionary-items-by-value", 
            "title": "sorting dictionary items by value", 
            "text": "Following should be self-explanatory:\n$ python\n>>> numbers = dict(zero=0, one=1, two=2, three=3)\n>>> numbers\n{'three': 3, 'zero': 0, 'two': 2, 'one': 1}\n>>> sorted(numbers)\n['one', 'three', 'two', 'zero']\n>>> sorted(numbers, key=numbers.get)\n['zero', 'one', 'two', 'three']\n\nThe second-last command sorts by keys, but that's easy. Sorting by\nvalue, as shown by the last command above, is what trips many novices,\nand I had to spend too much time on the web finding how to do it, and I\nstill don't really understand how it works, except that it works :)\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/one-of-the-harsh-realities-of-working-on-a-big-floss-project", 
            "title": "one of the harsh realities of working on a big FLOSS project", 
            "text": "\n\nI wasted my own time trying to be nice. One thing that you can get\nfrom Greg's report is that kernel developers have very limited time.\nTime is our most precious resource. If being polite wastes time, and\na quick jab is more effective, then those quick jabs become the\nefficient process.\n\u2014source\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/when-a-floss-project-gets-real-big", 
            "title": "when a FLOSS project gets real big", 
            "text": "\n\nDevelopers typically send their changes to the maintainer of the\nfile that is being changed. Those maintainers, who number around\n700, feed those changes up to the 130 subsystem maintainers. From\nthere, the patches make their way into linux-next, then to Linus\nTorvalds, and, eventually the mainline\u2014if they get accepted at each\nstep along the way.\n\u2014source\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/on-taste-and-morality", 
            "title": "on taste and morality", 
            "text": "\n\nI have an aversion to eating liver. I do not like the smell, or the\ntaste, of eating liver. However, in spite of my personal aversion,\nit would be wrong for me to use this to justify prohibiting others\nfrom eating liver. Because I do not like it, I do not eat it. I\ncould say that I do not like to eat liver because it is\nintrinsically bad, and because it is intrinsically bad anybody who\nlikes the taste of liver must be defective. I could try to make that\nargument, but there would be no merit to it. I would be wrong. In my\nerror, I would be interfering with the liberty of others for no good\nreason.\n\u2014Homosexuality.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/advice-to-aspiring-nanotechnologists-by-eric-drexler", 
            "title": "'Advice to Aspiring Nanotechnologists' by Eric Drexler", 
            "text": "\n\nSoftware systems will be vital to nanotechnology and to enabling\ntechnologies along the way. A basic introduction to computers and\nsoftware will be of value to anyone in any area of science or\ntechnology. Those interested in software related to nanotechnology\nshould pay special attention to numerical simulation methods for\nmolecular mechanical and quantum electronic systems, and to the\ndesign of programs for highly parallel computer systems, since this\nis the direction hardware will be moving in the coming years.\nParallel systems will help designers develop nanotechnology, and\nnanocomputers will later be used to build massively parallel\n(trillion processor and up) computer systems. Finally, if powerful\nsystems are to be useful in molecular design, they will need to be\naccessible through fast, clean, intuitive interfaces that let\ndesigners see and manipulate model molecules.\nThe great Eric Drexler offers extensive guidance for those\nconsidering studying towards molecular nanotech, and that quote is most\nrelevant to me, since I'm doing software and all.\nThe end-notes, where he encourages supreme rigour and discipline, would\nscare most away. This appears to be a demanding career.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-victor-stinner", 
            "title": "developer of note: Victor Stinner", 
            "text": "Depending on the impact of the change, contributing to open source\nsoftware can be intensely challenging. Referring specifically to\nCPython, the reference implementation of my favorite programming\nlanguage, you can have literally hundreds of messages on the mailing\nlists, and at times, many more in the issue tracking system, all\ndiscussing the change in mind. Such changes are most often accompanied\nwith a PEP (Python Enhancement Proposal), a formalised document which\nis basically a design spec for the change in mind. It also, helpfully,\nsummarises the arguments against the change, and addresses them while at\nit, which can be of help to those not inclined to consume the\noft-lengthy discussions.\nGiven all that, it can be quite challenging for any one individual to\nchampion such important changes, and an example of one such heroic\nindividual is Victor Stinner, a core CPython developer. He is the\nmost visible of the guys who helped ensure acceptance of PEP 418,\nwhich proposes some time-related additions and improvements to the\nstandard library's time module. There are many such additions, many a\nlot more important than this specific one, but what's most unique about\nthis one is the sheer amount of discussion that went around this\nparticular PEP. The mailing list discussions were practically endless,\nand so were the updates to the PEP, not to mention the amount of\nresearch involved, which was needed in order to have CPython expose the\nnew functionality in a cross-platform manner. Now, that's some serious\nperseverance.\n\nLooking at his commits, the guy has done a heck of a lot of work in\ncleaning up, refactoring, and optimizing the string-handling code. I\ncan't imagine that this stuff is easy, especially since a large portion\nof it is in C, that scary, no-hand-holding language.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-05-17", 
            "title": "links 2012-05-17", 
            "text": "\nThe rate of Linux kernel development is seriously impressive\nWhy bundle stuff in one library instead of a few\nFrom humble beginnings to extreme success\nJoel Spolsky is a wonderful writer, and has great humor. Check his\nimpressive effort at making an oft-boring task of reading a\ntutorial fun. Check especially his reference to one obscure tv\nactor.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/me-loves-new-git-site-design", 
            "title": "me loves new Git site design", 
            "text": "I really like the new website design of the Git project (story).\nIt even gained a nice and fresh icon, replacing the old which looked\nlike it was created in 1995. Note that the old one wasn't crap\neither, and was already pretty much modern, following the 'simple and\nbold' design trend I've witnessed in recent years. I'm jealous it's\nbetter than that of Mercurial, my favorite.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-martin-pitt", 
            "title": "developer of note: Martin Pitt", 
            "text": "I suspect that PostgreSQL isn't a trivial piece of software, and I\nconsider it among the greatest of all FLOSS. It even bills itself the\nmost advanced of all FLOSS databases. That's what brought Martin Pitt\nto my attention, for he is it's Debian (and now also Ubuntu) maintainer.\nOne other notable thing about him is his quiet persona (I follow Debian\ndevelopment fairly closely, and I don't remember seeing him take part in\nany of the arguments in its mailing lists). I only ever notice him when\nhe'd give some random status update.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-reprepro", 
            "title": "project of note: reprepro", 
            "text": "I have given kudos to reprepro twice before, and though those 2\nposts are actually outdated, I still keep a custom repository, a subset\nof the official repository of a specific arch, but only of packages that\nI ever install.\n\nEvery once in a while, I run this command:\n\n$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang \\\n/var/cache/apt/archives/*deb\n\nWhat it does is add packages that are stored by the Debian package\nmanagement system (located in /var/cache/apt/archives) to the\ncustom repository (located in ~/.custom_repo). That ensures that I\nonly keep packages that matter to me for any later install.\nNote that tshepang is the name of the repository. It's an unofficial\nequivalent of testing and unstable.\nAnother command that I sometimes run, though less frequently, is:\n\n$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang \\\n/var/cache/apt/archives/*deb\n\nThis one is used to help keep the repository fresh. Check out this\npost for an explanation.\nEven less frequently, it happens that some package files are no longer\nreferenced (i.e. not found in Package.gz) for some reason. Here's\nhandy command to display them:\n\n$ reprepro --basedir ~/.custom_repo dumpunreferenced\n\nAnd here's another that actually gets rid of them:\n\n$ reprepro --basedir ~/.custom_repo deleteunreferenced\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/dry-and-heavy-1977", 
            "title": "Dry And Heavy (1977)", 
            "text": "A very laid-back Burning Spear album, with a mere 9 short tracks, the\nbest of which is a re-imagining of one of my eternal favorite tracks of\nall time, Creation (live versions). It's named It's A Long Way\nAround, and I could not stop myself from repeating it.\nEach of the other tracks is quite good, though not catchy at all.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-argparse-tutorial-now-part-of-official-python-documentation", 
            "title": "my Argparse tutorial now part of official Python documentation", 
            "text": "I am very glad that a tutorial I started writing over 2 months ago\nhas finally been added to the howto section of CPython documentation.\nIt took a lot of iteration (over 7) in total before finally being\naccepted. But even then, it's still not fully satisfactory for me, and I\nreally hope that someone else with fresh eyes is going to go through all\nof it and offer improvements. Even better, I hope people will find it\nuseful. I know I would have when I started doing argument parsing. I\nfound the main module documention overwhelming, and the very first\nexample is in fact why I even started writing this tutorial at all, as\nis evident on the relevant issue.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/accessibility-on-debian", 
            "title": "accessibility on Debian", 
            "text": "Accessibility is one of those things we the privileged (those with\nworkable eyesight and hearing) tend to forget about; That's why\ndevelopers like Debian's Samuel Thibault deserve great respect. The guy\nwas brought to my attention by the great Raphael Hertzog through one of\nhis all-important People Behind Debian series of interviews.\nThis is one of those things that make me wish I was rich... pay a bunch\nof people interested in this kind of work to do it full-time.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-stefano-zacchiroli", 
            "title": "developer of note: Stefano Zacchiroli", 
            "text": "I admire this guy a lot:\n\nhis great passion for Debian (he speaks on behalf of it on a variety\nof events)\nmature and thoughtfulness in a variety of debates regarding this or\nthat decision within Debian\nhis ongoing push for collaboration between Debian and other distros\nhis positive outlook for Debian, at a time when many are worried\nabout its loss of relevance\nhis passion for software freedom (we need people like this in an age\nwhere people tend to trade freedom for pragmatism)\n\nTo prove I'm not the only one, there a bunch more guys who were happy\nenough with his 2010 term as Debian Project Leader (DPL), that they\nre-elected him again. What's more interesting is that no one else stood\nfor election. He also won the term the third time, so will reign over\nDebian in 2012.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-04-12", 
            "title": "links 2012-04-12", 
            "text": "\nBooks Programmers Don't Really Read\navoid being too concise \u2013 a Python example\nexcellent review of a book that uses Python to teach kids\nprogramming\nmailing lists are less than ideal for debate/extended discussion\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-25-released", 
            "title": "wajig 2.5 released", 
            "text": "The release of wajig 2.3, though important to me, caused varius\ncomplaints because it changed much of the UI. 2.5 goes a long way\ntowards fixing those. What particularly helped guide this release is my\ncreating a mailing list, just so that I can ask users for opinions on\nwhether or not to do this or that change. There was much feedback and\ncomplaints of course, sometimes to a point where I felt like I'm just\nmessing up, as in not helping make the world a better place. Luckily\nthere were also words of appreciation of my efforts in maintaining it.\nHere's the gory details.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/david-beazleys-pycon-us-2012-keynote", 
            "title": "David Beazley's PyCon US 2012 Keynote", 
            "text": "David Beazley's PyCon 2012 key note talk is among the best I've seen\nin the field of software development. It's not even the content (the\ncomplexity and hackability of PyPy), but rather the presentation itself.\nThe guy must have put a lot of effort in his slides, and what's better\nis that he was also doing live demonstrations. From those, you could\ngather that this isn't a mere mortal. He's brilliant (and humorous). And\nI've never even heard of him before, but he appears to be some sort of\nlegend in the Python community.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2012-04-09", 
            "title": "links 2012-04-09", 
            "text": "\nWhat You'll Wish You'd Known is one the best essays I've read yet;\nit basically is advice for people still in high school. Beware though\nthat the writer, Paul Graham, is very bold person. He makes a lot of\nassertions, without much in the way of backing it all up. Sure he's\nwell-read and experienced, but it appears he relies a lot on his\nintuitions. Inaccurate as it may be, this essay has a lot of insight\nand is very encouraging (e.g. don't underestimate your abilities).\na nice objection to loud noise\nthe (un)greatness of Bell Labs\nOn Parenthood - incredible write-up on the joys of having a\nchild... this isn't material I normally read, but I felt compelled\nconsidering my admiration for the writer, a famous software\ndeveloper; it almost makes me look forward to my first\nan impressive criticism of anti-abortionists (via)\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-04-08", 
            "title": "links 2012-04-08", 
            "text": "\na great post about the advantages of undo over warning dialogs\nthe great success of Stack Overflow, and the associated Stack\nExchange network \u2013 lots of light humor\nwhy Python 3 is more suitable for teaching programming\nhistory of HTML \u2013 the research and presentation is impressive\na look at the high fragmentation of programming languages\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/finding-great-developers-by-joel-spolsky", 
            "title": "'Finding Great Developers' by Joel Spolsky", 
            "text": "Reading the article today reinforced my view that Joel Spolsky is\namong the best bloggers on the topic of software development. Here he\ndiscusses a few strategies on finding excellent developers, and my\nfavorite moment is when he mentions how hard he spoils interns in NYC:\n\nThey're met at the airport here by a uniformed limo driver who grabs\ntheir luggage and whisks them away to their hotel, probably the\ncoolest hotel they've ever seen in their life, right in the middle\nof the fashion district with models walking in and out at all hours\nand complicated bathroom fixtures that are probably a part of the\npermanent collection of the Museum of Modern Art...\nThe article is of course a lot deeper than that, and goes to show the\ndeep passion this guy has for excellence in the field.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/trying-out-calepin", 
            "title": "trying out Calepin", 
            "text": "update: The lack of reliability, worst of which was constant\nunavailability of my blog lead me to move on, this time to Pelican,\nand hosted by GitHub Pages. Here's the setup.\n\nI've been meaning to move my blog(s) away from Posterous, due to its UI\nproblems and ridiculously-slow page loads. I finally did it with the\nhelp of Calepin, which itself has a bunch of problems, which is\nforgiveable given that it's a Beta product:\n\nThe presentation is way too simple/plain, and doesn't provide a way\nto customise it.\nI spent hours struggling with Dropbox login integration, where I\noften had to go to Chrome's Incognito mode, and at some point, had to\ndelete my Dropbox account as well, just to get it to work.\nIt seems crazy that each time I want to publish I have to visit the\nweb page to hit Publish, when Calepin should simply monitor the\nDropbox account.\nThe blog is unreachable whenever I publish. This isn't such a big\ndeal of course, but c'mon.\nWhen hitting Publish, it takes way too long (several seconds) before\nthe page is rendered on the blog.\n...and am sure there will be more as time goes (proven by the fact\nthat this list kept growing as I typed this post)\n\nDespite all these problems, it will have to do for now, until I find\nanother host, and maybe this time I will have to spend some cash.\nIn the interest of balance, here's what attracted me.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-24-released", 
            "title": "wajig 2.4 released", 
            "text": "Less than a week after releasing 2.3, someone discovered a bug when\nrunning the NEW subcommand. All wajig did was fall flat with an ugly\nexception, making this some sort of emergency release. Anyways, I\nalready had some nice improvements, so I released those as well:\n\nThe INSTALL subcommand can now be given a mixture of filenames, .deb\nfiles, and normal package names, and will be able to install the\npackages specified. Previously, only one of these 3 types could be\ninstalled at a time.\nApparently the reasons I gave for removing the \u2014simulate and\n\u2014teaching (now renamed to \u2014teach) options in 2.3 weren't good enough,\nso I reinstated them.\nThe bash completer now completes both lower-case and upper-case\nsubcommands, thanks to Reuben Thomas, an avid wajig user.\nThere's a few other changes, so here's the gory details.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-03-27", 
            "title": "links 2012-03-27", 
            "text": "\nA highly detailed demonstration of SQLite performance, which also\ngoes through various ways of tuning it.\nAdvice to Aimless, Excited Programmers; this sort of advice is not\nnothing new but the writer is so good and the site design so clean\nthat it oughta be kinda canonical.\nNobody Wants to Learn How to Program; interesting advice on\nteaching programming.\na gentle tutorial on Python's xml.etree.ElementTree module\nIt's very interesting to see a browser with relatively little use\ncontinue getting developed, while monsters like Firefox,\nChrome/Chromium, and Safari have (almost) taken over the world.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-23-released", 
            "title": "wajig 2.3 released", 
            "text": "It's been many months since wajig was released, but this was about as\ngood as any since I probably did far more work on it than on any other\nrelease so far:\n\nThe most user-visible change is that I changed the UI to feel more\nstandard/natural, where each of the wajig COMMANDS are 1st-class\ncitizens. Let me give an example of user wanting to install a package\nnamed nautilus, but avoid installing its Recommends depencencies:\n# ole\nwajig \u2014norecommends INSTALL nautilus\n# new\nwajig INSTALL \u2014norecommends nautilus\n\nI call this natural because it makes more sense to have the\n--norecommends command line option to be specified after the\n(wajig) subcommand it modifies. Also, the way it was implemented\npreviously, the option would silently be ignored if it was used in a\ncase where it was irrelevant. That's not good, and it links to the\nnext user-visible change.\n\nThere is less magic and more strictness. Previously, these commands\nresulted in the same outcome:\n\nwajig REMOVEORPHANS\nwajig REMOVE-ORPHANS\nwajig R-____EMOVE-ORPH----___AN_S\n\nWhat wajig did was simply sanitise the commands, getting rid of the\njunk. Well, I don't like that, but since I didn't want to break\npeople's commands/aliases/scripts I actually tried to preserve that\nfunctionality, but argparse didn't let me do that, and messing around\nwith sys.argv before argparse jumped in was an error-prone mess,\nwhich links us to the next change, this time behind-the-scenes.\n\nI replaced the archaic getopt CLI parser with a far more powerful\nargparse. This change alone, when I truly embraced it, using its\nsubcommand methods (see point 1 above), resulting in a ridiculous\nwork that involved mainly unfun work and resulted in changing (adding\nand removing) thousands of lines code.\n\nThe output of command wajig COMMANDS is now generated\ndynamically, instead of simply being read from a separate file.\nAdvantage is that it should now remain more up-to-date.\n\nThe usage info for each COMMAND was store on its own file, and the\naliases were symblic links to them. Now that's ugly, but I did it\nthat was some time ago because I could not think of a better, quick\nway. The ugly solution is simple, but it added over a 100 files in\nuser machines, which is just bad design. Well, modern Linux-based\npackage management makes such invisible to all but the most\navid/curious users, but I never liked it anyways. Now, all of that\nhelp info is auto-generated by argparse (you can imagine I'm a\nbig fan of that module by now).\n\nThere's bunch of other changes, though most was code stuff. As for\nthe user-visible stuff, a few COMMANDS were removed, a few options\nadded/removed. Here's 'all' the gory details.\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/removing-obsolete-packages-from-a-local-debian-repository", 
            "title": "removing obsolete packages from a local Debian repository", 
            "text": "\nbackground info\nBandwidth in South Africa is neither readily-available nor cheap, so\nwhenever I fetch and install Debian packages (e.g. apt-get upgrade),\nI also keep them in a local custom repository. I use a great tool named\nreprepro for this, and this is the command I use to update that\nrepository, given the location of the fresh package files:\n\n$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang /var/cache/apt/archives/*deb\n\nWhat's nice about the command is that, if there is an older version of\nthe pacakge I'm adding, it gets replaced, and the package index is\nupdate accordingly.\n\n\nand now to the topic at hand\nI run that command more or less regularly, but very often the repository\naccumulates some junk:\n\nIf a package gets renamed, reprepro has no way of knowing (at least\nas far as my setup goes). One notable case of this is Debian kernels,\nwhose names match the major release versions (e.g.\nlinux-image-3.1.0-1-686-pae becomes\nlinux-image-3.2.0-1-686-pae when a new upstream release gets\npackaged). Lots other packages change names, and very often, for a\nvariety of reasons (Debian is a little chaotic, often out of\nnecessity, and it's amazing that its developers keep it so damn\nstable given all this change).\nIf I add a package from an external repository or that I converted\nfrom an rpm, reprepro has no way of knowing that fact. Now if I stop\nusing that package, it is just a waste of resources (CPU and disk\nusage).\n\nTo help with the cleanup, I have written the following simple script:\n#!/usr/bin/env python3\n\nimport apt_pkg\nimport gzip\nimport subprocess\n\nCUSTOM_REPO = (\"/home/wena/.custom_repo/dists/tshepang/main/\"\n               \"binary-i386/Packages.gz\")\nWHEEZY_REPO = (\"/var/lib/apt/lists/ftp.de.debian.org_debian_dists_testing_{}_\"\n               \"binary-i386_Packages\")\n\n\ndef main():\n    custom_repo = apt_pkg.TagFile(gzip.open(CUSTOM_REPO, \"rb\"))\n    archive_areas = \"main contrib non-free\".split()\n    wheezy_packages = list()\n    for archive_area in archive_areas:\n        repo = WHEEZY_REPO.format(archive_area)\n        repo = apt_pkg.TagFile(gzip.open(repo, \"rb\"))\n        wheezy_packages.extend([pkg[\"Package\"] for pkg in repo])\n    for package in custom_repo:\n        package_name = package[\"Package\"]\n        if package_name not in wheezy_packages:\n            cmd = \"apt-cache policy \" + package_name\n            subprocess.call(cmd.split())\n            choice = input(\"remove from cache [Y/n]? \")\n            if not choice or choice.lower().startswith(\"y\"):\n                cmd = (\"reprepro -vv --basedir /home/wena/.custom_repo/ \"\n                       \"remove tshepang \" + package_name)\n                subprocess.call(cmd.split())\n\nif __name__ == \"__main__\":\n    main()\n\nAnd here's a snippet of its output:\n\ncx-oracle:\n  Installed: 5.1.1-2\n  Candidate: 5.1.1-2\n  Version table:\n *** 5.1.1-2 0\n        500 file:/home/wena/.custom_repo/ tshepang/main i386 Packages\n        100 /var/lib/dpkg/status\nremove from cache [Y/n]?\n\nWhat it does is look for packages which are only available in my custom\nreposity, as compared with the one in Wheezy (soon to be Debian 7). It\nthen prompts me on whether or not to remove it from that custom\nrepository. Today, it helped me get rid of dozens of junk.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-02-15", 
            "title": "links 2012-02-15", 
            "text": "\nThe amount of testing SQLite goes through before each release is\nimpressive.\nA stern slap on the wrist of noisy people; it's a well-informed\nrebuttal against the famous \"the CPython GIL sucketh\" complaint.\nThis subprocess wrapper looks immensely powerful; I haven't\nneeded its extra features yet, but I love the elegance and seeming\nease-of-use.\nA superb, highly-detailed code review by Winston Ewert.\nThis guy (same one mentioned above) exposed my sloppiness as\na programmer; I was nearly embarassed.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/on-voting", 
            "title": "on voting", 
            "text": "\n\n\"Voting\" reminds me too much of situations where people who don't do\nanything get to say what they want others to do.\n\u2014source\n\nGuido van Rossum on a proposed Python project roadmap.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/attachment-can-lead-to-irrational-behaviour", 
            "title": "attachment can lead to irrational behaviour", 
            "text": "In my previous job, we used to use some Java framework, Mule ESB,\nfor our clients. The project is distributed with a lot of jar files,\nsupposedly for the convenience of users. When we work on a project, we\njust add all those jars to the classpath (we use Eclipse, an excessively\npowerful and ugly IDE). Now, me being a sucker for the Debian way of\ndoing things, I'd install packages providing all those jars from a\nDebian repository, then remove those Mule-distributed files, then add\nsymlinks in place of them pointing back to the actualy files. Imagine\nhow much time it took! Either that, or even easier (but still\ntime-consuming), skip the symlink thing entirely and just add those jars\n(found in /usr/share/java directory) directly.\nBeyond just wasting time, the are other potential problems with my\napproach:\n\nDebian's jar versions did tend to be different to Mule-supplied\nversions. You can imagine what problems this can cause, especially\nbecause the versions included there are most likely the ones used for\ntesting Mule.\nEven if the versions were the same, what if there are slight changes\nfrom Debian's side. Debian's strict software guidelines implies\nthat they'll strip out some stuff that doesn't adhere. The good thing\nis that Debian appends dfsg to the version number, but not\neverybody knows that. And even if they did, they would then need to\nspend time checking exactly what changed.\nDebian doesn't merely re-distribute the jar files. They actually\nrebuild them, with Debian-supplied compilers. Maybe this isn't an\nissue for Java projects, but who knows.\n\nThis is not to knock the Debian way of doing things. It's actually quite\nexcellent (hence my love), but it can't fit all scenarios. See Matt\nZimmerman's excellent post, where he touches on this issue.\nI did wise up a bit by simply doing things the way the makers of Mule\nintended.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2012-02-01", 
            "title": "links 2012-02-01", 
            "text": "\n\"A prayer to the programming gods\" \u2013 decent humor\n\n\nA bit of Zope history, how it rocked, and how it sucked \u2013 makes\nme respect Pyramid even more.\n\n\n\n\nA scathing read regarding incompencies of developers; for the\nsake of completeness, he should have mentioned that developers\noften don't have time to fully understand technologies they are\noften commanded (by employers) to work with.\n\n\n\non the frustrations of waiting too long to get help; great humor\n\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/surprising-discovery-of-the-day", 
            "title": "surprising discovery of the day", 
            "text": "I was not aware that there were two separate words,\nquiet and quite. I used them for their meanings\ninterchangeably, using both spellings unaware.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-requests", 
            "title": "project of note: Requests", 
            "text": "Requests is a Python module that makes it real easy to deal with HTTP.\nAs an example, something as scary as fetching a web page that needs\nauthentication requires only a single line of code:\nrequests.get(\"https://example.com\", auth=(\"user\", \"pass\"))\n\nIt's capable of a lot more of course (tutorial), and it's weird\nthat something this nice hasn't been around for ages. There is another\nthat is much simpler to use and more advanced than Python's standard\nlibrary named httplib2, but it's not quite as simple/elegant:\nh = httplib2.Http(\".cache\")  // ugly\nh.add_credentials(\"user\", \"pass\")\nresp, content = h.request(\"https://example.com\")\n\nAn example for achieving the same with only the standard library is far\nmessier.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/battlestar-galactica-season-3-episode-20", 
            "title": "Battlestar Galactica - Season 3 Episode 20", 
            "text": "I hardly ever write anything about tv productions regardless of how many\ntimes I tend to get impressed, and there hasn't been a shortage of that.\nThat's mainly due to laziness/motivation, but this time I just have to\nmention this one gem:\nThe very last episode of the Season mainly focuses on the trial of one\nformer president who is accused of treason due to surrendering to the\ncylons (a species created by humans) as well as giving them official\napproval to execute dozens of people. The defence given by an assistant\nlawyer is a masterpiece, and would match well with any court thing I've\nseen in my tv/movie-watching history. The performance matches as well,\nand that's interesting because the performer/character combination is\namong the least interesting in the series.\nAs a sidenote, I find this Season to be the best (in a series of\nfour), because it covers more interesting events (the capturing of the\nhumans, the resistance, their eventual rescue, and a lot more, best of\nwhich was the trial of course).\nThis positiveness could make it look like I'm a huge fan of the series,\nbut I'm not. In fact, I too often tend to hate it. There's a whole lot\nof religious non-sense that I can't bear, some seriously annoying\ncharacters, at least overly eccentric one, too much day-dreaming, some\ntoo-stupid plot decisions... but Episode 20 goes some way to help me\nforgive the rest of the shit.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/java-gripes", 
            "title": "Java gripes", 
            "text": "Okay, so Java sucks 'a bit', but the following surprised me:\n\nI struggled to find a way to count the number of elements in an\narray. In a string it's done thus: \"four\".length(). Given that, I\nexpected that {'f', 'o', 'u', 'r'}.length() would gimme the same\nresult. Nah! I found that I had to do\nnew char [] {'f', 'o', 'u', 'r'}.length, and yes, without the\nbrackets after length. WTF! There might be a good reason for such\n(seeming) inconsistency of course, but I've been spoilt by Python's\nelegant equivalents: len(\"four\") and len(['f','o', 'u', 'r'])\nwhich all give the same result. (sidenote: len() is a Python\nbuilt-in function, which explains why there's no dot notation there).\nThe standard library doesn't have CSV handling! I had to find an\nexternal library for that!\nGiven 2 strings, I can't do str1==str2 for comparison, but am\nforced to use the string method, equals: str1.equals(str2). This\nbit me a few times, and am sure am not the only one.\nThe standard library doesn't have .INI file handling (Someone\npointed to a 3rd party library).\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-tracks-bob-marley", 
            "title": "top tracks: Bob Marley", 
            "text": "\n1 landmark\n\nNo Woman, No Cry\n\n\n\n2 masterpieces\n\nStir It Up\nOne Love\n\n\n\n6 excellent works\n\nWaiting in Vain\nKaya\nSun is Shining\nSatisfy My Soul\nRedemption Song\nRastaman Chant\n\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-tracks-burning-spear", 
            "title": "top tracks: Burning Spear", 
            "text": "\n1 landmark\n\nOld Marcus Garvey\n\n\n\n4 masterpieces\n\nTradition\nInvasion (aka Black Wa-da-da)\nMarcus Garvey\nGive Me\n\n\n\n7 excellent works\n\nCreation Rebel\nLion\nThe Wilderness\nSlavery Days\nCivilise Reggae\nLive Good\nJordan River\n\n\n\nhonorable mention\n\nChildren of Today (Living Dub - Vol. 1 - 1993); longer version: We\nSuffer (Original Mix) (Rare and Unreleased - 2001)\n\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-tracks-salif-keita", 
            "title": "top tracks: Salif Keita", 
            "text": "\n5 masterpieces\n\nMandjou (Folon... The Past - 1995)\nInigiche (Mouffou - 2002)\nSouareba (Soro - 1987)\nCono (Soro - 1987)\nYamore (Mouffou - 2002)\n\n\n\n4 excellent works\n\nNyanafin\nTekere\nSeydou\nMadan\nSina (aka Soumbouya)\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-john-palmieri", 
            "title": "developer of note: John Palmieri", 
            "text": "Every so often, there appears a developer who pressures me away from\nmy lazy, unfocused, and undisciplined ass to go do some useful\nprogramming.  This time around it's John Palmieri, the most visible of\nthe developers of PyGObject (Python bindings for GTK+ and GLib).\nThe old way of using GTK+ with Python has for years been PyGTK and\nthis guy has been tirelessly working to move the world to the more\nmodern PyGObject, and has led at least one coding sprint to help\nachieve this goal.  He also appears friendly and humble. He rocks!\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/moving-from-acer-travelmate-to-hp-probook-using-debian", 
            "title": "moving from Acer TravelMate to HP Probook, using Debian", 
            "text": "I have been using an Acer TravelMate 6592 laptop for close to 3 years\n(ever since I got my coding job). It had some issues:\n\nit's damn ugly, though not as much as Lenovo ones\nit requires Intel non-free firmware for its Wi-Fi chipset\nit frequently refused to make the LAN accessible from Linux on boot;\nthis was likely a BIOS issue\nthe battery capacity was below 50% so it didn't last\nthe hard drive was developing bad sectors\n\nOther than that, it truly was an excellent laptop, and I never\ncomplained about its performance, ever since I added a 2GB RAM stick, to\nmake it a total of 4GB (except that I wished my HDD was faster, tempting\nme to buy an SSD). What else I really liked about it is the\nfeature-packed touchpad: Beyond the normal two-finger and\nside-scrolling, it also had up-down-left-right buttons which allowed\nconstant-speed scrolling. It's interesting that such a touchpad is very\nrare.\nI now got an HP Probook 4530s and its pros:\n\nit's stunning\nit's got a real fast hard drive; there were times when I saw speeds\nupwards to 70MB/s, which I never saw with the older laptop\nits Wi-Fi doesn't require non-free software\nit's far more modern (USB3 support) and supposedly faster (Core\ni5-2410M vs. Core 2 Duo T7500), but my typical workload made even the\nTravelMate more than adequate\n\nAnd the cons:\n\na less featureful touchpad\nkeyboard keys placed in weird locations (e.g. pg up and pg dn\nbuttons are placed far away, at the top-right corner; I blame the\n(needless for me) numeric keypad\nthe screen resolution is on the low side and so is the screen size;\nthe older laptop is much bigger even if they are both labeled 15.4\"\n\n...and Debian:\nQuite a few times, I tend to want to stick to a stable release of\nDebian. Following Debian development does take time (frequent updates,\ncuriosity to see what changed, and something getting broken here and\nthere). So I tried to do the same here. Sadly, some of the software in\nSqueeze is too outdated to be optimal, so am glad to have teams like\nDebian Backports folk. But that wasn't enough, so I ended up\ninstalling Xorg components from Debian Unstable (Suspend doesn't work\nwell with Squeeze (Debian 6) and backports doesn't have a newer X\nversion.\nLet's see how long I last trying to keep pure by running as little from\noutside Squeeze as possible.\nupdate:\nThis didn't even last for 1 day. I was having issues with my X hanging\nthe entire OS, forcing me to do a hard-reboot. This happened when I was\nwatching a video using VLC, so I blamed it and installed the version\nfrom Debian Unstable. Sadly, doing things that way resulted in a VLC\nthat refused to die normally, forcing me to do kill -9 vlc. I then\njust screwed my plans and upgraded fully to Unstable, and now VLC quits\ngracefully. Let's see if I'll have the X lockup again.\nupdate 2:\nWell, I still experience machine lock-ups, the bad ones forcing a\nhard-reboot. This might be related to Wi-Fi because I used the system\nfor quite a while using the wired link, without any such lock-up.\nupdate 3:\nNo more lock-ups, except very rarely. I run a mix of Testing and\nUnstable at the moment, but my \"/etc/sources.list\" file points solely at\nmy custom repository and Testing, for it just is tiring to keep tracking\nUnstable... way too much bandwidth.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2011-07-15", 
            "title": "links 2011-07-15", 
            "text": "\nWhat's up with MeeGo?\na really good bug report \u2013 I found this because I was having the\nsame issue with Eclipse\nwonderful openness \u2013 the sort of reporting that raises the\nexpectations of web applications providers\na real nice Chromium dictionary Extension\na graph showing the history FLOSS video editors\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/thanks-to-the-debian-backports-team", 
            "title": "thanks to the Debian backports team", 
            "text": "So I got this new HP laptop, Probook 4530s, and installed Debian 6\n(Squeeze) on it. I was left sitting with two unbearable problems:\n\nThe touchpad wasn't fully operational (GNOME Mouse Preferences didn't\nhave a Touchpad tab where I could change the settings).\nThe video driver seemed to have a problem according to the output of\nxvinfo (no adaptors present).\n\nI curiously looked at the backports, and found Linux kernel 2.6.38\n(Squeeze has 2.6.32). I didn't expect much from it, but installed it\nanyway (I heard that it has improved desktop responsiveness). I was\npleasantly surprised to find that it fixed the above two problems.\nLoveliness.\nOn another note, I found that Mercurial 1.8 also has a backport.\nThis is great news because I have repositories I created with that\nversion and the format is incompatible with Squeeze's 1.6.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-first-code-contribution-to-the-cpython-project", 
            "title": "my first code contribution to the CPython project", 
            "text": "Looking at the long list of people who have contributed to Python,\nyou will notice that my name is somewhere. This moment excites me,\nconsidering my deep respect for the project (the only other mega FLOSS\nproject I have comparable respect for is Debian).\nInterestinly, my patch went through a few iterations before it was\naccepted, and even then, with some modifications. It was an eye-opening\nexperience, and made me learn a little more than I thought I needed to.\nNow, I just need to do a few more of these.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/unfair-criticism-of-ubuntu", 
            "title": "unfair criticism of Ubuntu", 
            "text": "\n\nThe developers who castigate Ubuntu are uniformly silent about the\nnumber of kernel patches coming from the Mandriva camp. They have\nnothing to say about how much Xandros gives back to Debian. Nobody\ntotals up contributions from Gentoo. There are no complaints about\nSlackware's presence in the community. Arch Linux developers do not\nhear that they are not doing enough. There are no high-profile\narticles on how rPath is taking advantage of free software\ndevelopers.\n\u2014In defence of Ubuntu\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2011-05-17", 
            "title": "links 2011-05-17", 
            "text": "\nAmazing works of art by perhaps the world's best street artist, Banksy.\nMotion Twin IS a company to work 'for'; the French tranlation is\nnot perfect but is close enough to help make sense of the inspiring\nstory.\ndelicious humor\nnice humor regarding names\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-22-released", 
            "title": "wajig 2.2 released", 
            "text": "Our friendly Debian developer agreed to upload yet another release of\nwajig to Debian.\n\nThis one is quite special since it now uses Python 3.\nIt also does automatic dependency installation for DEB files. This\npart of the work took me longer because python-apt doesn't exactly\nmake it easy. I even had to look in the code to be sure what exactly\nis happening. I ended up using a mixture of dpkg (for installation of\nstated DEBs, and to configure them) and python-apt (for the automatic\ninstallation part).\nThe WHICHPACKAGE command, which displays which packages the given\nfile path belongs to, got improved. It was using custom\nimplementation which was broken for some uses, but there are\navailable tools (dpkg --list for locally-installed packages and\napt-file search for both local and remote packages) that do the\njob better, and I made use of them. These tools were probably not\navaialable the time this feature was added to wajig.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-21-released", 
            "title": "wajig 2.1 released", 
            "text": "Today I released a new version of wajig, first time in about half a\nyear. It's not even like there's some groundbreaking stuff or anything,\nI just haven't put as much time. Regardless, it's quite a good release.\nOne the changes is getting rid of gjig, the GUI interface.\n\nI actually did like it, but it was never a production standard piece\nof code. It was actually quite nifty and useful, but the interface\nwas not at all modern or usual. It also needed a lot of polish.\nI learned a lot from trying to port it away from the deprecated\nlibglade library to a more modern gtkbuilder (part of GTK+) but the\nporting documentation wasn't really good, so I was left with the\noption doing it from scratch. Not exactly a small task.\nWorse still is the fact that there were more pro-looking GUI package\nmanagers out there.\nIt didn't keep up with the pace of development wajig. It was a\n2nd-class citizen.\nOh, and I'm so afraid of GUI developement, or should I say GTK+. It\nwas never an easy domain for me, and I still don't really get it. And\nyes, I've tried. Maybe other toolkits are easier, and I'm too lazy to\ncheck them out. I prefer backend stuff, where I don't have to deal\nwith these GUI things.\nI wanted to move wajig forward into Python 3 land, and given that\nGTK+ support for that Python version isn't exactly mature (at time of\nwriting), I felt that I was being held back. And don't ask me why\nrush for Python 3, because you are not going to get anything stronger\nthan \"it's what the kool kids use\".\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/from-squeeze-to-unstable-and-back-again", 
            "title": "from Squeeze to Unstable, and back again", 
            "text": "With all the noise regarding GNOME 3, I decided to lose patience and go\ncheck it out. Thing is it's currently in Debian Experimental suite, so I\ninstalled the essential components from there, stuff like gnome-shell,\nmutter and gnome-panel, and things weren't so smooth. So I thought that\nit might be because I was still using Squeeze (Debian 6, released in\nFebruary), so I upgraded my entire system to Sid (the main Debian\ndevelopment suite). Well, the new hotness wasn't as usable as I'd like,\nso I decided to go back to my rock-solid and familiar GNOME 2\nenvironment. I was surpride that I could to downgrade the whole thing\nback to Squeeze, without any major hitch. Of course the downgrading\nprocess wasn't exactly smooth (lots of package removals before\nre-installation for one), but I'm running Squeeze as we speak.\nIt would have been quicker for me to just re-install of course,\nespecially because I have some installation and setup scripts to make it\nquick. But doing that would imply I wouln't have access to my computer\nfor minutes on end. Not good. Also, it's nice that I continued running\nthat fine-looking GNOME 3, while under-the-hood it was being removed. It\ntook just a logout and back in to be back home... GNOME 2 from Squeeze.\nNote that this sort of thing is not officially supported by Debian. It's\nprobably going to be harder to do this as Unstable develops further. But\nthis exercise gave me newfound respect for the strength and stability of\nthe Debian system.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/the-need-for-quality-in-healthcare", 
            "title": "the need for quality in healthcare", 
            "text": "\n\nFor every drowned and pulseless child rescued by intensive care,\nthere are many more who don't make it\u2014and not just because their\nbodies are too far gone. Machines break down; a team can't get\nmoving fast enough; a simple step is forgotten. Such cases don't get\nwritten up in The Annals of Thoracic Surgery, but they are the norm.\nIntensive-care medicine has become the art of managing extreme\ncomplexity\u2014and a test of whether such complexity can, in fact, be\nhumanly mastered.\n\u2014The Checklist\n\nThat's some scary shit. Read the whole article to get the context\n(i.e. the heroic work involved in saving that girl's life).\nIt's a great read.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-josselin-mouette", 
            "title": "developer of note: Josselin Mouette", 
            "text": "The efforts that Josselin Mouette puts into maintaining Debian's GNOME\nare amazing (and seemingly thankless). He is the most visible member of\nthat team-maintained part of Debian. He also portrays deep knowledge of\nGNOME's oft-inconsistent and oft-complex internals, and does participate\nin upstream discussions.\nHere are two examples of his heroic efforts:\n\nHis great summary of GNOME's then-current release status.\nWith the release of GNOME 3, here he prepares a migration plan.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/cleansing-multiple-build-directories", 
            "title": "cleansing multiple build directories", 
            "text": "In my adventures of building GNOME with JHBuild, it often happens\nthat when I tweak something that affects the build environment (e.g. use\nsystem Python instead of JHBuild-built one), I get a heck of a lot of\nbuild failures. This will happen even after I run jhbuild clean (which\nruns make clean on the modules), testimony to the weakness ofthe\nGNOME build infrastructure (autotools, ...). This means that I need to\nrun make distclean or better still (where applicable)\ngit clean -dfx. Note that I sometimes even have to uninstall one or\ntwo modules (on JHBuild path) to get a build failure fixe\n(jhbuild uninstall modulename). This is laborious work, so I\nsometimes just wipe out the entire installation.\nNote that there's dozens of modules to build, so I wrote this little\nscript to take care of it:\nimport os\nimport subprocess\ntop_level = os.path.expanduser(\"~/src/gnome\")\nfor filename in os.listdir(top_level):\n    full_path = \"{}/{}\".format(top_level, filename)\n    if os.path.isdir(full_path):\n        cmd = \"cd ~/src/gnome/{} && git clean -dfx\".format(filename)\n        if subprocess.call(cmd, shell=True) != 0:\n            cmd = \"cd ~/src/gnome/{} && make distclean\".format(filename)\n            if subprocess.call(cmd, shell=True) != 0:\n                cmd = \"cd ~/src/gnome/{} && make clean\".format(filename)\n                subprocess.call(cmd, shell=True)\n\n\nupdate\nSomeone very kind guy made a bunch of suggestions, making my code much\nbetter:\nimport os\nimport subprocess\ntop_level = os.path.expanduser(\"~/src/gnome\")\nfor filename in os.listdir(top_level):\n    full_path = os.path.join(top_level, filename)\n    if os.path.isdir(full_path):\n        os.chdir(full_path)\n        if subprocess.call(\"git clean -dfx\".split()) != 0:\n            if subprocess.call(\"make distclean\".split()) != 0:\n                subprocess.call(\"make clean\".split())\n\n\n\nfurther reading\nmodules: os, os.path, subprocess\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-jhbuild-setup", 
            "title": "my JHBuild setup", 
            "text": "JHBuild is a powerful and flexible build tool for GNOME. It does\ntakes some getting used to in terms of set-up, but this wiki page is\nquite gentle, and it details how to get the code running on your\nmachine.\nIf you use Debian (or Ubuntu), you can use run this command:\nwajig --norecommends install build-essential docbook-xsl flex \\\nbison cvs gperf cmake  {uuid,ppp}-dev \\\nlibx{composite,randr,damage,ft2,i,t}-dev \\\nlibxcb-{event1,aux0,atom1}-dev \\\nlib{pam0g,iw,db,gdbm,png12,ffi,tiff,vorbis,gl1-mesa,unistring} \\\nlib{quvi,icu,neon27,usb-1.0-0,asound2,ncurses5,udev,usb,acl1} \\\nlib{boost-signals,ldap2,sasl2}-dev\n\nIt's installs the development packages that will be needed by the build\nprocess. The --no-recommends option means I want to limit the\ninstallation to packages I really need, avoiding the extra stuff deemed\nby the packager to be useful for me.\nMy \"~/.jhbuilrc\" contains the following:\n# build directory\ncheckoutroot = os.path.expanduser(\"~/src/gnome\")\n\n# don't spew lots of distracting status messages\nnotrayicon = True\n\n# attempt to build modules even if their dependencies weren't successfully built\nnopoison = True\n\n# don't build these since they have issues; this implies that I must install my distro's development versions\nskip = ['nss', 'nspr']\n\n# dont fetch moduleset xml files from the web; use ones that are installed locally\nuse_local_modulesets = True\n\n# where html-formatted logs are kept\ntinderbox_outputdir = os.path.expanduser(\"~/temp/tinderbox\")\n\nSee Configuration File Reference for a detailed explanation of these\noptions.\nAfter this, I run jhbuild bootstrap --ignore-system. This downloads,\nbuilds, and installs the basic tools for building packages (here's the\nxml file it uses to determine what these tools are, and where it\ndownloads them from). To avoid issues with some incompatibility with my\nOS, I use --ignore-system, which ensures that the bootstrap command\nwill use the blessed versions of these tools.\nWhen the bootstrap process is complete, I run the not-so-descriptive\ncommand jhbuild tinderbox (See Command Reference for a detailed\nexplanation of this and the other options). This is the same as build,\nexcept that the output is stored in html files, in a directory specified\nby tinderbox_outputdir in the config file.\nIdeally, some hours later, the process should be complete. Reaching for\n\"~/temp/tinderbox\" will present you with a whole bunch of html files,\none for each module. The file \"index.html\" will give a decent page that\nacts like a summary of the entire build process, showing which modules\nfailed, and on what build stages. Gorgeous!\n\nsidenotes:\n\nThis process is rather simplified, for the sake of clarity.\nI run Debian 6, codenamed Squeeze.\nThere is a more thorough tutorial elsewhere.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/cat-python-and-perl", 
            "title": "cat, Python, and Perl", 
            "text": "I came across a tutorial that showes how to implement a simple cat in\nPerl. I've modified their example for the sake of simplicity:\n1\n2\n3\n4\n5\n6\n7\n8\n9 sub cat {\n     foreach my $filename (@_) {\n         open FILE, $filename;\n         while (my $line = <FILE>) {\n             print $line;\n         }\n     }\n }\n cat @ARGV;\n\nRunning this script (e.g. perl cat.pl file)\nwill display those files as if you ran cat file.\nI decided to see how the Python example would look like:\n1\n2\n3\n4\n5\n6\n7 import sys\n def cat(files):\n     for filename in files:\n         with open(filename) as FILE:\n             for line in FILE:\n                 print(line, end=\"\")\n cat(sys.argv[1:])\n\nRunning this script (e.g. python3 cat.py file1 file2)\nwill give exactly the same result as above.\n\nnotes\n\nThe Perl keyword, my, indicates that the variabe it refers to is\nlocal. Without that, it's taken to be global. As for Python, this is\nimplicit, and depends on where the variable is placed (scope).\nPerl has special ways of identifying data types. In our example,\n$ is used to identify a variable that has a single value, and is\nknown as a scalar in Perl talk. This can be tedious of course (so\nmuch typing!). In Python, the data fed into the variable is the only\nthing that determines what type of the variable it is. I see this as\nnoise from Perl. It results in some badness, as in you can have two\nvariables names be the same, but given different types (e.g.\nmy $var; my @var;)\nThe upper case file handler, FILE, is a matter of convention for\nPerl, and can be named 'anything'. I used it in the Python sample\nonly for the sake of clarity.\nThe <> operator is special syntax that means a file is being\nmanipulated. Python has no such.\nThe @_ is an argument list (@ARGV) from the function call,\ncat. This is one other thing that is implicit about Perl, where\nyou have to learn extra syntax (and concepts), where a simple\nargument list should have been provided during the function\ndeclaration, as in Python's cat(files).\nNote that I didn't need to import anything to get Perl to work with\ncommand line arguments. With Python, I need to explicitly do so,\nand that's via the sys module, which is part of its standard library.\nThe Python with statement is meant to make our lives easier, but\nalso adds syntax to the language. What it does is close a file for us\nso we don't have to do it.\nThe Python print() function adds a newline by default, and that\nwould results in ugly output from our code, that's why we used the\nend=\"\".\nThe [1:] from the last statement in the Python example means that\nwe are slicing the list, removing the first element (element 0), and\nkeeping everything else. We do this because the current running\nscript is considered by Python as element 0, while in Perl, the 1st\nelement is actually the first thing that appears on the command line\nafter the script name. One would say that Perl does this more\nelegantly.\n\n\n\nfurther reading\n\nPython scope\nPython print function\nPython with statement\n\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/music-is-the-weapon-2004", 
            "title": "Music is the Weapon (2004)", 
            "text": "I have deep respect for Fela Kuti's musicianship, and more than any\nother musician I've ever listened to. His intense love for the craft,\nthough I suspect that it may at times been detrimental to those\nsurrounding him, is hard to beat. His political views seemed relevant\ntoo, as he mentions Nigerian government's oppressive acts, one of which\nresulted in the death of his mother. How he was going to help correct\nthese injustices is another thing altogether\nFela Kuti was an eccentric character, at least as portrayed. He had the\nfearless attitude of an traditional activist, which is a quality I\nadmire (and lack). He also promoted and practiced traditional African\nreligion (while opposing Christianity and Islam), and polygamy, which is\nokay in itself, until the fact that the women themselves would not be\nallowed to have other partners. Maybe Fela didn't mind it (he din't\nmention it), but I doubt it. That's some double standards which I really\nhate.\nThe documentary itself is pretty decent, but lacks the depth I was\nhoping for. I guess I'm more interested in the musical Fela Kuti than\nthe politics, even though one heavily influenced the other, making it\nhard to separrate the two. But check out this quality review, which\nis far better and more detailed than I can muster.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/another-visit-to-eastern-cape", 
            "title": "another visit to Eastern Cape", 
            "text": "Last time, I raved about my experiences at a friend's home place,\nNyosini. My memory is not to be completely trusted, but this second (or\nthird, if we count attending a funeral). one was even better. Such\nhospitality is what I'm sure most people on the planet have never\nexperienced. We (me and two friends, who were just as impressed) were\ntreated like royalty. We slept there just one night though, so we spent\nnearly all our time there in one yard.\nI have never seen a family quite like this. My own family is quite\nclose, but definitely not as kindly as this one. And by the way, there\nare no exceptions. The love they have, and express, for each other is...\ndamn I wish I was a better writer.\nI met Bongo again, and the guy's character hasn't changed a bit... maybe\neven more shy than last time, I can't tell. Lwazi and Siya weren't there\n(boarding school).\nOne could say it was me (us?) paying homage to that wonderful family\n(it's been over 3 years), but also an excuse to go enjoy the warmth of\ntheir welcome, not to mention the gorgeous scenery of the surrounding\nhills.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/floetic-2002", 
            "title": "Floetic (2002)", 
            "text": "I love the smooth melody that is *Floetic* by Floetry. It is the sort\nof sound you find in Jill Scott's near-masterpiece of an album, Who's\nJill Scott.\nHere's my favorites:\n\ntrack 5: \"Getting Late\" \u2013 not nearly as seductive as \"Say Yes\", but\nwhat it's a masterwork\ntrack 8: \"Say Yes\" \u2013 it's most notable thing is the sensual play by\none them gals; makes me wanna say... yes\ntrack 2: \"Floetic\" \u2013 energetic and nearly-formulaic; beautiful\narrangements\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-iotop", 
            "title": "project of note: Iotop", 
            "text": "Iotop displays disk I/O usage of individual process, in a way similar\nto top. What I really loved though is that it allows one to display the\naccumulated amount of I/O on any of the DISK READ, DISK WRITE, SWAPIN,\nand IO (overall). This is through a nifty interface:\n\nYou just press a on the keyboard, and it will sort the hungriest\nprocesses on top.\nReversing the order, you just press r.\nIf you want to sort by other colums, you just press the left/right\nkey.\n\nThe presentation is rather busy, and it doesn't have the myriad\noptions that top has (e.g. I can't chose to hide any of the columns\nI'm uninterested in), but it's more than good enough for it's specific\npurpose.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/beethovens-symphony-9", 
            "title": "Beethoven's Symphony 9", 
            "text": "I was led to listen to Beethoven's critically-acclaimed \"Symphony No.\n9\". Well, let's say I'm a novice regarding Classical music, but I didn't\nfind anything amazing in there. Let's call it acquired taste, but I've\nheard dozens of Classical tracks that were superior. Let's say maybe I\nwasn't focusing much on the music (I was listening to it while browsing\nthe web). Oh, and I even played it twice just to make sure, and still...\nnothing.\nNOTE: the version I listened to is formally titled Symphony No.9 in\nD minor, Op.125 \u2013 \"Choral\" and was played by Wiener Philharmoniker,\nOrchestra.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/ouch", 
            "title": "ouch!", 
            "text": "\n\n...while Eliezer Yudkowsky has a ton of interesting things to say\nabout a lot of subjects, he's also philosophically incompetent (at\nleast in some areas) and I worry that enshrining him as your guru\nwill dull your philosophical acuity.\n\u2014source\n\nA comment by someone simply known as Mark in Luke Muehlhauser's post,\nNew Directions for CommonSenseAtheism.com.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/the-b-sides-1990-2000-2002", 
            "title": "The B-Sides 1990-2000 (2002)", 
            "text": "I'm currently enjoying the wonderful \"The B-Sides 1990-2000\" (2002)\nby U2. It's a bunch of real nice Dance re-mixes.\nHere's my favorites:\n\ntrack 8: Salom\u00e9 (Zooromancer Remix)\ntrack 9: Even Better Than The Real Thing (The Perfecto Mix)\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/hold-it-down-1995", 
            "title": "Hold It Down (1995)", 
            "text": "I recently got hold of \"Hold It Down\" (1995) by Das EFX. Real good\nole-style hip-hop, thanks to a friend who, when I asked who he reckoned\nthe best hip-hop group is, he mentioned Das EFX. In my investigations, I\nalso got hold of their \"Generation EFX\" (1998) which is really bad.\nStrange that just 3 years later people can fuck up like that.\nHere's my favorites:\n\ntrack 18 \u2013 Hardcore Rap Act\ntrack 12 \u2013 Alright\ntrack 05 \u2013 Real Hip Hop\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/plotting-with-matplotlib", 
            "title": "plotting with matplotlib", 
            "text": "Here's drawing a simple graph:\nfrom matplotlib import pyplot\nx = range(10)  # a list of 10 integers, 0-9\ny = range(10)\npyplot.plot(x, y)\npyplot.show()\n\nAnd now for something a little more interesting:\nimport random\nfrom matplotlib import pyplot\nx = range(10)\ny = random.sample(range(10), 10)\npyplot.plot(x, y)\npyplot.show()\n\nWe can have more than one graph on a single figure:\nimport random\nfrom matplotlib import pyplot\nx = range(10)\ny1 = random.sample(range(10), 10)\ny2 = random.sample(range(10), 10)\npyplot.plot(x, y1, x, y2)\npyplot.show()\n\nWhat if the two graphs have much differing ranges:\nimport random\nfrom matplotlib import pyplot\nx = range(10)\ny1 = random.sample(range(10), 10)\ny2 = random.sample(range(100, 110), 10)\npyplot.plot(x, y1, x, y2)\npyplot.show()\n\nDepending on need, that might not be ideal.\nSo let's create two separate y-axes:\nimport random\nfrom matplotlib import pyplot\nx = range(10)\ny1 = random.sample(range(10), 10)\ny2 = random.sample(range(100, 110), 10)\npyplot.plot(x, y1)\npyplot.twinx()\npyplot.plot(x, y2)\npyplot.show()\n\nYeah, not exactly ideal. We lost the automatic coloring, and we don't\neven know which graph is which. Let's do better:\nimport random\nfrom matplotlib import pyplot\nx = range(10)\ny1 = random.sample(range(10), 10)\ny2 = random.sample(range(100, 110), 10)\npyplot.plot(x, y1, \"red\")\npyplot.ylabel(\"y1\", color=\"red\")\npyplot.twinx()\npyplot.plot(x, y2, \"blue\")\npyplot.ylabel(\"y2\", color=\"blue\")\npyplot.show()\n\nThis was done with the help of this example. There's a heck of a\nlot more.\n\nfurther reading\n\nbuilt-in function: range\nmodule: random\n3rd-party module: matplotlib.pyplot\nmatplotlib documentation\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-matplotlib", 
            "title": "project of note: matplotlib", 
            "text": "I believe matplotlib is THE plotting library for Python. It happens\nto be highly advanced too, and has extensive documentation to show up\nfor it, including a large collection examples and a gallery of\nplots (and the code used to produce them).\nI played a bit with it and was later on impressed by its\nversatility.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2011-02-15", 
            "title": "links 2011-02-15", 
            "text": "\nmy first CPython feature request; unsurprisingly, it was rejected\nI still can't comprehend why Ubuntu gods decided to put their window\ncontrols on the left, and so does this guy (via)\nOperating Systems Lifecycle Chart \u2013 nice presentation, nice site\ndesign\nThe tools used by one very advanced Debian user; this is quality\nand in-depth writing.\nSomeone claimed Gnucash was to blame for her move to Linux-based\nsystems; for another, the tool was Meld.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/comparing-debian-repositories", 
            "title": "comparing Debian repositories", 
            "text": "If you got two Debian repositories, it's quite easy to check the\ndifferences in package versions between them:\nimport os\nimport gzip\nimport apt_pkg\n\nrepo1 = \"~/.repo_custom/dists/cache/main/binary-i386/Packages.gz\"\nrepo1 = os.path.expanduser(repo1)\nrepo1 = apt_pkg.TagFile(gzip.open(repo1, \"rb\"))\nrepo1 = dict([(pkg[\"Package\"], pkg[\"Version\"]) for pkg in repo1])\n\nrepo2 = \"~/.repo_bin/dists/squeeze/main/binary-i386/Packages.gz\"\nrepo2 = os.path.expanduser(repo2)\nrepo2 = apt_pkg.TagFile(gzip.open(repo2, \"rb\"))\nrepo2 = dict([(pkg[\"Package\"], pkg[\"Version\"]) for pkg in repo2])\n\napt_pkg.init_system()\nfor pkg in repo1:\n    if pkg in repo2:\n        vc = apt_pkg.version_compare(repo1[pkg], repo2[pkg])\n        if vc > 0:\n            print(\"{0}t{1}t({2})\".format(repo1[pkg], repo2[pkg], pkg))\n\nThe line import apt_pkg implies that python3-apt is installed.\nHere's a snippet of what the output will look like:\n\n2.32.1-2    2.28.1-6    (gconf-defaults-service)\n0.23.0-1    0.21.1-1    (pylint)\n2.91.5-2    2.30.2-2    (libgnomekbd-common)\n0.21.2-1    0.16.4-1    (libpixman-1-dev)\n2.91.7-1    2.30.1-2    (nautilus)\n0.9.22-1    0.9.21-3    (pulseaudio-utils)\n\nHere, we get a display of package versions where the repo1 (custom repo\nin this case) is greater than repo2 version. To do it the other way\naround, use the < character in the comparison line, if vc > 0.\n\nfurther reading\n\nmodules: gzip, os\n3rd party library: apt_pkg\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2011-02-07", 
            "title": "links 2011-02-07", 
            "text": "\nThe Law of Leaky Abstractions\nOpen Source Contribution Etiquette\na gentle intro to Unix processes, and the Python subprocess\nmodule\nHow does one make Java ignore the number of spaces in a string when\nsplitting?\non the importance of decent documentation \u2013 a great post\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/splitting-strings", 
            "title": "splitting strings", 
            "text": "If I have a string with spaces, and wanted to split it into a\nlist/array, I would use this:\nsplit_string = \"a b c\".split()\nprint(split_string)\n\nOutput:\n\n['a', 'b', 'c']\n\nI can go ahead and specify a delimiter (which character the string must\nsplit on):\nsplit_string = \"string with spaces\".split(\" \")\nprint(split_string)\n\nI get the same result:\n\n['a', 'b', 'c']\n\nBut what if my string wasn't so forgiving?\nsplit_string = \"a b  c\".split(\" \")\nprint(split_string)\n\nOutput:\n\n['a', 'b', '', 'c']\n\nNot exactly what we want. Leaving the delimiter out gives us the exact\nsame list as when we had this with a forgiving string.\nAnyways, the point is that for a lot of cases, probably a majority, when\none wants to perform a string split, it's because they want to delimit\nit with spaces. So, Python covers for that common use-case. That's a bit\nof magic (justification) one might take for granted, because it's\nnot available in PHP and Java. I'm here only going to show Java\nexamples. PHP examples aren't that much different though.\nHere goes:\nimport java.util.Arrays;\nString[] splitString = \"a b  c\".split(\" \");\nSystem.out.println(Arrays.asList(splitString));\n\nOutput:\n\n[a, b, , c]\n\nThat's not what we want, so in order to cover for my unforgiving string,\nI get to use regular expressions (regexp)?\nimport java.util.Arrays;\nString[] splitString = \"string with spaces\".split(\" +\");\nSystem.out.println(Arrays.asList(splitString));\n\nOutput:\n\n[a, b, c]\n\nThe + in the split() method indicates that the match can either\nbe one or more consecutive spaces.\nThat's not what we want, so in order to cover for my unforgiving string,\nI get to use regular expressions (regexp)?\nString[] splitString = \"string with spaces\".split(\" +\");\nSystem.out.println(Arrays.asList(splitString));\n\nOutput:\n\n[a, b, c]\n\nBut what if the string was even less forgiving. In this case, having\ntabs as well? We need some more regexp help:\nimport java.util.Arrays;\nString[] splitString = \"a    bnc\".split(\"\\s+\");\nSystem.out.println(Arrays.asList(splitString));\n\nOutput:\n\n[a, b, c]\n\nThe s matches any white space.\nWith Python, I expected the default way to work but it didn't, but came\nback disappointed:\nsplit_string = \"a    bnc\".split(\" \")\nprint(split_string)\n\nOutput:\n\n['at', 'bnc']\n\nPerhaps it's a philosophical difference, but it's harder to do this with\nPython. This is the only thing so that I found easier to achieve in Java\nthan in Python:\nimport re\nsplit_string = re.split(\"s+\", \"a    bnc\")\nprint(split_string)\n\n...and we finally get what we want:\n\n['a', 'b', 'c']\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/basic-configparser-usage", 
            "title": "basic ConfigParser usage", 
            "text": "Reading .INI files is very easy with Python. Say you had a file,\n\"config.cfg\", with this content:\n\n[numbers]\none: 1\ntwo: 2\n\nThe code to read that content is:\nimport configparser\nconf = configparser.ConfigParser()\nconf.read(\"config.cfg\")\nitems = conf.items(\"numbers\")\nprint(items)\n\nOutput:\n\n[('one', '1'), ('two', '2')]\n\nThat's a list of tuples, each tuple a key-value pair.\nEven better, since these are key-value pairs, why not use a more\nsuitable data type? Here goes:\nimport configparser\nconf = configparser.ConfigParser()\nconf.read(\"config.cfg\")\nitems = dict(conf.items(\"numbers\"))\nprint(items)\n\nOutput:\n\n{'two': '2', 'one': '1'}\n\nThat's the dict function, which takes a list of tuples, and converts\nthem to a dictionary. You might also have noticed that the ordering is\nnow a bit off. That's because the dict type doesn't care about ordering.\nRemember that in order to access dictionary content, you use a key and\nnot an index:\n>>> d = {1: 'one'}\n>>> d[0]\nTraceback (most recent call last):\n  File \"\", line 1, in\nKeyError: 0\n>>> d[1]\n'one'\n\n\nfurther reading\n\nconfigparser module\ndict mapping type\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/dangerous-inconsistency-in-symlink-removal", 
            "title": "dangerous inconsistency in symlink removal", 
            "text": "Here's how to make a symlink and to delete it:\nmkdir dir\nln -s dir dirlink\nrm -r dirlink\n\nHere's another way to delete it:\nrm -r dirlink/\n\nAlthough it will do the job, it will actually complain with:\nrm: cannot remove `dirlink': Not a directory\n\nNote that we could have achieved the deletion with just:\nrm dirlink\n\nThis is because the symlink is just a single file. So there's no need to\ntreat it like a directory when deleting.\nSadly, this behaviour is inconsistent when there is a mounted voulem.\nThe first way of deletion has no problem, but the second one will wipe\nout the entire drive, if it so happens that dir is the mount\ndirectory (i.e. ln -s /media/my_drive dirlink && rm -r dirlink/). I\nlearned this the hard way :(\n[sidenote] Here's some explanation.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/basic-usage-of-python-with-oracle-db-in-debian", 
            "title": "basic usage of Python with Oracle DB, in Debian", 
            "text": "What if you wanted to access Oracle using Python? Once you are set\nup, it's real easy. We use cx_Oracle, the most popular Python\nlibrary to read Oracle DBs.\nLet's start by simply reading the DB:\nimport cx_Oracle\nconn = cx_Oracle.connect(\"usr\", \"pwd\", \"tns\")\ncursor = conn.cursor()\ncursor.execute(\"SELECT * TABLE_NAME\")\nfor item in cursor.fetchall()[0]:\n    print(item)\nconn.close()\n\nThe cx_Oracle explain exactly what each of these means.\nIf we wanted instead to modify stuff in there, we only add one extra\nline, which is cursor.commit, like this:\nimport cx_Oracle\nconn = cx_Oracle.connect(\"usr\", \"pwd\", \"tns\")\ncursor = conn.cursor()\ncursor.execute(\"SELECT * TABLE_NAME\")\ncursor.commit()\nconn.close()\n\nFor real-world code, you are of course going to add exception handling\nfor all this, something like this:\nimport cx_Oracle\ntry:\n    conn = cx_Oracle.connect(\"usr\", \"pwd\", \"tns\")\n    cursor = conn.cursor()\n    cursor.execute(\"SELECT * TABLE_NAME\")\n    for item in cursor.fetchall()[0]:\n        print(item)\n    conn.close()\nexcept Exception as e:\n    print(e)\n\nThat exception handling is rather oversimplified though, but is good\nenough for illustrative purposes. Also, note that there is no timeout\nset in case of problematic/slow network access, so my code will just sit\nthere waiting to connect.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/using-pythons-subprocess-module", 
            "title": "using Python's subprocess module", 
            "text": "There are at least 2 ways to run a simple command like echo test in\nPython: via the shell, or directly (via the kernel).\nThis is via the shell:\nimport subprocess\nsubprocess.Popen(\"echo test\", shell=True)\n\nOutput:\n\ntest\n\nThis is via the kernel:\nimport subprocess\np = subprocess.Popen([\"echo\", \"test\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\noutput = p.communicate()\nprint(output)\n\nOutput:\n\n(b'testn', b'')\n\nNot exactly what we want. The output is actually a tuple (stdout,\nstderr). Note that by default, shell=False, and that's why it's\nnot stated here.\nTo get the equivalent of what we get from the first example, we have to\ndo a bit more work:\nimport subprocess\np = subprocess.Popen([\"echo\", \"test\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\noutput = p.communicate()\nprint(output[0].decode(), end=\"\")\n\nOutput:\n\ntest\n\nThe b thing indicates that the string is in bytes format. To get a\nnormal string from that, just run the string's decode method. Also,\nthat I had to use the end argument on the print function, was to\navoid an empty line on the terminal output.\nAs can be seen, this means we do much of the work ourself, but the\nbenefit is that we now have finer-grained control (e.g. we get to\ncontrol when to display the output). Another benefit is that it is more\nsecure to do it this way (I don't know the details, so see shell\ninjection for the argument).\n\nfurther reading\n\nThere is a whole wealth of info on this from a gentle tutorial\nwhere I learned this stuff. It also explains what pipes are\n(subprocess.PIPE)\nAlso, take a look at the official doc for the Popen.communicate()\nmethod\na great explanation of what strings really are, and how they\nrelate to Python 3\n\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/shlex-and-subprocess", 
            "title": "shlex and subprocess", 
            "text": "I learned about a module called shlex. It's stated to be a simple\nlexical analyzer, and I don't really know what this means, but I found\nat least one of its uses. It provides a convenience method that lets me\nsplit a command line string, to feed into subprocess module.\nLet's say I want to run the command /bin/cat 'file with spaces' from\nwithin python. A normal split won't work, because it uses white\nspace as a delimiter (by default). To test, I will create a file named\n\"file with spaces\" and add text\n(content of 'file with spaces').\n$ echo 'content of file with spaces' > 'file with spaces'\n\nAnd here's the code, using the normal split method:\nimport subprocess\ncmd = \"/bin/cat 'file with spaces'\"\nformatted_cmd = cmd.split()\nsubprocess.Popen(formatted_cmd)\n\nOutput:\n/bin/cat: 'file: No such file or directory\n/bin/cat: with: No such file or directory\n/bin/cat: spaces': No such file or directory\n\nThat's when shlex module gets to be useful.\nimport shlex, subprocess\ncmd = \"/bin/cat 'file with spaces'\"\nformatted_cmd = shlex.split(cmd)\nsubprocess.Popen(formatted_cmd)\n\nOutput:\n\ncontent of 'file with spaces'\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/getting-rid-of-junk", 
            "title": "getting rid of junk", 
            "text": "PZ Myers of Pharyngula fame is the best atheist writer I've read yet,\nand his blog challenges that of Luke Muehlhauser's Common Sense Atheism\nas the best atheism blog I've read yet.\nWatch him trash away his Bible and Koran,\nin a far more symbolic way than I did with my Bible some years ago...\nI simply piled it on top of the rest of the trash.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-geany", 
            "title": "project of note: Geany", 
            "text": "I've been a satisfied user of Geany, a lightweight IDE, these past few\nmonths:\n\nautomatically detects if it should auto-indent (EG after a function\ndefinition in Python)\ngot code-folding\ncan highlight #include file and open it (on new tab); does not do\nthis if it's a system file (/usr/include) though\ngot terminal emulator on bottom (though I don't use it)\ncan automatically detect tab width (or so it claims)\nhas a usage finder which shows where a given function is called, even\namong multiple files\ngot autosave option as a plugin\ngot file browser option as a plugin (although it does not detect\nfilesystem changes, EG when a file is deleted the view is not updated\nto reveal such a change)\nwhen space-indent is chosen, backspacing through such behaves as if\nthey were tabs which enhances navigability\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-linkchecker", 
            "title": "project of note: linkchecker", 
            "text": "Weeks ago, I looked for a utility that would help me check for my blog's\ndead links, and I bumped onto LinkChecker (version on my system is\n6.2). It turned out to be impressively advanced, and here's the summary\nfrom its manpage:\n\nLinkChecker features recursive checking, multithreading, output in\ncolored or normal text, HTML, SQL, CSV or a sitemap graph in GML or\nXML, support for HTTP/1.1, HTTPS, FTP, mailto:, news:, nntp:, Telnet\nand local file links, restriction of link checking with regular\nexpression filters for URLs, proxy support, username/password\nauthorization for HTTP and FTP, robots.txt exclusion protocol\nsupport, i18n support, a command line interface and a (Fast)CGI web\ninterface (requires HTTP server).\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-mailman", 
            "title": "project of note: Mailman", 
            "text": "Mailman is most likely the most popular mailing list manager in the\nFLOSS ecosystem. What I like about it is the ease-of-use it provides for\nthe end-user: if u wanna subscribe to topic@host.org mailing list, you\nsimply append -request to the recepient name (topic-request@host.org)\nand use the subject \"subscribe\", and simply send. To unsubscribe, you do\nthe same, except the subject becomes \"unsubscribe\". There's also the web\ninterface for those who won't remember/know these simple instructions of\ncourse. Another bonus: it's written in Python!\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-rdiff-backup", 
            "title": "project of note: rdiff-backup", 
            "text": "So I got my hands on a 250GB 2.5\" portable HDD, which led to me to go do\nproper backups again. I decided to go back to the familiar\nrdiff-backup and I became exceedingly impressed by its thorough\ndocumentation (manpage, FAQ, and the one place beginners should\nstart, examples), a myriad capabilities (over 60 command line\noptions), and an elegant design (the target directory looks exactly like\nthe original except for an extra directory named rdiff-backup-data,\nwhich contains all that's needed to roll-back, restore, check stats,\n...).\nMy usage:\n\n$ rdiff-backup --include-globbing-filelist rdiff-backup ~/ /media/backup\n\nThere, ~/conf/rdiff-backup is a file that has a list of directories\nI want to exclude in the backup, and /media/backup is the backup\ndestination.\n\nThere is a credible competitor in a form of duplicity, which is probably\nsuperior since it's got encryption. This duplicity also got a bonus of\nbeing used by some hot new GUI backup utility now endorsed by Fedora\nand may in future be an official part of GNOME, D\u00e9j\u00e0 Dup.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-sudo", 
            "title": "project of note: Sudo", 
            "text": "Some of the benefits of Sudo:\n\nThe password I authenticate with to perform admin tasks is the same\nas the one I use to log in as normal user. This means, in simple\nsetups, one need only remember one password, instead of two.\nThe extra command you have to type before performing any admin task\nreduces the danger of running dangerous commands... the sort of thing\nthat is easy to do when logged in as root.\n\nAnd some of the more advanced benefits:\n\n[gives users] permission to do certain tasks as a different user\n(which doesn\u2019t even have to be root) without giving them complete\naccess to that user or root. On server systems or multiuser systems\nwith different people working on different tasks not everyone need\ncomplete access to the system, one hands out only the amount of\naccess that is required for the task.\n\u2014source\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-systemd", 
            "title": "project of note: systemd", 
            "text": "The great Lennart Poettering has done it again, rocking the FLOSS\nworld a bit with his good-looking new init system, systemd. He got a\nlengthy post discussing its design, and what captivated me the most is\nhis plans to have it replace gnome-session. Reason is that for me the\nlesser the daemons we have, the better, and FLOSS technologies are in\ndesperate need for standard components. This is the sort of thing he is\nbattling to do with reducing the need for a myriad GNU/Linux audio\ntechnologies, by providing PulseAudio as repalcement.\nOne of the great problems with Linux-based desktops is integration:\ndistro devs either have to neglect certain areas (EG, discarding\nnon-mainstream hardware/software architectures) or go to great pains to\nintegrate various techs in order to have easy-to-use 'products', and I\nthink both Ubuntu and Fedora are doing the former while Debian is doing\nthe latter, hence Debian tends to feel less polished than these others.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/project-of-note-twisted", 
            "title": "project of note: Twisted", 
            "text": "I've been impressed by the claims made for Twisted, which erased the\nerroneous thought I've been having that it's just another web framework.\nWell, it appears it doesn't really have an equal, and is something\ncompletely different.\nWhat prompted me to award it project of note honor is its patch\nreview process, a good indicator that this isn't a toy.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/links-2011-01-17", 
            "title": "links 2011-01-17", 
            "text": "\na wealth of info on 'kill -9'\nthe best comparison of vi and emacs I've seen yet\nthe complexity of programming language benchmarking\nhigh profile FLOSS developers employed by Google\nI have never seen such detailed criticism of a programming language.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/accessing-oracle-db-using-python-in-debian", 
            "title": "accessing Oracle DB using Python, in Debian", 
            "text": "The following instructions assume that you are using Debian Squeeze,\nthe current 'stable' release. The instructions hereare very specific, so\nlook elsewhere for something more generic.\ndownloads:\n\nGet registered on Oracle website, and download\noracle-instantclient11.2-basic*.rpm (~40MB).\nGet cx-Oracle rpm for your specific Python version and your\nspecific processor (in my case, 3.1 and i386 respectively).\n\ninstallation and setup:\nsudo apt-get install libpython3.1 libaio1 alien\nsudo alien --install oracle-instantclient11.2-basic*rpm cx_Oracle*rpm\nsudo ln -s /usr/lib/python3.1/site-packages/cx_Oracle.so /usr/lib/python3.1/lib-dynload\nsudo ln -s /usr/lib/oracle/11.2/client/lib/libnnz11.so /usr/lib\nsudo ln -s /usr/lib/oracle/11.2/client/lib/libclntsh.so.11.1 /usr/lib\necho export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client/lib >> ~/.bashrc\nsource ~/.bashrc\npython3 -c 'import cx_Oracle'\n\nIf that last line executes without printing a message to the screen, the\ninstall is most likely successful.\nFor basic usage, see this tiny tutorial.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/poll-results-of-debian-users-favorite-floss", 
            "title": "poll results of debian-user's favorite FLOSS", 
            "text": "Here's an index of the poll results where I asked on debian-user mailing\nlist what their favorite FLOSS is. It's a yearly poll which has been\nrunning for a few years now, and is now defunct:\n\n2009\n2008\n2007\n2006\n2005\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/barry-whites-top-tracks", 
            "title": "Barry White's top tracks", 
            "text": "\n6 points:\n\n1 landmark (Bring Back My Yesterday)\n1 masterpiece (Let Me Live My Life Lovin' You Babe)\n1 excellent work (Just the Way You Are)\n\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/bioshock", 
            "title": "BioShock", 
            "text": "I enjoyed a negative review of BioShock partly because everything\nelse I've read so far was full of praise, and partly because,\nimmersive as it is, really is overrated. For one, I couldn't believe\nthat I was restricted to basically one environment, and I got so lost\naround the repetitive-looking environment just as I was in Halo:\nCombat Evolved (a superior game, even considering it was released\nover 5 years earlier).\nWhat I like about the game:\n\nan amazing array of genetic weapons\ngreat art direction\nthe fearsome Big Daddies\nan appealing gloomy storyline of genetic engineering gone awry\n\nThe whole thing did alert me what a tremendously useful tool 3D games\ncould be as exploration tools to unfamiliar worlds.  Note that I've\nlived through such an experience with the vastly underrated Conflict:\nDesert Storm.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/body-bags", 
            "title": "Body Bags", 
            "text": "I was reading Body Bags comic early this morning and it's\ndevastatingly unique and fresh, with some seriously interesting\ncharacters. Nice stuff. Am not big on comics, but if they tend to come\nlike this, I'll definitely get hooked.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/evil-edits", 
            "title": "evil edits", 
            "text": "It gets disgusting when re-releases, usually in a form of 'the best of\nX', gets their tracks' lengths reduced, all to make space for a larger\nnumber of tracks on that album. The worst such a situation is in the\ncase of Don't Leave Me This Way (Harold Melvin & the Blue Notes) which\nhad a release that cut it to about 5 minutes of its original 10 minutes,\neffectively getting rid of the most exciting part of that track, the\nclimactic second act. A similar thing happened to Brenda Fassie's\nWeekend Special whose climax was also mercilessly cut in her Greatest\nHits album.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/gamespys-bioshock-review", 
            "title": "GameSpy's 'BioShock' review", 
            "text": "Last year, I got seduced by GameSpy with their 2006 review, and this\ntime around, I got seduced yet again by their review of BioShock.\nGoing through their various categories, that game got mentioned more\nthan twice, being among the top10 PC games, winning Art Direction award,\nand then, in what truly caught my attention, winning the Best Story\naward. The review makes me salivate. [update]\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/halo-3", 
            "title": "Halo 3", 
            "text": "I could not spot a real improvement from Halo 2, bar the hyper-realistic\nenvironments of Flood-infested walls, the addition of some vehicles, and\nthe ability to dislodge heavy guns. It seems most effort went into just\nthe environments while ignoring gameplay and a fresh and good storyline.\nIt's quite a pity because the first Halo was such an epic achievement,\nwhile the second, while unable to replicate the first's grandeur, had\nquite a few innovations.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/hip-hop-greats", 
            "title": "hip-hop greats", 
            "text": "\nlandmarks\n\nMC's Act Like They Don't Know (KRS-One and DJ Premier)\nMy Downfall (Notorious B.I.G.)\nNas is Like (Nas)\n\n\n\nmasterpieces\n\nAnimal in Man (Dead Prez)\nBad Dreams (Busta Rhymes)\nDoggy Dogg World (Snoop Dogg)\nG Funk Intro (Snoop Dogg)\nGz & Hustlas (Snoop Dogg)\nHip-Hop (Dead Prez)\nIn the Music (The Roots)\nSerial Killa (Snoop Dogg)\n\n\n\nexcellent\n\nBeware (Big Pun)\nCowboys (Fugees)\nDistortion to Static (The Roots)\nDon't Feel Right (The Roots)\n8 Mile (Eminem)\nElevators (Outkast)\nFor All My Niggaz && Bitches (Snoop Dogg)\nFu-Gee-La (Fugees)\nGin And Juice (Snoop Dogg)\nHard Knock Life (Jay-Z)\nHold (KRS-One)\nHow Many MC's (KRS-ONE)\nHow Many Mics (Fugees)\nI'm A African (Dead Prez)\nIt's A Party (Busta Rhymes feat. Zhane)\nKick in the Door (Notorious B.I.G.)\nMask, The (Fugees)\nMathematics (DJ Premier, Mos Def)\nMind Sex (Dead Prez)\nMiss Jackson (Outkast)\nMicranots? (Micranots)\nMurder Was the Case (Snoop Dogg)\nNext Movement (The Roots)\nOld School (Tupac)\nOoh! (De la Soul ft. RedMan)\nTrack 15, album: Slum (Slum Village)\nPump Pump (Snoop Dogg)\nReady Or Not (Fugees)\nRespiration (Blackstar feat. Common)\nRespond/React (The Roots)\nScore, The (Fugees)\nSection (The Roots)\nShook Ones Pt. II (Mobb Deep)\n6th Sense (Common and DJ Premier)\nStill (Dr Dre feat. Snoop Dogg)\nTell Me Something (Arrested Development)\nTen Crack Commandments (Notorious B.I.G.)\nThey Schools (Dead Prez)\nThirty Three Threes (Canibus)\nThrow Yo Hands in the Air (Cypress Hill)\nTradin' War Stories (Tupac)\nTravellin' Man (DJ Honda and Mos Def)\nWay I Am, The (Eminem)\nWoo-Ha (Busta Rhymes)\nWot The Do (The Roots)\nYou Came Up (Big Pun)\nYou'll Find A Way (Dead Prez)\n\n\n\nspecial mentions\n\nLife Goes On (Tupac) - chiefly for being an ex-landmark; am not\nreally enjoying no more\nQuiet Storm (Mobb Deep feat. Lil' Kim) - chiefly for having a really\nfavorite chorus by the Kim lady\nShove This Jay-Oh-Bee (Canibus) - me loving the so-alive beat\n\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/ma-brrr", 
            "title": "Ma-Brrr", 
            "text": "We all know that each repeat viewing of a movie is a different\nexperience. You can say the same with a stage play, except that it's\nnever the same thing. I'm here referring to MaBrr (there is not even one\ncredible site I found with a few minutes of search), a musical play\ncurrently seen at State Theatre, Pretoria. It's about the life and\ncareer of Brenda Fassie, a deceased South African vocalist, who was\narguably the most popular of the country's artist in history.\nThe first night was the best experience I've so far had in my stage play\nexperience. It was electrifying and the audience agreed with me. A few\ngoosebumps here and there. It's amazing how larger-than-life one person\ncan be made. It brought a new appreciation of South African art (and\nabilities), that there's such a rich culture to export.\nSo what are some the elements that made me so excited, the first time\naround:\n\nlead performance: I gained new-found respect for Lesego Motsepe, who\nis famous for her long career in Isidingo, a soapie generally\nregarded as South Africa's best; the director even mentioned that\nsomeone stated that she wasn't LIKE Brenda, but rather, she WAS\nBrenda; the result of the voice training she went through was\namazing, because she really sounded like her character\nmusic: the compositions were remixed, and the live band bringing it\nalive rocked; I wish it would get recorded because some of it were\nimprovements on the originals\ndancers: though the dancing merely okay, their energy was tops,\nespecially the guys, and the quality of the choreography also helped\ncostume design: what the dancers had to wear was mostly impressive,\nand often offered an accurate display of dressing styles through a\nbit of South Africa's past\nbacking vocalists: wonderful, notably the fat guy, who had a tiny\nmoment to act, which was hilarious\nextra emotion: well, Bongani Fassie, Brenda's son, pitched on stage\nunscheduled, and even joined the lead performer to sing \"Too Late for\nMama\"\nmiscellaneous: a bunch of scenes and moments are too many to mention\n\nThe fact that this was opening night may have helped a lot, as well as\nclose to sold-out venue. Now, the shitty thing about stage is that such\nmoments can't be replicated, and even though it may have been recorderd,\nit's just not the same.\nThe revisit was something else. The attendance was really bad this time\naround (a Thursday after Friday's opening night):\n\nlead performance: she was probably tired and/or discouraged by the\nsmall and unresponsive crowd; she mostly didn't even try to sound\nlike Brenda\nmusic: there's wasn't a degradation, so kudos!\ndancing: less energy, and that there were fallen beads on stage\nprobably didn't help\ncostume design: same shit, so nothing to say here\nbacking vocalists: wonderful, but the fat guy was just reciting his\nwords this time\nextra emotion: well, the Bongani Fassie thing can't be replicated\nmiscellaneous: no surprises, nothing new worth mentioning\n\n\n\nupdate\nI went to see this for the third time, this time on a Saturday, so the\naudience was much bigger than last time, and the show was far better,\nmaking me a little bit obsessed.\n\nlead performance: she did better than last time, but maybe not as\ngood as the first night\nmusic: I recall enjoying the previous moments better, maybe because I\ngot used to it\ndancing: the energy seemed as high as the first time around, and I\nenjoyed it more (I really the supercool guys at the jazz club)\ncostume design: same shit, so nothing to say here\nbacking vocalists: the nice fat guy was replaced by a less\ninteresting one\nextra emotion: I kept getting (unbearable) attention from one dancer,\nsince I was on the front row seats; I guess she wanted to steal the\nshow, and I didn't allow her (she was unrelenting) so I shifted my\nattention away\nmiscellaneous: the kids called up on stage were much more fun than on\nprevious occasions\n\n\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/me-loves-cherry-poptart", 
            "title": "me loves Cherry Poptart", 
            "text": "This morning I read \"Cherry Does the Time Warp\", part of the funny and\npolitically satirical adult comic series, Cherry. It's not the first\ntime I've read a Cherry installment, but this specific one parodies some\ncharacters in history and popular media in a fun manner, but it's\nhighlight is Cherry's encounter with her teenage, sexually-inept mom\n(and you can imagine what transpires).\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/sabc-1-glory", 
            "title": "SABC 1 glory", 
            "text": "I got captivated by the new SABC 1 theme presentation (for lack of a\nbetter name), which is a fusion of computer animation and live footage\nwith reddish filtering, an artistic impression reminding me of the\nvisual landmark that is 300. It's however not nearly as popular or\nmemorable as the previous theme which portrayed South African Black and\nWhite people having switched roles (as in White people living in\ntownships and Black people leading a more affluent lifestyle). This, the\nlatter, is an interesting play on the stereotypical both races have on\neach other and was notably also because of the superb camerawork and\nsome interesting acting. It's interesting as regards the former for I\nthought the latter couldn't be bettered.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/simple-point-system-for-rating-music", 
            "title": "simple point system for rating music", 
            "text": "I use a simplistic point system to rate top music tracks:\n\nlandmark = 3 points\nmasterpiece = 2 points\nexcellent work = 1 point\n\nI wonder what others use and am too lazy to search.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/too-long-in-slavery", 
            "title": "Too Long In Slavery", 
            "text": "The mood of Too Long In Slavery\n(performed by Culture and found in Greatest Hits - The Frontlne Years)\nmatches it's title pretty well\n(the vocalist sounds like he's in pain and so is the melody).\nThe track still sounds is near-playful,\nthough it has nearly brought me to tears on a few occasions;\nit's a powerful delivery of a painful message.\nIt's my favorite among the group's work.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/top-music-tracks", 
            "title": "top music tracks", 
            "text": "All these are landmarks (i.e. beyond masterpiece level):\n\nBring Back My Yesterday (Barry White)\nConfusion (Fela Kuti)\nCrying Guitar (The Movers)\nDiamante (Zucchero)\nDjango's Castle (Eddie Harris)\nDo You Feel Like We Do (Peter Frampton)\nGauteng (Miriam Makeba)\nGive Me (Burning Spear)\nIgbe (Fela Kuti)\nJikijela (Letta Mbuli)\nLady (Fela Kuti)\nMy Love is Free (Double Exposure)\nNo Woman, No Cry (Bob Marley)\nOld Marcus Garvey (Burning Spear)\nTomorrow is Forever (Dolly Parton)\nWith or Without You (U2)\n\nThis list is far from complete and notably won't include tracks from\nHip-Hop and House for they just don't fit, maybe as a matter of\nprejudice, as in, \"how could I append KRS-One next to the mighty Fela\nKuti\", or maybe such genres are simply incomparable.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/toxic", 
            "title": "Toxic", 
            "text": "I had developed a negative attitude towards Britney Spear's music due\nbad quality (though to be fair, I haven't listened to much of her work,\nall but the most popular few tracks). But there is one particular gem, Toxic,\nand I was surprised to find that it's critically acclaimed,\nespecially since I reduced it to a guilty pleasure.\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/up-with-donald-byrd", 
            "title": "Up With Donald Byrd", 
            "text": "I thoroughly enjoyed Donarl Byrd's superb album, \"Up With Donald Byrd\",\nmost especially the masterpiece House of the Rising Sun and My Babe. I\nhave listened to a few the guy's albums and nothing quite comes close,\nin fact some are so bad that it's strange it's the same artist.\nAnyways, I went onto the interwebs looking for like-minded people and\nfound one who disagreed, calling it forgettable. Either that's a\ncritic with a more sophisticated taste and much more listening\nexperience, or she's got twisted taste. I was actually surprised since\nI'm even tempted to call this the best Jazz album yet!\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/links-2011-01-10", 
            "title": "links 2011-01-10", 
            "text": "\nthe greatest threat to religion\na nice collection of links regarding scientific studies of\nreligion\nthe single most beneficial thing we can do in order to make the\nworld better place, according to Alonzo Fyfe\nHow to Save the World (via)\namong the most controversial of Alonzo Fyfe's posts (judging by the\nhuge number of comments), Tivial Hobbies talks about the\nuselessness of things like watching sports and playing video games\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/factors-affecting-choice-of-tools", 
            "title": "factors affecting choice of tools", 
            "text": "technical:\n\nspeed\nresource-usage\nfeatures\nstability\n\nnon-technical:\n\nease-of-use\npolish\nstandards-compliance\npopularity\npolitics\nsupport\nfamiliarity\ntaste\nmonetary cost\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/blog-of-note-well-see-matt-zimmerman", 
            "title": "blog of note: We'll See (Matt Zimmerman)", 
            "text": "I'm a regular reader of Planet Debian, so I frequently bump onto Matt\nZimmerman's blog. This a Debian Developer who also happens to do paid\nwork on Ubuntu as well (employed by Canonical). He writes clearly and\nwith a sober and mature tone. It's very interesting when you see a\nsoftware developer conversant with non-technical stuff, and able to\nwrite about it so well.\n\nI started with one post with an obviously interesting title, \"How to\ndecide what to read (and what not to read)?\". This piqued my\ninterest also because I've been thinking about my own activities on\nthe web too. Also, his mention of News closely match mine, other\nthan that I'm simply (mostly) not interested in traditional big news\n(presidents approves blah) and tabloids, and normally get enough of a\ndose from co-workers and friends, and mostly face-to-face.\nThis led to another, \"Breadth and depth\", in which he touches on\nthe social effects of web-enabled technology. This is a topic that\nhas been beaten to death of course, but he fortunately keeps his\ncontribution very brief and fresh, and I like that he doesn't claim\nto offer any solutions, but merely exploring them.\nAnd there was \"Internet discussion trends: from Usenet to\nmicro-blogs\", where he discussed various ways forms of on-line\ndiscussion, which is the first topic of its type I've seen yet.\nHe even dabbled with a bit of poetry in \"Breathing information\".\nNice attempt.\nHe also displays an insightful understanding of what package\nmanagement in \"We've packaged all of the free software...what\nnow?\".\n\nThere's a whole bunch of gorgeous-sounding posts that I didn't care to\nread yet, and hope to keep the above list updated when I do.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/great-customer-service", 
            "title": "great customer service", 
            "text": "So these guys at BMW Bavarian East Pretoria (it has since been closed),\na motorbike dealership, got me impressed with their great customer service.\nThe standard procedure is to lend customers a bike for a few hours to use\nduring the day, which normally happens when one takes the bike in for service.\nMy F650CS was giving me some trouble which actually perplexed them for\nmore than those few hours... a few weeks actually.\nSo why I says they rock:\n\nI wasn't charged for the extra (perhaps dozens) hours of labour.\nI was lent a bike (actually 3, since the troubleshooting went for so\nlong that they needed to sell 2 of those bikes in the meanwhile).\nNot sure if I should call this negligence, but there seems to be some\ndeep trust these guys have for their customers, because no one cared\nto check if I could ride the variety of bikes they lent me. That's\ngorgeous, especially considering that one of the bikes they lent me was\nthe superhot BMW F800S.\n\nOf course there is also the element of them encouraging loyalty,\nbut this still goes beyond the normal \"customer is king\" routine.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/obama-administration-not-too-shabby", 
            "title": "Obama administration not too shabby", 
            "text": "Given that I have very little interest in American politics, I find\nsome of the Obama administration's achievements impressive (with\ngreat help from a refreshing presentation). (via)\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/igalia-rocks", 
            "title": "Igalia rocks!", 
            "text": "\n\nEvery person joining us is expected to evolve through the different\nstages: from employee to pre-partner and finally to partner, a\nco-owner of the company.\n\u2014source\n\nJust one of the things that make Igalia a very attractive employer...\njust a step away from being a proper worker coop.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-neil-williams", 
            "title": "developer of note: Neil Williams", 
            "text": "For some years now, Neil Williams has been working on Emdebian (embedded\nDebian). It's a Debian sub-project where normal Debian packages are\nstripped of certain things like documentation and translations, making\nit more suitable for space-constrained embedded devices. He's now\nstarted a series of posts explaining how it works... and it seems an\nelegant system actually.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/its-less-work-building-from-a-vcs-than-from-a-tarball", 
            "title": "it's less work building from a VCS than from a tarball", 
            "text": "tarball:\n\nfind the website\nfind download link\ndownload the tarball\nnavigate to the tarball (using a GUI file browser)\nextract the tarball (using a GUI extractor)\nnavigate to the extracted directory (using the shell)\nand finally... $\u00a0 ./configure && make && sudo make install\n\nVCS:\n\nfind the website\nfind clone link\nclone the repository\nnavigate to the cloned directory (using the shell)\nand finally... $\u00a0 ./configure && make && sudo make install\n\nSo, that's 2 extra steps for going the tarball way.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/when-it-seems-ok-to-compromise-on-software-freedom", 
            "title": "when it seems OK to compromise on software freedom", 
            "text": "Stack Exchange is a network of websites built to make the internet\nbetter by providing quality Answers to Questions on specific topics. Its\nflagship product is Stack Overflow, which is likely the single most\nimportant programming resource on the web. Part of the reason of this\nsite's success is the excellent community built around it.\nAmong the sites that Stack Exchange has built is Unix & Linux, and\nit's stated goal is to be THE place to get answers on non-programming\ntopics related to Unix and Linux-based systems. Note that this family of\ncomupter system is highly fragmented; there's literally hundreds of\nthem, though most can further be classified under few families:\n\nDebian (includes Ubuntu)\nRedHat (includes SuSE)\nBSD\n\nGiven that there's a lot of similarities between them, to have one\nunified place to ask questions about each of them rocks.\nNow that's well and good, until one realises that these StackExchange\nsites run on non-FLOSS. Now, consider that there are FLOSS alternatives\nto these. Debian folk maintain and participate in an instance of one\nsuch alternative, named Shapado. This instance is a place where one\ncan ask Debian-related questions, and is in essence a competitor to\nStackExchange's Unix & Linux site, and this had me in a seriously\npainful dilemma: do I continue using the superior but non-FLOSS service\nor the inferior but FLOSS Shapado. The following evaluation makes the\nchoice real easy:\n\nDebian Q&A: FLOSS (+1) \u2014> total=1\nUnix & Linux: better community (+1), better site experience (+1),\ncaters to more than just Debian (+1) \u2014> total=3\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/tumblr-suckage", 
            "title": "Tumblr suckage", 
            "text": "update: after an unbearably-long downtime, I decided to make the\nswitch, this time to Posterous (now-defunct).\n\nAs much as I love Tumblr, I got a few complaints:\n\nperformance for some tasks is really bad; the most annoying one is\nthe time it takes for the Edit button to appear\nsearch is real bad; often it doesn't find stuff I know is there;\nsometimes I have to re-run the search before seeing results\nPages: I can't use Markdown to edit them\nPages: I'm not presented with the Edit button at all; I instead\nhave to do it via the Dashboard, then click Customize, then click\nPages, then scroll and find the page I wanna edit!\nhorrible uptime\n\nI'm not sure if these problems will be fixed (I've reported one bug,\nwithout any real feedback). The collective of these problems makes me\nwanna search for another blog host. The challenge with the move is doing\nthe laborious internal re-linking over again.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/abusing-the-computer-genius", 
            "title": "abusing the computer 'genius'", 
            "text": "Here's a part-fictional account of events that are largely my fault:\n\nFriend got a new laptop and I elect to install Debian (or whatever OS\nI find suitable at that moment) side-by-side with the pre-installed\nWindows.\nI show Friend around since he finds the interface unfamiliar, and I\nget a dry mouth explaining the advantages, while trying hard to avoid\nWindows bashing. He sort of agrees.\nI upgrade it later on (mainly because I'm hoping the new hotness will\nget their wireless networking hardware working).\nThe upgrade breaks something else in the process, and I spend hours\nfixing it...\nOnly to have them spend their computing lives in Windows since it's\nmore familiar (as well as the fact the software that came with their\ncell-phone doesn't run anywhere else).\nWe computer 'geniuses' all know that Windows has a nasty habit of\noverwriting the boot partition such that an already-installed OS is\nno longer bootable, so I gotta come over, to make it bootable again\n(and this is made worse by the fact that reinstalls are pretty commom\nwhen Windows gives trouble).\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/lukes-brain", 
            "title": "Luke's brain", 
            "text": "\n\nMy brain did not evolve to have accurate intuitions about what is\nmorally right or wrong or rational. My brain evolved to eat and\nfuck.\n\u2014In Defense of Radical Value Pluralism\n\nAnother gem by the fabulous Luke Muehlhauser.\nThe post is a fun read; check it out.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/great-honors-for-donald-knuth", 
            "title": "great honors for Donald Knuth", 
            "text": "\n\nI would say he is man of a stature similar to the stature of Leonard\nEuler in mathematics. Such men are not born every century...\n\u2014source\n\nSuch kudos aren't given everyday.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/wajig-2050-released", 
            "title": "wajig 2.0.50 released", 
            "text": "Not sure, but I think this is my proudest release yet of wajig so\nfar. Among other things:\n\nI cleaned up the Debian packaging with some great help. I promise\nthat it was seriously ugly. I guess nobody was motivated enough to\nclean it up... including me.\nI added a fresh help system, and cleaned up the documentation\nmachinery while at it.\nIncreased the use of aptitude, where it makes sense.\nMade some commands redundant by introducing better ones.\nSome polishing (consistency fixes).\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/a-talk-on-what-software-engineering-should-be", 
            "title": "a talk on what software engineering should be", 
            "text": "I really enjoyed this humorous, eye-opening, and informative talk\nthat draws parallels between software and traditional engineering\ndisciplines. The presenter really did good research to prepare for the\npresentation (which he heartily enjoyed), but unfortunately flies too\nquick near the end when realizing he's out of time, without properly\nexplaining what he proposes as real software engineering.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/untrustworthy-brains", 
            "title": "untrustworthy brains", 
            "text": "\n\nThe shortness of our lifespans makes us magnify the events we\nexperience and diminish the ones we have access to only via books.\n\u2014source\n\nI think this applies even if all these events are limited to personal\nexperience, where the more recent experiences ones too often overshadow\nthe older ones... \"That was the best sex ever!\".\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-debian-package-management-setup", 
            "title": "my Debian package management setup", 
            "text": "Much of this is obsolete: I no longer use debmirror and no longer\nkeep the entire binary repository of i386 arch.\n\nThere's a useful tool in Debian named debmirror. It's function is to\ncreate and manage a partial copy of an official Debian repository, and I\nuse it to create 2 repos:\n\nan entire i386 Debian repo for Squeeze\nan entire source Debian repo for Squeeze\n\nHow this works is that I'd run the following command\n(an example for the source repo):\n\n/usr/bin/debmirror\n --verbose\n --progress\n --host=ftp.sun.ac.za\n --passive\n --dist=squeeze\n --root=ftp/debian\n --section=main\n --method=ftp\n --arch=none\n /home/wena/.repo_src\n\n(look at debmirror's manpage to see what all those options mean)\nThe result is that I'll be having ~30GB of Debian locally (for a\ncomparison, see total Debian archive size).\nThat's a lot of data, most of which I'll never use, but:\n\nI do this as a matter of convenience; I want to be able to install\nanything when I'm having a fresh machine, and internet access is not\nyet fast and cheap in South Africa.\nI also like to mess around with the packaging system, deleting and\nreinstalling packages on a whim, and I don't want to be waiting for\nsome file to download when I do that kind of tinkering.\n\nNow, since it's ridiculous to do this every time just to have the most\nrecent packages (a weekly update is maybe >1GB of data), I've found\nanother wonderful tool named reprepro. It's purpose is to create a\ncustom (unofficial) Debian repo. It's a far more advanced tool than\ndebmirror, and I think it can do what debmirror does (but I don't yet\ncare to learn how).\nMoving on, here's the relevant entries from my /etc/apt/sources.list file:\n# local repos (debmirror)\ndeb file:/home/wena/.repo_bin sid main\ndeb-src file:/home/wena/.repo_src sid main\n\n# local repo (reprepro)\ndeb file:/home/wena/.repo_local cache main\n\n# remote repo\ndeb ftp://ftp.sun.ac.za/ftp/debian/ sid main non-free contrib\n\nSo, what I do on a semi-regular basis is run:\n\n$ wajig update && wajig upgrade\n\nThe newly-updated packages are stored in a cache so that a reinstall\ndoesn't have to fetch from network again. After this I run:\n\n$ reprepro -vv --basedir ~/.repo_local includedeb cache /var/cache/apt/archives/*deb\n\nThis updates the local reprepro repo and after which I can then remove\nthe cached packages:\n\n$ wajig clean\n\nI do that because they are now available in my reprepro-managed repo.\nThat now means that I got a massive mirror managed by debmirror and a\nsmaller one managed by reprepro, and I have these on an external drive\nfor in case I want to install Debian anywhere. What else my reprepro\nrepo has is some other packages like skype and oracle-xe, as\nwell as an odd packages from Debian Experimental.\nNot so simple I guess... but works so well for my needs.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/apt-get-vs-aptitude", 
            "title": "apt-get vs. aptitude", 
            "text": "Did I mention that I love Stack Overflow? It's a Q&A site for\nanything that is related to computer programing, and the creators\n(luckily) didn't just stop there. They went on to create a bunch of\nother sites using the same technology and branding, covering other\ntopics (and they aggregate the best new content from those sites).\nEnough with background info. What prompted this post is the answer to\nthe question, \"what's the difference between apt-get and\naptitude?\". This is from one of their sites, Unix and Linux, and\nthe answer is really thorough. Part of the question was \"what the heck\nis wajig\" and I really liked how that part was handled as well. It\nserves as a nice reminder of why the heck I'm working on wajig in the\nfirst place... it rocks!\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/on-anarchism", 
            "title": "on Anarchism", 
            "text": "There have been many great benefits I got from the Debian project,\nbut among the most important is my introduction to Anarchism, a radical\npolitical theory that opposes all forms of official hierarchy\n(capitalism, communism, religion, etc), arguing that such things tend to\nresult in oppression.\nHow I got access to that is via a package known as anarchism, a set\nof documents formally known as An Anarchist FAQ. It's a very\ncomprehensive coverage of the theory, and going through it brought both\nenlightenment and frustration, for it explained so many things that I\ntook for granted, while pointing out the causes. The theory is basically\npresented as the best possible society humans could ever have.\nAs for me, I'm not sure if it's actually true, although I lean more\ntowards it than alternatives (and I haven't read anything extensive on\ncompeting theories, but intuition/experience tells me that capitalism,\ncommunism, and religion all suck tremendously). I need more study to be\nmore sure, especially because the objections to Anarchism are heavy.\nTo me it's a scarier concept to introduce yourself as an anarchist than\nas an atheist or a homosexual, because the implications are greater. In\nfact, they are so great, that the word anarchy itself has been\nassociated with chaos. That's an expected knee-jerk reaction you'll get\nwhen you punt things like \"I reject all forms of official authority,\nincluding all governments!\". But it would be nice if people who shudder\nat the concept to spend time with that great document.\nMy attraction to the theory perhaps is due to my radically liberal\ntendencies (EG, I don't see anything wrong with fucking my biological\nmother, provided it's consensual, and there's no pregnancy). I don't\nknow where these tendencies originate, considering that I was a\nreligious nut back in my early teens, scared of the concept of hell and\nsimilar forms of bullshit.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-martyn-russell", 
            "title": "developer of note: Martyn Russell", 
            "text": "Martyn Russell is Tracker's release manager,\nand being a fan of the project since the early pre-1.0 days,\nI have quite familiar with his work.\nBut what triggered this honor is his work on Tracker Needle\n(written in Vala), Tracker's new GUI search tool,\nto replace the inadequate Tracker Search Tool (written in C).\nI've taken a look, and the design is pretty modern\n(check the video he gives in his announcement).\nBut Martyn has of course done far more for Tracker, and does a pretty\ndamn good job managing the release.\nOne thing he did outside of Tracker that I'm aware of is the\nre-design the http://gtk.org page, giving it a very modern look (which\nit desperately needed).\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/argument-from-beauty", 
            "title": "Argument from Beauty", 
            "text": "So there's a bunch of arguments for the existence of God, and\nlearning about them is actually fun for me. I find the Argument from\nbeauty, though not the strongest of all, the most seductive. It's ever\nso nice when I joke about it, like when I see a super-hot gal (the sort\nyou'd be glad to eat her shit just to have a taste of her pussy) or\nenjoying a wonderful meal (like the one I enjoyed last weekend when\nvisiting Botswana). I'd throw something like, \"How could such a gal have\nevolved to this form through blind forces of nature! God-did-it!\".\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/trusting-ones-feelings", 
            "title": "trusting one's feelings", 
            "text": "\n\nI never trusted my feelings. I always thought that feelings were the\nprejudices and bigotries that I was raised with, and were never to\nbe given any weight unless I could put a solid foundation of reason\nunderneath them.\n\u2014Reflections on Rejected Moral Theories\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-philip-van-hoof", 
            "title": "developer of note: Philip van Hoof", 
            "text": "There hasn't been anyone who has publicly talked about Tracker as\nhard as Phillip van Hoof ever since the project was started a few years\nago. He has recently outlined the current improvements and future\nplans to make it rock even harder (and of course I understand very\nlittle of it, since there's jargon all over the place, and Tracker\nactually covers new ground).\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-alexander-reichle-schmehl", 
            "title": "developer of note: Alexander Reichle-Schmehl", 
            "text": "Debian got so many people doing what seem like thankless jobs in an\neffort to improve it. One of those guys is Alexander Reichle-Schmehl\n(look at my struggling tongue), who has for a number of months been\npushing an initiative to fix a bunch of RC bugs weekly (example).\nThis developer has been busy keeping track of RC bug counts,\nreducing the need for me to go check myself.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/nice-review-of-perl-best-practices", 
            "title": "nice review of 'Perl Best Practices'", 
            "text": "\n\nI always punctuate its disclosure with an outraged \"preposterous!\".\nAround mid-section, the initial refutation unavoidly morphs into a\n\"hmmm, I can see his point.. but it ain't for me. It just doesn't\njive with my vibes\". By the time I've made it to the end, however,\nit is rare indeed that I haven't seen the light, donned the ritual\nsackcloth and ashes, sworn to atone for my sins and to walk the\nstraight and narrow [path] from now on.\n\u2014source\n\nI'm a sucker for humorous religious allegories.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/more-on-wajig-development", 
            "title": "more on wajig development", 
            "text": "I was given commit access to wajig project, and did a heck of a lot\nof clean-ups, and in the process, learning much about unit testing.\nI aimed for a comprehensive solution, partly to avoid regressions,\nsince I intend to do lot of code changes.\nI also looked at converting wajig's GUI from Glade to GtkBuilder.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-first-wajig-contribution", 
            "title": "my first wajig contribution", 
            "text": "Due to my love for the application Quod Libet, I have been\ncontributing a bit to it. But due the complexity of the code, I looked\nelsewhere, and found a favorite tool package management tool, wajig,\nand was surprised to find that it's not kept in a VCS. Useful as it is,\nit's code looks like a collection of hacks, so I started by offering a\nPEP-8 fix.\n[a day later] Inspired by that offer, the nice guy that founded\nthe project created a VCS repo for it, and even offered me commit\nrights. I was amazed by the trust.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-pet-project", 
            "title": "my pet project", 
            "text": "I've been working on a personal (unofficial) project for some weeks now\nat work whose goal is automated testing of the system I maintain at\nwork. The system involves interfacing with Oracle, and the UI I used for\nthat is the retarded (blocky, and ugly UI, resource hog) Oracle SQL\nDeveloper. I couldn't find any real alternatives after a cursory search,\nand had to live with this pain for too many months. I decided to write\nsomething in Python to achieve the common tasks of updating and viewing\nspecific parts of the DB. Having succeeded, I decided to turn the script\ninto a test suite that would eliminate the laborious and error-prone\nprocess of doing the testing manually, a process which, among other\nthings, involves tweaking xml files, and using that damned SQL\nDeveloper! I'm not-so-many-hours away from completing this 200+ line\nmasterpiece of mine, and here's what I used:\n\nPython: 3.1\nmodules: xml.etree.ElementTree, configparser, sys, time\n3rd party module: cx_Oracle (which prompted me to write\ninstructions for installing and setting it up)\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/new-blogging-platform", 
            "title": "new blogging platform", 
            "text": "Blogger's post editor is so bad that I've been promising myself to move\nelsewhere for quite a while. I checked on Super User what their\nrecommendations are and they pointed mostly to Wordpress (which I found\ntoo ugly) but someone there also pointed to Tumblr, which I never\nheard of before. It really is more than a blogging platform (which was\nall I was actually looking for), and it does look good except for the\nfact that I miss the sidebar functionality which allows me to place\nthings like favorite blogs, favorite posts, etc.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-aleksander-morgado", 
            "title": "developer of note: Aleksander Morgado", 
            "text": "The Tracker team got this new guy, Aleksander Morgado, doing\nfabulous work on Tracker's extraction code.\nHe does so while also providing thorough info on his activities.\nOne thing that prompted me to honor him is his work on adding options to\ndisable stop words, as well as to enable number indexing,\nfixing an old gripe of mine.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/xfrun4-rocks", 
            "title": "xfrun4 rocks", 
            "text": "The one desktop environment I live in is GNOME, which also happens to be\nmy favorite too. It's got quite a lot of things that can be better of\ncourse and one of them is its run dialog. I once bumped into\nthat run dialog of Xfce 4 and have used it since I discovered it years\nago. What I like about it is, unlike GNOME's, it doesn't auto-complete\nusing a large list of possible commands (presumably on the shell's PATH)\nbut rather a smaller list consisting of commands I have actually run\npreviously. What's more is that it makes those commands persistently\navailable as history (which GNOME's does as well by the way). As if\nthat's not enough, it will store only commands that were successfully\nlaunched to avoid storing typos and failed commands in history. These\nfeatures makes for a superb piece of software.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/i-love-the-debian-supermarket", 
            "title": "I love the Debian supermarket", 
            "text": "I love the fact that whenever someone mentions a piece of software, I\ncan quickly do a aptitude search piece-of-software knowing that\nthere's a good chance that it's somewhere in the Debian repository. That\nmeans I won't have to get to the website looking for a download link,\nwhich, other than saving time, means I just have to deal with just one\ninterface as well as the confidence that piece-of-software is\nwell-integrated with Debian itself, given Debian's exacting quality\nstandards. Debian really is a gem!\n[sidenote] The term, supermarket, as used in this context, was\ncoined by some Debian Developer, although I mean it in a different and\nmore positive manner.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/python-people-vs-java-people", 
            "title": "Python people vs. Java people", 
            "text": "\nNow this is one heck of a controversial quote by the best computer\nprogramming blogger in my memory:\n\n...when you choose a language, you're also choosing a community. The\nprogrammers you'll be able to hire to work on a Java project won't\nbe as smart as the ones you could get to work on a project\nwritten in Python.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/stack-overflow-rocks-hard", 
            "title": "'Stack Overflow' rocks hard!", 
            "text": "I can't believe that I only now discovered Stack Overflow. It's an\nexcellent programming Q&A site which also happens to possess the best\nuser interface and design I've ever seen on the web (if memory serves\nwell). [update: this great design is shared by other sites in the\nfamily]\n[sidenote] Within a few minutes of asking some question,\nI received a number of high-quality answers. It's amazing!\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-michael-biebl", 
            "title": "developer of note: Michael Biebl", 
            "text": "So I really do honor all Debian Developers especially when they are\nnamed Michael Biebl. This guy is the lone maintainer of Tracker\nand rsyslog in Debian (among others). Not just that but he is also a\nco-maintainer of a large number of GNOME technologies (gnome-session,\ndbus, avahi, gnome-power-manager, gvfs, hal, network-manager...).\nI love especially his role as some sorta QA for Tracker (he's done a\nterrific job of it \u2014 most recently offering a bunch of patches to fix\nsome linking problems in the code). Oh, and I'm not the only one who\nnoticed \u2014 the great Josselin Mouette, did offer accolades too for\nMichael's other work.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/a-visit-to-botswana", 
            "title": "a visit to Botswana", 
            "text": "This past weekend, I finally went to this neighbouring country of ours,\nBotswana. It which was the first time I ever left South Africa. I was\nwelcomed by wonderful people, and the visit was limited to its largest\ncity \u2014 Gaborone \u2014 which is beautiful, sparse, and vast, when compared to\nmy country's own cities.\nOne of its residents got shocked when I argued that South Africa doesn't\nhave a unifying identity, arguing that the country is too diverse to\nhave such. Instead she argued that such is country's very strength which\nled to her pointing out the following wins:\n\ndiverse (and therefore strong) economy; she stated Botswana is\nover-reliant on diamonds\ndiverse tourist attractions; Botswana's tourism is nearly\nnon-existent in comparison\ndiverse export market; Botswana is all diamonds, again\npress freedom - my input, which she agreed with\nhigh foreign investment\ndiverse cultures\nhigh media production standards; Botswana has only one tv channel and\nthe little exposure I got of it expresses amateurish levels of\nproduction\npassionate people (highlighting freedom fighters that enabled black\nrule; highlighting the toyi-toyi culture)\n\nThe conversation opened my eyes a little bit, that there's a lot to\nappreciate about South Africa. As I talked to more Botswana residents,\nand read one critical piece of journalistic writing, Botswana, despite\nbeing far more peaceful and having superior living standards (minimal\ncrime, kindly people, minimal poverty, far-reaching welfare), has some\nserious warts smelly bits: abortion and homosexuality are illegal. I was\nshocked by these two, and most especially about the second one. What the\nfuck! And that the residents voted for such (the country is apparently\nvery democratic) proves there's still a lot of work to be done.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/vox-days-omniderigence", 
            "title": "Vox Day's 'omniderigence'", 
            "text": "I really enjoyed reading the section titled Omniderigence in Vox\nDay's book, 'The Irrational Atheist'. The term, which he coined,\nmeans the use of one's infinite powers which by the way he disagrees\nwith. As far as I've read, his appears the most sensical description\nof Godf I've heard and is a radical departure from what your (stereo)typical\nChristian would state.\nsidenotes\n\nThis guy is a real good writer and I enjoyed his analogy of his\nreligious believes and game-design, in another section named 'Gods of\nthe Machine'.\nHe explains the term elsewhere too.\nCheck out his debate with atheist blogger, Luke Muehlhauser.\nThat's the debate that led me to the Vox's book.\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-patches-committed", 
            "title": "my patches committed", 
            "text": "So, two of the patches I created for Tracker have been committed\n(commit 1, 2)!\nI consumed much info (and time) during the process, which entailed\nlooking at Git usage (branch, checkout, commit, format-patch, ...)\nthrough Philip van Hoof's guidance.\n\nPhilip van Hoof also fixed a hard-to-reproduce bug which was a pain\nfor me. The fix is a workaround for a GTK+ bug.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/so-much-learned-via-tracker-bugfixing", 
            "title": "so much learned via Tracker bugfixing", 
            "text": "It's been maybe over a year since I've submitted a patch to any FLOSS\nproject and have done so three times today, all for Tracker,\nperhaps my most favorite of all pieces of code.\nThis started with me nagging Martyn Russell, Release Manager for\nTracker, about the suckage which was exposed by my usage of Tracker's\npreferences GUI. He proceeded to encourage me to write a patch, which\nI did. Later on Michael Natterer of GIMP fame guided me on some UI\npolish work.\nI consumed much info (and time) during the process, which entailed\nlooking at the following:\n\nGTK+ API\nTracker's configuration internals.\n1st look at Vala, the language with which the preferences GUI is\nwritten.\nTinkering with Glade, a RAD tool for quick GUI development, which\nmakes things so much easier, especially considering that GTK+ isn't\nso straightforward.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/debate-mike-licona-vs-richard-carrier", 
            "title": "debate: Mike Licona vs Richard Carrier", 
            "text": "I recently listened to a 2.5 hour-long debate between two scholars,\nRichard Carrier and Mike Licona, which alerted me to the fact that\nJesus' Resurrection is regarded, at least to Christian apologists, to be\nvery central to the Christian faith (here's an unsatisfactory\nreview). I became far more impressed with Richard's performance than\nMike's:\n\nMike was the only one who displayed some arrogance (a silly joke here\nand a chuckle there, unsuccessfully forcing his opponent to use the\nword delusion instead of hallucination, etc.).\nRichard was more convincing (and the knowledge he displayed of this\ntopic is mind-numbing).\nHe was more clear with his arguments.\nHe was seemingly more prepared (his opponent probably thought he was\ngoing to be a walkover).\nMike was a bit embarassing at times when mentioning The Passion of\nChrist, especially the time when he was praising Jesus (I cringed a\nbit there), and Richard, by the way, ignored references to that\nmovie.\n\nBased on these points, I vote for Richard as the winner, with the\ndisclaimer that the latter part of the debate was getting too technical\nfor me to follow thoroughly.\n\nsidenotes:\n\nSee Luke Muehlhauser's well-argued take on the issue of the\nResurrection.\nLuke's blog, Common Sense Atheism (praise), apparently has the\nlargest collection of links to atheist vs theist debates and is\ntherefore a great resource.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/common-sense-atheism-rocks", 
            "title": "'Common Sense Atheism' rocks!", 
            "text": "I've read dozens of posts by Luke Muehlhauser at his Common Sense\nAtheism site, among the best blogs I've read ever, which also happens\nto be the first and only atheism blog I regularly read. The guy\nregularly manages to enthrall me with his thorough and very broad\noutlook on the topic, managing to put words where I'd fail (or even\nsub-topics I wouldn't expect anyone would write about), his intelligence\n(EG when debating some real smart theists), the courage of promoting\nsome off-beat ideas, not to mention the quality of much of the\ncommentary he receives from readers. What makes these even more\nimpressive is that the guy is in the 1st half of his twenties.\n[sidenote] My favorite posts are too many, so here's his own links\nto what he deems most useful. He has also received serious praise\nfrom his other readers (check the comments here)\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/my-deconversion", 
            "title": "my deconversion", 
            "text": "One of the top atheism bloggers today, Luke Muehlhauser, posted a\ngorgeous snippet by a Christian who happens to be unhappy with the\ncontents of the Bible, a story which is scarily similar to mine.\nOften people ask when I became atheist, and I can't answer them with a\ndate since it was more of a process, and reading the Bible (the entire\nthing) was among the earliest steps towards that end \u2014 the God I\nimagined couldn't allowed things as horrendous as portrayed in the Old\nTestament. I kept praying, asking God to help me keep my faith, but no\none answered :(\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/tainted-teresa", 
            "title": "tainted Teresa", 
            "text": "While I was thinking of the topic I covered in noble dreams,\nMother Teresa appeared in my mind due the imagery of nobility that she\npossesses. I decided to go check out her story for inspiration,\nand came back disappointed and even shocked at much of her (alleged)\nshortcomings.\nNevertheless, I was captivated by her words:\n\n[our mission is to take care of] the hungry, the naked, the\nhomeless, the crippled, the blind, the lepers, all those people who\nfeel unwanted, unloved, uncared for throughout society, people that\nhave become a burden to the society and are shunned by everyone.\n\u2014source\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/noble-dreams", 
            "title": "noble dreams", 
            "text": "update: I am not running a business anymore (I gave up trying), and\nthe major dream mentioned here died with it. So am keeping this here for\nits historical value... it's also not bad writing.\n\nI was having a discussion with a colleague over chat software, asking\nher about her major dreams. After some deliberations, and after\nrevealing my own dream of helping a million people, I was touched when\nshe stated she wanted to open a clinic offering free services as well as\na place to help unemployed mothers. I immediately wished I was rich\nenough to grant her the dream.\nOne reason I asked this question is I'm actually interested in what's in\nother people's minds and am often looking for inspiration. Her dream\nreminds of a fantasy I once had, like if I had a billion Rands (divide\nby ~8 to get US$), what I'd do is build a hospital and fund it for years\non end. That's largely because SA public hospitals generally stink, both\nliterally and figuratively. And while on that topic, I was recently\ndiscussing with a friend that there were other issues that escalated the\nproblem before we even talk of insufficient funding: efficiency and\ncorruption.\nWhile still on the dreaming side of things, someone mentioned that a\ndream that truly drives a person is normally ego-driven. Reminds me of a\ngreat dream of becoming a DD (Debian Developer) which kinda died. An\nacquaintance also has an ego-driven dream of owning a private medical\nlab. He did however admitted that it was a negotiable dream, and that\nqualifies it as a fantasy.\nWhile still on medical things, there's yet another acquaintance whose\ndream it is to build a clinic of some sort, but I actually forgot the\ndetails. What's interesting however is that when I asked specific\nquestions like how big it is and some such, she couldn't answer, stating\nnot having visualised it that far. I have learnt the importance of\nvisualising a dream thoroughly because that solidifies it pretty well,\nhelping it get further away from the fantasy category.\nAnother friend also touched me when he mentioned one dream of setting up\na soup kitchen for homeless people. Noble stuff that.\nDreams are great because focusing on them help reduce the pain of\nhardship. They can be as simple as \"the salary will help me pay that\ndebt, and maintain my lifestyle too\", and those are worthwhile dreams\ntoo, at least enough to have millions of displeased workers wake up\nevery morning to get to work. I've also met quite a number of people\nwhose main dream is retirement. It used to be my driving passion and\nmotivator in building my business, but I'm now more driven by what I'll\ndo with the ample time I'll have at my disposal after that moment, and\neven more than that, am driven my the million lives dream (helping a\nmillion people), most especially the ways in which I'll make that\nhappen: starting worker co-operatives, free IT training, FLOSS\n(Free/Libre an Open Source Software) development funding...\nActually noble dreams, the \"I want to help improve the world\" sort, are\nmy favorites and I always get excited when someone mentions such, not\nthose of \"I want to have this house and that car\". I probably am\ndishonest with myself, but as much as I drool at the sight and thought\nof a Bentley Continental GT, pumping the retail cost of that beauty into\nfeeding a 100 hungry kids for a month is more my thing. I do of course\nhave non-noble dreams: travelling Africa and the world for fun,\nacquiring a decent entertainment system and a serious gaming PC (am I a\nsucker for hardware-pushing high-end games!), visit international film\nfestivals (am I a sucker for movies!), and even produce some short\nmovies, preferably animated, preferably with FLOSS (I am a\npolitically-charged wannabe!).\nA friend of mine, a sports sucker, wants to sponsor one kid to go\nprofessional in that field. Having loved to have had such an opportunity\nas a kid, he wants to ensure some deserving kid doesn't meet the same\nfate (and end up in career s/he dislikes). I know at least two other\nhighly-gifted people who didn't further their sporting careers due to\nlack of support (likely financial). That's painful actually and\nshouldn't happen to anyone. Another friend of mine wants to open a\ndancing facility to help get kids off the streets. I'm not sure if\nthat's a negotiable dream or not (it didn't sound like a priority item,\nneither did the sports sponsorship thing by the way) but we are to find\nout in due time...\nA brother of mine, a gifted and multi-talented (composer, producer,\narranger, mixer, vocalist, sound engineer, writer) musician, wants to\nhelp groom and promote a number of small-time artists. That would really\nhelp in an industry where talent isn't enough to propel one further.\nAlso, this is in an industry where too many lacking that talent are\npropelled forward regardless.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/there-had-better-not-be-life-out-there", 
            "title": "there had better not be life out there!", 
            "text": "I thoroughly enjoyed re-reading an essay on why we better hope we\ndon't discover extra-terrestrial life. It's 8 pages of superb writing\nand is pretty thorough (check how he explains the myriad possibilities,\nand how he challenges even those), and nearly as exciting as the 1st\ntime I read Richard Feynman's \"There's Plenty of Room At the\nBottom\". I consider this essential reading for any enquiring mind.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/unrealized-dreams", 
            "title": "unrealized dreams", 
            "text": "My biggest dream for a long while was becoming a DD (Debian Developer),\nbut why am I not pursuing that? Let me just say laziness and lack of\nmotivation, or even lack of focus. There's so many things I want to be\ntechnically proficient at and it's tough to choose one (Python coding,\nDebian system admin, GTK+, Tracker, Xorg). And there's distractions\nall over the place.\nWhether I'm going ahead with this is still unresolved so the dream ain't\nnearly dead, but the dead dream is that of becoming an academic in some\nfield. As with FLOSS there's many interesting fields to choose from\n(mathematics, electronics, computer science, physics) but I ain't going\nany of these routes, most likely because I don't enjoy formal education,\ndisliking the pressures involved. Hating stress, I would rather pursue\nthese on my own as I'm doing with FLOSS. Or maybe I'm just a chicken,\nafraid of committing! I mean I didn't even finish my university degree\ndue to similar excuses I mention above. Ah well...\n"
        }, 
        {
            "tags": "arts", 
            "loc": "http://tshepang.net/illadelph-halflife", 
            "title": "Illadelph Halflife", 
            "text": "This is undoubtedly the best album by The Roots, and includes\ntimeless acts like:\n\nSection\nWot They Do\nRespond/React\nPush Up Ya Lighter\nNo Alibi\nItal (The Universal Side)\n\nListening to Section is actually what prompted me to write this post,\nfor I loved it so much that I wondered if Next Movement (from their\nlater [Things Fall Apart album][]), which I have for a long time\nregarded as the best hip-hop track ever, deserves it's position at the\ntop of the group's work, and therefore removing it from the list of\nhip-hop landmarks.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/python-perl-and-now-java", 
            "title": "Python, Perl, and now Java", 
            "text": "I'm grateful that there's so much I'm learning at my new job, stuff I\nwouldn't really learn on my own, like Perl (this one out of curiosity,\nespecially because it's a major competitor of my favorite, Python).\nI write this post in response to the fact that now I will be learning\nJava, what I secretly swore I'd stay away from, not because it's bad,\nbut because it's hard to find anyone favouring it in my world (Debian,\nGNOME, Python), a world that proclaim it to be a disgusting pile of\nshit. Anyways let's see how the ride will pan out.\nAs for Perl, I found its string-handling capabilities exceedingly\npowerful but its syntax ugly and over-varied \u2014 too much of a free-form\nlanguage. That's bad for someone used to the gracious elegance of mighty\nPython. If I could stay away from it, I would!\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/the-mighty-mitch-sala", 
            "title": "the mighty Mitch Sala", 
            "text": "If ever you admire someone excessively to a point of nearly letting out\na tear, you tend to get worried, perhaps due to pride, that you may be\ntoo obsessed. This was a case when Mitch Sala, an impossibly-successful\nAustralian businessman, who undertook a job to inspire more people to be\nsuccessful in Amway. He came through to South Africa and made a powerful\npresentation, \"and I even got to shake his hand!\"\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/discarding-scribes-for-geany", 
            "title": "discarding Scribes for Geany", 
            "text": "The version of Scribes in development didn't prove too satisfactory\nafter a while (black background which I didn't care to investigate how\nto revert to normal, among whatever other trouble I don't remember) and\nthere was me also unloving the idea of switching text editors, so\ndecided to get stuck with Geany, and am not complaining much. It's\nbeen a year-and-a-half of pleasure and pain and it was well worth it.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/anarchism-rocks", 
            "title": "anarchism rocks?", 
            "text": "I was innocently doing some FLOSS reading when I bumped on a real\ngorgeous description on why anarchy is the best possible society ever\nimagined.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-manoj-srivastava", 
            "title": "developer of note: Manoj Srivastava", 
            "text": "Manoj Srivastava has for a number of years been Project Secretary,\na very key role in Debian, a role where the incumbent\nruns project voting. What prompted this post is his recent\nresignation, which was encouraged by hostility towards the handling of\nthe recent controversial ballot. As evidenced by the various\nsupporters and my own experience, he happens to be among the wisest\nof all DD's. He is also among the most senior of all,\nhaving been involved since 1995.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/reprepro-saved-my-live", 
            "title": "reprepro saved my live", 
            "text": "Much of this is obsolete: I no longer build my own Debian packages.\n\nThat's a joke title, but that fabulous tool really did help me a\nlot. When doing package builds, all I need to run is the following\nafter a build:\n$ rm *udeb\n$ reprepro --basedir ~/.repo_directory includedeb sid *deb\n$ sudo apt-get update\n\nThe first command removes debian-installer packages which I don't need,\nthe second takes the remaining packages and adds them into the\nreprepro-managed Debian repository while also making them available in\nthe Packages file, and the third updates the system's apt database in\norder to pick up the changes. Also, if I want to get rid of something\nfrom the repo, all I do is:\n\n$ reprepro --basedir ~/.repo_directory removesrc sid glibc\n\nI don't know why anyone would love to remove glibc binary packages, but\nit's that simple.\nAchieving this used to be painful before I discovered reprepro, for I\ndid the whole thing manually, which was not scalable since old packages\nwere sitting rotting in the repo, making it grow beyond 30GB (it now is\nabout 10GB). This also meant that I ran 'apt-ftparchive packages' on the\nentire .debs each time I wanted an updated Packages file, and that was\ndozens of minutes of heavy I/O. This painful life has been going on for\na number of months, and am stupid that I didn't search harder for a\nbetter solution.\nBefore doing things this way, I was making use of the nifty APTonCD,\nbut it started to become unusable due to excessive memory consumption\nafter some system updates. It's not clear where the bug lies, nor do I\nknow if it's a known problem, which I didn't report because I was using\nUbuntu's package, a much improved and re-written 0.1.98, as opposed to\nDebian's 'bug-free' 0.1 (though I later discovered the bug to exist when\nrunning the package in Ubuntu 8.10 too).\n\nan update on how I do things now\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/gnome-killer-app", 
            "title": "GNOME killer app", 
            "text": "GNOME system monitor applet it is.\nMany times when I'm thinking of using a different desktop suite, I know\nthat I'm not gon have an equal of GNOME's system monitor applet. In\nDebian, this applet defaults to displaying CPU usage but can be set to\ndisplay more, including memory and hard disk usage. This is among the\nthings I add to the panel on every fresh install (for I always am\ncurious what's up with my system). Given how useful it is, I now wonder\nwhy Debian doesn't add it on the panel by default, especially that many\nnew users won't even be aware it exists in the first place.\n\nClicking on that applet launches a more comprehensive system monitor\nwhich has 4 tabs (notebooks in GTK+ speak):\n\na recently-added one that displays high-level system info (processor\nmodel, RAM capacity) which was a much-needed equivalent of Windows'\nown utility\none that shows mounted filesystems (pretty handy really)\none that displays live CPU, RAM, and network usage info, which\nrecently (perhaps GNOME 2.22 released March this year) received a\nmajor facelift\nand last and least, the one that got a process monitor that feels\nlike a painfully stripped-down top (from procps)\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/scribes-satisfies-some-more", 
            "title": "Scribes satisfies some more", 
            "text": "I'm currently running development version of Scribes (from bzr repo) and\nit got fixes for two very annoying bugs:\n\nOn opening a non-UTF8 file you'd get a message asking you to open it\nvia the app's file-selector, an uncomfortably long way around it; the\nversion from bzr offers a choice of the encoding and then we live\nhappily ever after.\nA worse problem that occurred when opening the file described above\nis that on closing the error dialogue, all other open Scribes windows\nwould also close.\n\nAll what this means is that Scribes remains installed on my machine(s).\n\nsidenote: Code-folding is still absent although I won't need to use\nit since Geany does a nice job already.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/1-more-machine-2-less", 
            "title": "1 more machine, 2 less", 
            "text": "Since I've departed from previous job, I've lost access to two machines,\nbut more than made up for it by acquiring an Acer Travelmate 6592,\na feature-rich laptop complete with wireless connectivity (802.11a/b/g),\nBluetooth, card readers, fingerprint scanner, webcam, Firewire,\nand even age-old DB9 serial port, while also not being short\non specs (Intel T7500 processor, 2GB DDR2, 250GB HDD).\nEven better, unlike those two machines, I also get to take it home.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/ubuntu-810-impressions", 
            "title": "Ubuntu 8.10 impressions", 
            "text": "I haven't ran Ubuntu since 7.04 and gave 8.10 a try recently, primarily\nfor doing wireless web connection at new job, and also that our sysadmin\nshowed it to me in action with its NetworkManager 0.7 glory in action\nand had the installer handy. As I've come to expect from Ubuntu, the\ndefaults artwork just looks gorgeous and with an especially stunning\ndesktop background. It was also the first time I actually got to\nexperience the 3D desktop effects that people have been making noise\nabout these past several months (I did try this before, on Debian, but\nit was a mess with me having to go see README.Debian thing and still not\nmanaging, while in Ubuntu's case, it was mere clicks away which I found\nthrough the handy Ubuntu user manual, which is easily accessible on the\nGNOME panel, and that's what Debian desktop needs).\nMe became happy with Firefox which remembered the previously-visited\npaths (via the back-button) on session-restore, a feature I often miss\nwhen working with Epiphany.\nSome warts I've seen so far:\n\nThe installer's insistence on running the whole desktop before\ninstallation sucks because it really prolongs installation, and made\nworse by a lack of a visible alternative option.\nThe feature I once praised in debian-installer, which informs one of\nthe limits whithin which one may resize existing hard drive\npartitions, is absent in Ubuntu's installer. The graphical\npartitioner does however looks real slick.\nDoes not remember running apps when session is restarted.\nAnd I've already experienced 2 system freezes after running some\nupdates, and the sort where I have to force machine reset.\n\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/farewell-at-old-job", 
            "title": "farewell at old job", 
            "text": "I was yesterday honored with a farewell party at my company, at which I\nworked as integration technician (opto-electro-mechanical engineering\nindustry) for nearly five years. And there was even chocolates for me to\ntake home with, while having people throwing accolades at me like I was\nsort of useful... I really should be thankful for the accomodation (and\nmonies) I was granted and am excited for the next challenge.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-1st-python-tool", 
            "title": "my 1st Python tool", 
            "text": "A senior of mine at my current job has asked me to write a tool to\nconvert from UFF format to csv for easy spreadsheet processing,\nproducing results that proved most beneficial to me (the path towards\ncode mastery). The tool is less than 200 lines of Python code, and I\neven got a peek at the necessary changes to have it run on Python 3 (and\nsuccessfully doing so), as well as experiencing the relatively\nunchallenging problems of getting it to run on Windows XP (it was\ndeveloped on Debian). Of course I would not have bothered had the\nrequirement not been getting it to run on that most popular of end-user\nOSes. But Python's cross-platform nature makes it easy, and their work\non getting the supporting suite (installer, IDE, Python shell) easy to\ninstall and run on Windows deserves serious respect.\nBy the way I haven't so far learned the importance/use of classes so the\nentire thing is in functions. And the code is also extremely slow (and\neven slower on WinXP) and only does basic checks for the validity of the\nsource file to be processed so will loudly crash on corrupted files.\nOther than that, the tool is pretty robust and made my 'client' real\nhappy, considering the previous tool was really broken by design (a pain\nto work with, being muddled with severe limitations) and also relied on\nMatlab being installed.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/favorite-laptop", 
            "title": "favorite laptop", 
            "text": "The laptop that I previously mentioned is named Compaq/HP nx7010 and\nis the most favorite I've ever used (despite that it's only the second\nlaptop I've ever used heavily). I suspect I like it mostly because of\nthe feel of the keyboard, and its 1.7GHz Pentium M is really more than\nadequate for the modest tasks I throw at it; and its only set-back is\nthe placement of the 3 USB ports - at the back. It's a pity that I'll\nhave to leave it behind since I'm changing jobs. I also use an external\nUSB mouse, which also enhances the experience. [update]\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/me-got-meself-a-coding-job", 
            "title": "me got meself a coding job", 
            "text": "I had one of the most exciting moments in my life when I got offered a\njob at a software development company (the title is Analyst: Software\nEngineering). I don't even know what my planned-for tasks are, and I was\nall the more surprised because I think I didn't do well at the\ninterview. Great news is I didn't expect a coding job so soon,\nespecially given I don't have previous professional exposure.\nI am an electronic technician (lesser than an engineer) by trade and am\npretty unhappy in my current job (testing, calibration, and\nfault-finding of gyro-stabilised airborne surveillance/observation\nsystems). That's partly because I don't really get challenged since I'm\non a production line. I do strongly doubt I'd be job-hunting was I in\ndevelopment/engineering.\nBest of all however is I'll be working on software, a dream job really,\nconsidering I love computers and all, and specifically the software part\nof it. Electronics is fine too, but the last time I really got close to\nit was back in school, and I'm here talking of design, not \"testing,\ncalibration...\".\nHow lucky can one get!\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/810-looks-good", 
            "title": "8.10 looks good", 
            "text": "Ubuntu 8.10 Beta has been released and, if the annoucement is to be\nrelied upon, things look good.\nWhat stands out above all else for me is 'guest sessions' which allows\nusers who don't have login credentials access to the system. It's\ninteresting that such a thing has been non-existent (or at least I don't\nknow how to set it up) in the distros I've used so far, and really is\nuseful, EG when you just wanna play some music from a machine. Many a\ntime I get glad when easily getting into a Microsoft system even though\nthat compromises security, a problem easily fixed in this release's\ninclusion of easy encryption of user folders, which I suppose should\nhide confidential data from prying eyes.\nThat's not to say I'm gon be running an Ubuntu system anytime soon,\nespecially given that I'm rather happy here (okay, sometimes; I mean how\nlong am I going to wait for GNOME 2.24 to reach Sid) in Debian-land of\ncourse, and can only wait for those features.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/enjoying-net-connection-at-home-finally", 
            "title": "enjoying net connection at home, finally", 
            "text": "After suffering with being forced to access the net on Windows XP for\nover 2 weeks, I'm glad things turned out as I envisioned for I managed\nto get my device working on Debian with a lot of help. Here's what\nwent into my /etc/wvdial.conf:\n\nI had to run sudo modprobe usbserial vendor=0x1d09 product=0x4000\nand then sudo wvdial neotel afterwards and then I lived happily for\nlong...\nNow why is XP so uncomfortable? I'm used to many of the conveniences of\nDebian that are absent in XP or I'm not motivated to find replacements for\nstuff like workspaces, copy-text-on-highlight, Epiphany, Quod Libet,\ndebmirror, Nautilus, ...\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/my-machines", 
            "title": "my machines", 
            "text": "I have, since my first machine in 2004, owned 2 other complete systems:\n\na Dell Inspiron desktop Core 2 Duo (Conroe) system boasting 2GB RAM\nand 160GB HDD\na power-hungry and underperfoming Pentium 4 Prescott system\n(3.06GHz/1GB RAM)\n\nI currently primarily use the old P4 and it's still pretty decent at\n2.66GHz and 0.5GB of RAM. It also sports a DVD-Writer and 250GB HDD, all\nSATA. The other systems are used by those close to me for one reason or\nanother.\nThe Dell Inspiron is my most recent machine. It got 3-year warranty on\nit (which was quite a surprise) so I'm not touching its insides. This\nsystem currenly dual-boots with Windows XP which a relative of mine uses\nfor music production, a task he claims FLOSS can't satisfactorily\nfulfill.\nI should note the other systems I use at work:\n\nAn HP Core 2 Duo Conroe 1.86GHz/1GB RAM desktop, my primary workhorse\nfor building Debian, which dual-boots with Windows XP since it\nactually is a shared machine for those I work with in the area (about\na dozen people), and of course a bit over-powered for what is claimed\nto be an 'email-checking' and 'printing' machine. I just manage to\nfind time in-between these email/printing sessions to have it do the\ngrunt-work.\na recently-acquired Pentium M 1.7GHz/500MB RAM HP/Compaq laptop which\nprovides quite decent performance too and a claimed battery life of\n2+ hrs. This system also dual-boots with Windows XP since nearly all\nthat we need at work uses it. It's also the system where I do\nsoftware/programming study and miscellaneous reading on since it's\nthe only system at work I have exclusive access to.\n[expansion/update]\n\nI've neglected to mention the other 2 systems I'm not interested in,\nwhich I use at work for some work tasks, both Windows-based (and going\nas far back as Windows 98!), and both under-powered but pretty\nwell-suited to their specific tasks (except that I still have to use\nmicro-floppy diskettes), and also uniteresting because they aren't\nrunning my favorite operating system, Debian.\nThat's 6 systems in total all running Debian, 3 of which dual-boot with\nWindows XP, 1 dual-booting with Windows Vista (the Core 2 laptop), and 2\n(including my primary system, mt first) purely Debian. Of these, the\nonly one with internet access is the desktop HP system at work actually,\nmainly because web-access in SA isn't nearly as affordable as I'd like.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/only-the-processor-survives", 
            "title": "only the processor survives", 
            "text": "I only recently realized that my oldest computer system, the first I\never bought, has all been renewed, bar the processor, an old-style P4\n(Northwood) purchased July 2004.\nThe original 80GB HDD, which I loved due to high reliability despite\nserious punishment (I did so much experimenting with it including\nmultiple OS installations) until it failed earlier this year.\nThe motherboard failed several months ago (difficult problems involving\nUSB connectivity and lack of sound, all intermittent, all resulting in\nemotional pain).\nThe SONY DVD-Writer which I loved due running reliably for years until\nit failed earlier this year. I also lost the power supply which kept\nresetting when, say for example I was inserting an optical disk and the\nHDD was doing much seeking (both of which must have induced unberable\npower spikes the PSU), an obvious sign of deterioration, and great\nsource of emotional pain too.\nThe replacement included a case as well, so yes, even the case ain't\noriginal.\nAdditionally, I was initially all PATA (with those fucking annoying IDE\ncables) and am all SATA now (luckily the replacement motherboard got 2\nSATA ports, which is all I needed since I only got 1 optical drive and 1\nHDD).\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/net-connection-at-home-finally", 
            "title": "net connection at home, finally", 
            "text": "I got internet connection at home on September 12th (access at work\nhas been terminated). It's a 10GB/month connection that goes for R600\n(around $80). Not too cheap but it's the cheapest (per MB) in the\ncountry though, as far as I know.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/being-friendly-towards-customers", 
            "title": "being friendly towards customers", 
            "text": "I just a read a very interesting post on how to gain market share,\nand what prompted me to post is the following snippet which states the\nadvantages of being friendly towards customers:\n\n...It reminds me of independent booksellers, who said \"why should I\nmake it comfortable for people to read books in my store? I want\nthem to buy the books!\" And then one day Barnes and Nobles puts\ncouches and cafes in the stores and practically begged people\nto read books in their store without buying them. Now you've got all\nthese customers sitting in their stores for hours at a time,\nmittengrabben all the books with their filthy hands, and the\nprobability that they find something they want to buy is linearly\nproportional to the amount of time they spend in the store, and even\nthe dinkiest Barnes and Nobles superstore in Iowa City rakes in\nhundreds of dollars a minute while the independent booksellers are\ngoing out of business. Honey, Shakespeare and Company on Manhattan's\nUpper West Side did not close because Barnes and Nobles had\ncheaper prices, it closed because Barnes and Nobles had more human\nbeings in the building.\nI used to frequent some local book/magazine franchise whose merchandise\nI liked but just couldn't afford.\nThat made the experience uncomfortable, the risk of being told to leave.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/nuclear-power-needs-greater-exploitation", 
            "title": "nuclear power needs greater exploitation?", 
            "text": "\n\nSo hybrid cars are just one piece of the bigger solution because the\nproblem is huge. Spewing billions of tons of carbon, plus 20,000\ntons of thorium and uranium, plus thousands of tons of mercury and\narsenic into the air and our lungs is just stupid. It is especially\nwrong for people to fear nuclear power whose worst accident was\nChernobyl with 50 dead and 4000 made very ill when coal kills more\nthan that in about an hour.\n\u2014source\n\nAnother person who believes that harnessing the power of the atom\nis the way to go to help avert the global energy crisis.\nI am compelled to agree, though the issue is a complex one.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-andreas-barth", 
            "title": "developer of note: Andreas Barth", 
            "text": "Andreas Barth is about as a great a Debian release manager as Steve\nLangasek, and though he recently stated the wish to reduce time on\nrelease management, he just did a thorough analysis on the status of\nthe hppa port.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/more-tracker-goodness", 
            "title": "more Tracker goodness", 
            "text": "Tracker's applet has recently received a revamp which, when clicked,\nlaunches Tracker Search Tool instead of displaying the search box.\nThat's a minor detail considering the other work included in the 2\nrecent releases, most especially the option to auto-pause the daemon\nwhen X events (mouse movement, keyboard presses) are taking place, a\nfeature which helps with system responsiveness. This shit rocks,\nabsolutely!\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/wtc-twin-towers-and-the-bbc-documentary", 
            "title": "WTC twin towers and the BBC documentary", 
            "text": "I normally dislike documentaries which tend to be dumbed-down,\nover-emphasizing certain concepts, and worse still, treated with\nover-dramatic music and other cinematic touches like re-enactments and\ncamera play. That's why Part 1 of Imagination: A Short History of Tall\nBuildings, happens to be quite a relief, since it turns to be of mild\npresentation with excellent use of music, apart from also being a very\neffective piece in its primary purpose of providing information. It\nactually brings again to life my love for high-rises which, in my\nmemory, really began when I saw a tremendously gorgeous picture of the\nManhattan skyline, with the twin towers at the center, an image I found\nin World Book Encyclopedia back in 1995. That image made me fall in love\nwith those twin towers, which to me were the most interesting structures\nin all of New York, such that I still don't understand why I hear that\nmany didn't like the structures, the reason for which I still have to\nfind out.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/tracker-goodness", 
            "title": "Tracker goodness", 
            "text": "Tracker hasn't been around as long as Beagle has but seems more\nadvanced, possessing various utilities like the applet which can be used\nto launch all Tracker GUI utilities (Tracker Search Tool, Tracker\nPreferences, and Tracker Statistics), displaying the daemon (trackerd)\nstatus, providing the functionality of pausing the Tracker daemon, as\nwell as providing a (convenient) search dialogue [update]. I wonder\nif Beagle has lovely tools like this, but it's main advantage is that it\nsupports far more data formats that Tracker does, while it still is\nhungry for memory (version 0.3.2).\nOne particular thing that encouraged this post however is Tracker\nStatistics, when I discovered that it actually is self-updating. This\nchange, which I apparently missed, was committed October last year, and\ngot me really impressed. Now if only all those advanced options were\nless buggy...\nWhile I'm at it I might as well mention how much I love the new Tracker\nPreferences feature which makes it restart/reindex user's data depending\non what preferences were changed. That's gorgeous. Now if only it\nperformed such restarting/reindex faster than it often does (especially\nwhen it is indexing), since one often has to wait 'forever' for such to\nhappen.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/games-in-debian", 
            "title": "games in Debian", 
            "text": "Blob Wars, which resembles Mario, has become a serious hit with my\n9-year-old brother and a number of friends, which makes me happy since\nit could very well become their GNU/Linux killer app. I came across it\nwhile looking for some Debian games on the request of that brother, who\nwas then responsible for spreading its fame.\nAlso, Ceferino, a more favorite of mine, seems to also be catching up\nwith Blob Wars with that same game-lover crew.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-alexander-larsson", 
            "title": "developer of note: Alexander Larsson", 
            "text": "I could not keep away from admiring the tremendous amount of work she\ndoes, most recently GVFS and GIO (both of which have just been\nreleased), and previously, GtkPrint.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/quod-libet-and-arrogance", 
            "title": "Quod Libet and arrogance", 
            "text": "I've just seen, for the first time in memory, a concept of arrogant\ndesign stated publicly,\na concept whose awareness previously existed only in my mind.\nThis concept was brought up by my experiences with Quod Libet,\nmy favorite audio player.\nIt unfortunately doesn't conform to some common standards:\n\nI can't open a song directly from a file manager (Nautilus) requiring\nme to open the application itself first, as if it's the standard\noperating environment, yet it's folder view is less than perfect, in\nthat it doesn't automatically update the contents if changed\nexternally.\nIt doesn't use well-known shortcuts like B for previous track and N\nfor next track, and invents its own, and if there's not enough\nalready.\nIt does not allow me to drag a folder containing tracks, meaning I\nhave to use its own interface to open all tracks.\n\nAs regards the first link here, someone else also stated that Scribes'\ndesign is arrogant too, though I don't think so. Scribes is just\nexcellent and I don't see the need for another editor, except if it had\ncode 'folding' and started-up faster than the current Scribes' 10\nseconds. [update: such a replacement was eventually discovered!]\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/anarchism-and-the-gpl", 
            "title": "Anarchism and the GPL", 
            "text": "I was reading some old Debian posts where there was an argument brewing\nregarding the existence of anarchy within Debian. A notable point raised\nwas that the existence of the GPL, the leading FLOSS licence, was\nimpossible because a licence's existence requires laws to exist. The\nargument was that, since anarchy is against law (due to the idea that\nlaw is designed to defend the elites and oppress the majority), then\nthere can't be free software.\nWhat's notable about the argument is that it's a pretty dumb. Now since\nanarchy ain't mainstream, it seems okay to use the current system to\nenforce some form of anarchy by law (use what little you have). GPL\ncreator himself states that free software (subset of FLOSS) existed in\nMIT without requiring licences and then states that it's companies which\nrefused open access to code, forcing GPL creator (Richard Stallman) to\nstart a project to develop a truly free Operating System. In an\nanarchistic society, there certainly seems to be no motivation to\ndevelop non-FLOSS, but in today's rogue society, there's plenty.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/one-less-angel", 
            "title": "one less angel", 
            "text": "There are not that many people I know personally who are angels, and one\nof those died recently as a result of a car and truck collision. The\nother occupants in the car, all three of them, did not survive either.\nThe tragedy is more notable because the guy, Yandisa Mfokazi, was among\nmy greatest friends ever. This is the guy whose family treated me like\nroyalty on a recent visit.\nOf all personal losses I have ever experienced, this is the greatest.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/tracker-060", 
            "title": "Tracker 0.6.0", 
            "text": "6 months have passed since the previous Tracker release and it's real\ngreat to have another fresh one. During development, its GUI\ninterface (TST) has went through two revamps, each being an improvement\non the previous one. This implies that those who have only ever used\nthat January's release have missed a TST which had categories (All\nFiles, Documents, Images, ...) which were presented as tabs, which\nshouldn't matter anyways since the current interface, which uses a\nsidebar instead, rocks like hell. Another highlight is the inclusion of\ntracker-preferences UI which allows for easy configuration.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/swarm-theory", 
            "title": "swarm theory", 
            "text": "It's interesting that the article that documents swarm behaviour\nconfirms the philosophy that I've held for a few years now that states\nthat \"human society is too complex to comprehend\". It's also interesting\nthat the article's conclusion is pretty compatible with a [society\nimagined by anarchists][].\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-steve-langasek", 
            "title": "developer of note: Steve Langasek", 
            "text": "Steve Langasek has been Debian release manager for over two years and\nalways managed to impress me with his technical knowledge of Debian\npackaging as well as relentless effort into getting this, the Debian\nsystem, into a releasable operating system. He is the definitive Debian\nwatchdog, for I often pay attention when it's his turn to talk on\nmailing lists, and he also happens to be among the most powerful of all\nDD's (for it's said that Debian release managers tend to be more\npowerful than Debian project leaders). Grandmaster!\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/anarchism-and-teen-sexuality", 
            "title": "Anarchism and teen sexuality", 
            "text": "There's a well-researched document named The Anarchist FAQ (AFAQ)\nincluded in Debian which I spent some time reading. This wasn't a\nfirst-time effort by the way, for the doc is very large. What prompted\nthe post is the very radical idea contained therein that parents should\nencourage their teens to engage in sexual activity, defending such a\nposition by pointing to evidence that much social decay owes to sexual\ntaboos. It's really amazing what I read and I haven't been intrigued so\nmuch by a philosophical theory in such a long time. Oh, and by the way,\nanarchism is an extremely attractive theory, though I have very many\nquestions still. I'll keep studying to understand more.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/nanotech-and-open-source", 
            "title": "Nanotech and Open Source", 
            "text": "I was fascinated to find that Christine Peterson of Nanotech fame\ncoined the term Open Source (more or less, a business-friendly name\nfor Free/Libre software, leading to a common compromise of calling the\nentire thing FLOSS for Free/Libre/Open Source Software). I remember Eric\nDrexler, possibly the greatest force in that most anticipated of\ntechnologies, mentioning something about FLOSS but I didn't know that he\nwas so closely-invoved as to personally interact with Bruce Perens, one\nof the key FLOSS representatives.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/debian-and-linux", 
            "title": "Debian and Linux", 
            "text": "There is a Debian history discussion among Debian old-timers where\na point was raised that Ian Murdock, Debian founder,\nsuccessfully transferred project leadership to someone else, a fact that\nBdale Garbee stated to not yet have taken place with Linux, the\nposter child of FLOSS. It's also interesting to see Murdock praise\nsuccessive leadership as superior to his.\n"
        }, 
        {
            "tags": "misc", 
            "loc": "http://tshepang.net/a-visit-to-eastern-cape", 
            "title": "a visit to Eastern Cape", 
            "text": "I enjoyed the beautiful countryside of Nyosini, a small (a few hundred\nhouseholds?) rural village nearby a buzzing Mount Frere, a town set atop\na hill of the same name. This Eastern Cape village is the home of a\nfriend of mine and the visit happened to be an excuse to see the\nprovince for the first time in my life, and the highlight was the\namazing hospitality granted by the home we stayed during most of the\nvisit, and the closeness of family I experienced here is unmatched in\nmemory. Notable and positive mention ought be granted to 3 characters\n(Lwazi, Bongo, Siya) for reasons I'm too lazy to mention, much like I\nwon't mention yet 3 more characters. [another visit]\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/developer-of-note-aurelien-jarno", 
            "title": "developer of note: Aurelien Jarno", 
            "text": "In celebration of the beginning of this exercise, I recognize Aurelien\nJarno as a very notable developer. This is due to his tireless efforts\nas the number one GLibC co-maintainer in Debian since several months (if\nthe package's debian changelog is to be relied upon). Also, GLibC,\ntogether with GCC and Linux, ought to be regarded as the most important\npackages of any GNU/Linux system.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/scribes-building-gnome-216-with-debian", 
            "title": "Scribes; building GNOME 2.16 with Debian", 
            "text": "In order to minimize bandwidth usage, I have recently restricted myself\nto building a local repository consisting only of source packages as\nopposed to the previous times when I only did binary package downloads.\nThis was helped by my recently-acquired skill of building Debian\npackages from source, most often just 3 simple commands:\n\napt-get build-dep nautilus (retrieves nautilus' build\ndependencies)\nsudo apt-get source --build nautilus (downloads nautilus' source\ninto current directory and builds a Debian binary package out of it)\nsudo dpkg --install *deb (installs the .deb files stated on the\ncommand line onto the system)\n\nI've been practicing the above procedure on several packages, including\nmonsters like Linux, GLibC and OpenOffice.org, and it worked pretty\nwell.\nI did the same for GNOME 2.16/2.18 packages (Debian GNOME maintainers\nhaven't completed the job of migrating to 2.18 yet) available in\nDebian's Experimental repository. This effort was initially targetted\nat building 2.16 version of python-gnome and 2.10 version of python-gtk2\nin order to try to build Scribes, after a previous failure. But then,\nsince I had much GNOME infrastructure (libgtk2, libbonono, libgnomevfs2,\n...) already built, I proceeded on building some of my favorites as well\n(nautilus, gnome-terminal, gedit, etc.), and, even though I only had ~3\nhours of sleep, I woke up a happy being.\nI almost forgot to mention that Scribes managed to run properly, though\nI didn't have enough time to check it out properly. It sure looks good\nand am looking forward to it.\n[a day later]\nAlthough I managed to get Scribes to hang at least once, here's the\nmore positive facts:\n\nI really do love the auto-save feature\nthe interface is real clean, providing a fresh departure from the\nstately (and beloved) gedit\nit's got word-suggestion by default\nthere's some other nifty nice features like various editing\ncapabilities which are far more powerful than gedit provides\n\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/1st-usage-of-rss-feeds", 
            "title": "1st usage of RSS feeds", 
            "text": "Browsing Debian Planet today led me to the usage of Google Reader.\nI've been ignoring this technology because I was too lazy to figure it out,\nbut Google Reader makes it so easy it does not require me to think. Is kool.\n"
        }, 
        {
            "tags": "computing", 
            "loc": "http://tshepang.net/1st-floss-patch-contribution", 
            "title": "1st FLOSS patch contribution", 
            "text": "Back in January 2007, I sent a patch that slightly improved the README\nfile found in the root directory of Tracker, an exciting project that\nis meant to be a data indexer (like Google Desktop) and much more.\nThis is what I consider the first ever FLOSS contribution I ever made. I\nwent on to make some minor code patches which also taught me a few\nthings, like GTK+ and GLib API.\n"
        }
    ]
}